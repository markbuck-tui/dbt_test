2019-09-30 16:57:24,844 (MainThread): Tracking: tracking
2019-09-30 16:57:24,887 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005CBC608>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C8E348>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C8B508>]}
2019-09-30 16:57:25,238 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-09-30 16:57:25,238 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: ResourceWarning: unclosed <socket.socket fd=488, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('10.33.118.61', 64360), raddr=('54.164.98.48', 443)>

2019-09-30 16:57:25,240 (MainThread): Error sending message, disabling tracking
2019-09-30 16:57:25,310 (MainThread): Parsing macros\core.sql
2019-09-30 16:57:25,358 (MainThread): Parsing macros\adapters\common.sql
2019-09-30 16:57:25,454 (MainThread): Parsing macros\etc\datetime.sql
2019-09-30 16:57:25,492 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-09-30 16:57:25,511 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-09-30 16:57:25,532 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-09-30 16:57:25,554 (MainThread): Parsing macros\etc\is_incremental.sql
2019-09-30 16:57:25,610 (MainThread): Parsing macros\etc\query.sql
2019-09-30 16:57:25,651 (MainThread): Parsing macros\materializations\helpers.sql
2019-09-30 16:57:25,679 (MainThread): Parsing macros\materializations\common\merge.sql
2019-09-30 16:57:25,702 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-09-30 16:57:25,733 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-09-30 16:57:25,770 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-09-30 16:57:25,827 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-09-30 16:57:25,844 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-09-30 16:57:25,874 (MainThread): Parsing macros\materializations\table\table.sql
2019-09-30 16:57:25,896 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-09-30 16:57:25,991 (MainThread): Parsing macros\materializations\view\view.sql
2019-09-30 16:57:26,018 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-09-30 16:57:26,037 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-09-30 16:57:26,058 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-09-30 16:57:26,075 (MainThread): Parsing macros\schema_tests\unique.sql
2019-09-30 16:57:26,091 (MainThread): Parsing macros\adapters.sql
2019-09-30 16:57:26,125 (MainThread): Parsing macros\catalog.sql
2019-09-30 16:57:26,145 (MainThread): Parsing macros\materializations\incremental.sql
2019-09-30 16:57:26,169 (MainThread): Parsing macros\materializations\merge.sql
2019-09-30 16:57:26,188 (MainThread): Parsing macros\materializations\table.sql
2019-09-30 16:57:26,202 (MainThread): Parsing macros\materializations\view.sql
2019-09-30 16:57:26,234 (MainThread): Parsing model.dbt_test.create_table_booking_fact_uk
2019-09-30 16:57:26,237 (MainThread): Acquiring new snowflake connection "create_table_booking_fact_uk".
2019-09-30 16:57:26,237 (MainThread): Opening a new connection, currently in state init
2019-09-30 16:57:26,239 (MainThread): c:\python\python37\lib\site-packages\botocore\vendored\requests\models.py:169: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working

2019-09-30 16:57:27,486 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\botocore\\vendored\\requests\\cacert.pem'>

2019-09-30 16:57:27,526 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\certifi\\cacert.pem'>

2019-09-30 16:57:28,135 (MainThread): Parsing model.dbt_test.v_booking_fact_uk
2019-09-30 16:57:28,137 (MainThread): Acquiring new snowflake connection "v_booking_fact_uk".
2019-09-30 16:57:28,137 (MainThread): Re-using an available connection from the pool (formerly create_table_booking_fact_uk).
2019-09-30 16:57:28,241 (MainThread): Found 2 models, 0 tests, 0 snapshots, 0 analyses, 117 macros, 0 operations, 0 seed files, 0 sources
2019-09-30 16:57:28,243 (MainThread): 
2019-09-30 16:57:28,245 (MainThread): 16:57:28 | Concurrency: 1 threads (target='dev')
2019-09-30 16:57:28,246 (MainThread): 16:57:28 | 
2019-09-30 16:57:28,255 (Thread-1): Acquiring new snowflake connection "v_booking_fact_uk".
2019-09-30 16:57:28,256 (Thread-1): Opening a new connection, currently in state init
2019-09-30 16:57:28,811 (Thread-1): Compiling model.dbt_test.v_booking_fact_uk
2019-09-30 16:57:28,854 (Thread-1): Writing injected SQL for node "model.dbt_test.v_booking_fact_uk"
2019-09-30 16:57:28,878 (Thread-1): Acquiring new snowflake connection "create_table_booking_fact_uk".
2019-09-30 16:57:28,878 (Thread-1): Re-using an available connection from the pool (formerly v_booking_fact_uk).
2019-09-30 16:57:28,879 (Thread-1): Compiling model.dbt_test.create_table_booking_fact_uk
2019-09-30 16:57:28,891 (Thread-1): Writing injected SQL for node "model.dbt_test.create_table_booking_fact_uk"
2019-09-30 16:57:28,972 (MainThread): Connection 'v_booking_fact_uk' was left open.
2019-09-30 16:57:28,973 (MainThread): On v_booking_fact_uk: Close
2019-09-30 16:57:29,048 (MainThread): Connection 'create_table_booking_fact_uk' was left open.
2019-09-30 16:57:29,049 (MainThread): On create_table_booking_fact_uk: Close
2019-09-30 16:57:29,157 (MainThread): 16:57:29 | Done.
2019-09-30 16:57:29,159 (MainThread): Flushing usage events
2019-10-01 11:52:28,542 (MainThread): Tracking: tracking
2019-10-01 11:52:28,557 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C8D5C8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C927C8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C6CD88>]}
2019-10-01 11:52:28,911 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 11:52:28,912 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: ResourceWarning: unclosed <socket.socket fd=488, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('10.32.130.75', 52588), raddr=('54.164.98.48', 443)>

2019-10-01 11:52:28,915 (MainThread): Error sending message, disabling tracking
2019-10-01 11:52:28,993 (MainThread): Parsing macros\core.sql
2019-10-01 11:52:29,023 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 11:52:29,084 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 11:52:29,106 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 11:52:29,111 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 11:52:29,115 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 11:52:29,119 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 11:52:29,123 (MainThread): Parsing macros\etc\query.sql
2019-10-01 11:52:29,139 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 11:52:29,175 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 11:52:29,188 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 11:52:29,207 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 11:52:29,238 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 11:52:29,270 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 11:52:29,274 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 11:52:29,289 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 11:52:29,297 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 11:52:29,304 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 11:52:29,313 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 11:52:29,316 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 11:52:29,319 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 11:52:29,322 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 11:52:29,339 (MainThread): Parsing macros\adapters.sql
2019-10-01 11:52:29,353 (MainThread): Parsing macros\catalog.sql
2019-10-01 11:52:29,357 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 11:52:29,366 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 11:52:29,381 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 11:52:29,398 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 11:52:29,417 (MainThread): Parsing model.dbt_test.create_table_booking_fact_uk
2019-10-01 11:52:29,418 (MainThread): Acquiring new snowflake connection "create_table_booking_fact_uk".
2019-10-01 11:52:29,418 (MainThread): Opening a new connection, currently in state init
2019-10-01 11:52:29,421 (MainThread): c:\python\python37\lib\site-packages\botocore\vendored\requests\models.py:169: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working

2019-10-01 11:52:30,017 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\botocore\\vendored\\requests\\cacert.pem'>

2019-10-01 11:52:30,051 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\certifi\\cacert.pem'>

2019-10-01 11:52:30,632 (MainThread): Parsing model.dbt_test.v_booking_fact_uk
2019-10-01 11:52:30,633 (MainThread): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 11:52:30,633 (MainThread): Re-using an available connection from the pool (formerly create_table_booking_fact_uk).
2019-10-01 11:52:30,703 (MainThread): Found 2 models, 0 tests, 0 snapshots, 0 analyses, 117 macros, 0 operations, 0 seed files, 0 sources
2019-10-01 11:52:30,704 (MainThread): 
2019-10-01 11:52:30,705 (MainThread): 11:52:30 | Concurrency: 1 threads (target='dev')
2019-10-01 11:52:30,706 (MainThread): 11:52:30 | 
2019-10-01 11:52:30,709 (Thread-1): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 11:52:30,710 (Thread-1): Opening a new connection, currently in state init
2019-10-01 11:52:31,268 (Thread-1): Compiling model.dbt_test.v_booking_fact_uk
2019-10-01 11:52:31,291 (Thread-1): Writing injected SQL for node "model.dbt_test.v_booking_fact_uk"
2019-10-01 11:52:31,301 (Thread-1): Acquiring new snowflake connection "create_table_booking_fact_uk".
2019-10-01 11:52:31,301 (Thread-1): Re-using an available connection from the pool (formerly v_booking_fact_uk).
2019-10-01 11:52:31,302 (Thread-1): Compiling model.dbt_test.create_table_booking_fact_uk
2019-10-01 11:52:31,313 (Thread-1): Writing injected SQL for node "model.dbt_test.create_table_booking_fact_uk"
2019-10-01 11:52:31,414 (MainThread): Connection 'v_booking_fact_uk' was left open.
2019-10-01 11:52:31,414 (MainThread): On v_booking_fact_uk: Close
2019-10-01 11:52:31,488 (MainThread): Connection 'create_table_booking_fact_uk' was left open.
2019-10-01 11:52:31,489 (MainThread): On create_table_booking_fact_uk: Close
2019-10-01 11:52:31,582 (MainThread): 11:52:31 | Done.
2019-10-01 11:52:31,583 (MainThread): Flushing usage events
2019-10-01 13:50:19,609 (MainThread): Tracking: tracking
2019-10-01 13:50:19,613 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C91448>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C91348>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C6C808>]}
2019-10-01 13:50:19,959 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 13:50:19,960 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: ResourceWarning: unclosed <socket.socket fd=488, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('10.32.130.75', 57844), raddr=('54.164.98.48', 443)>

2019-10-01 13:50:19,961 (MainThread): Error sending message, disabling tracking
2019-10-01 13:50:19,991 (MainThread): Parsing macros\core.sql
2019-10-01 13:50:20,005 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 13:50:20,053 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 13:50:20,064 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 13:50:20,067 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 13:50:20,072 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 13:50:20,076 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 13:50:20,080 (MainThread): Parsing macros\etc\query.sql
2019-10-01 13:50:20,085 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 13:50:20,096 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 13:50:20,107 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 13:50:20,124 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 13:50:20,156 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 13:50:20,198 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 13:50:20,205 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 13:50:20,220 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 13:50:20,228 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 13:50:20,235 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 13:50:20,244 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 13:50:20,248 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 13:50:20,251 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 13:50:20,256 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 13:50:20,271 (MainThread): Parsing macros\adapters.sql
2019-10-01 13:50:20,289 (MainThread): Parsing macros\catalog.sql
2019-10-01 13:50:20,309 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 13:50:20,318 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 13:50:20,323 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 13:50:20,328 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 13:50:20,375 (MainThread): Parsing model.dbt_test.with_ar_agent
2019-10-01 13:50:20,376 (MainThread): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 13:50:20,376 (MainThread): Opening a new connection, currently in state init
2019-10-01 13:50:20,379 (MainThread): c:\python\python37\lib\site-packages\botocore\vendored\requests\models.py:169: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working

2019-10-01 13:50:20,730 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\botocore\\vendored\\requests\\cacert.pem'>

2019-10-01 13:50:20,752 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\certifi\\cacert.pem'>

2019-10-01 13:50:21,409 (MainThread): Parsing model.dbt_test.with_ar_currency
2019-10-01 13:50:21,410 (MainThread): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 13:50:21,410 (MainThread): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 13:50:21,415 (MainThread): Parsing model.dbt_test.with_ar_market
2019-10-01 13:50:21,416 (MainThread): Acquiring new snowflake connection "with_ar_market".
2019-10-01 13:50:21,416 (MainThread): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 13:50:21,420 (MainThread): Parsing model.dbt_test.with_ar_officename
2019-10-01 13:50:21,421 (MainThread): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 13:50:21,421 (MainThread): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 13:50:21,426 (MainThread): Parsing model.dbt_test.with_ar_point
2019-10-01 13:50:21,428 (MainThread): Acquiring new snowflake connection "with_ar_point".
2019-10-01 13:50:21,428 (MainThread): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 13:50:21,433 (MainThread): Parsing model.dbt_test.with_ar_sellstatic
2019-10-01 13:50:21,434 (MainThread): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 13:50:21,434 (MainThread): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 13:50:21,442 (MainThread): Parsing model.dbt_test.with_ar_sellunit
2019-10-01 13:50:21,445 (MainThread): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 13:50:21,445 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 13:50:21,454 (MainThread): Parsing model.dbt_test.with_ar_staticroom
2019-10-01 13:50:21,455 (MainThread): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 13:50:21,455 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 13:50:21,459 (MainThread): Parsing model.dbt_test.with_ar_staticstock
2019-10-01 13:50:21,460 (MainThread): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 13:50:21,461 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 13:50:21,466 (MainThread): Parsing model.dbt_test.with_ar_transinvroute
2019-10-01 13:50:21,468 (MainThread): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 13:50:21,468 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 13:50:21,476 (MainThread): Parsing model.dbt_test.with_ar_transinvroutesector
2019-10-01 13:50:21,478 (MainThread): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 13:50:21,478 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 13:50:21,484 (MainThread): Parsing model.dbt_test.with_ar_transinvsector
2019-10-01 13:50:21,485 (MainThread): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 13:50:21,485 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 13:50:21,490 (MainThread): Parsing model.dbt_test.with_ar_transroute
2019-10-01 13:50:21,491 (MainThread): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 13:50:21,491 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 13:50:21,495 (MainThread): Parsing model.dbt_test.with_ar_usercodes
2019-10-01 13:50:21,498 (MainThread): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 13:50:21,498 (MainThread): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 13:50:21,506 (MainThread): Parsing model.dbt_test.with_booking_fact_margin
2019-10-01 13:50:21,508 (MainThread): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 13:50:21,508 (MainThread): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 13:50:21,518 (MainThread): Parsing model.dbt_test.with_dates
2019-10-01 13:50:21,520 (MainThread): Acquiring new snowflake connection "with_dates".
2019-10-01 13:50:21,520 (MainThread): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 13:50:21,529 (MainThread): Parsing model.dbt_test.with_fl_acr_booking
2019-10-01 13:50:21,531 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 13:50:21,531 (MainThread): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 13:50:21,536 (MainThread): Parsing model.dbt_test.with_fl_acr_booking_service
2019-10-01 13:50:21,537 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 13:50:21,537 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 13:50:21,542 (MainThread): Parsing model.dbt_test.with_fl_acr_service
2019-10-01 13:50:21,543 (MainThread): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 13:50:21,543 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 13:50:21,548 (MainThread): Parsing model.dbt_test.with_fl_acr_service_element
2019-10-01 13:50:21,549 (MainThread): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 13:50:21,549 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 13:50:21,609 (MainThread): Found 20 models, 0 tests, 0 snapshots, 0 analyses, 117 macros, 0 operations, 0 seed files, 0 sources
2019-10-01 13:50:21,612 (MainThread): 
2019-10-01 13:50:21,613 (MainThread): 13:50:21 | Concurrency: 1 threads (target='dev')
2019-10-01 13:50:21,613 (MainThread): 13:50:21 | 
2019-10-01 13:50:21,618 (Thread-1): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 13:50:21,618 (Thread-1): Opening a new connection, currently in state init
2019-10-01 13:50:22,147 (Thread-1): Compiling model.dbt_test.with_ar_agent
2019-10-01 13:50:22,159 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 13:50:22,174 (Thread-1): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 13:50:22,174 (Thread-1): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 13:50:22,178 (Thread-1): Compiling model.dbt_test.with_ar_currency
2019-10-01 13:50:22,187 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 13:50:22,209 (Thread-1): Acquiring new snowflake connection "with_ar_market".
2019-10-01 13:50:22,215 (Thread-1): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 13:50:22,216 (Thread-1): Compiling model.dbt_test.with_ar_market
2019-10-01 13:50:22,238 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_market"
2019-10-01 13:50:22,293 (Thread-1): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 13:50:22,297 (Thread-1): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 13:50:22,299 (Thread-1): Compiling model.dbt_test.with_ar_officename
2019-10-01 13:50:22,324 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 13:50:22,383 (Thread-1): Acquiring new snowflake connection "with_ar_point".
2019-10-01 13:50:22,386 (Thread-1): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 13:50:22,387 (Thread-1): Compiling model.dbt_test.with_ar_point
2019-10-01 13:50:22,401 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_point"
2019-10-01 13:50:22,423 (Thread-1): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 13:50:22,427 (Thread-1): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 13:50:22,428 (Thread-1): Compiling model.dbt_test.with_ar_sellstatic
2019-10-01 13:50:22,440 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 13:50:22,455 (Thread-1): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 13:50:22,458 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 13:50:22,459 (Thread-1): Compiling model.dbt_test.with_ar_sellunit
2019-10-01 13:50:22,469 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 13:50:22,485 (Thread-1): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 13:50:22,485 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 13:50:22,486 (Thread-1): Compiling model.dbt_test.with_ar_staticroom
2019-10-01 13:50:22,500 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 13:50:22,517 (Thread-1): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 13:50:22,517 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 13:50:22,518 (Thread-1): Compiling model.dbt_test.with_ar_staticstock
2019-10-01 13:50:22,531 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 13:50:22,559 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 13:50:22,563 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 13:50:22,564 (Thread-1): Compiling model.dbt_test.with_ar_transinvroute
2019-10-01 13:50:22,584 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 13:50:22,612 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 13:50:22,612 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 13:50:22,620 (Thread-1): Compiling model.dbt_test.with_ar_transinvroutesector
2019-10-01 13:50:22,635 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 13:50:22,650 (Thread-1): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 13:50:22,651 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 13:50:22,651 (Thread-1): Compiling model.dbt_test.with_ar_transinvsector
2019-10-01 13:50:22,667 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 13:50:22,689 (Thread-1): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 13:50:22,690 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 13:50:22,693 (Thread-1): Compiling model.dbt_test.with_ar_transroute
2019-10-01 13:50:22,704 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 13:50:22,729 (Thread-1): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 13:50:22,729 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 13:50:22,730 (Thread-1): Compiling model.dbt_test.with_ar_usercodes
2019-10-01 13:50:22,741 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 13:50:22,761 (Thread-1): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 13:50:22,762 (Thread-1): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 13:50:22,762 (Thread-1): Compiling model.dbt_test.with_booking_fact_margin
2019-10-01 13:50:22,783 (Thread-1): Writing injected SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 13:50:22,820 (Thread-1): Acquiring new snowflake connection "with_dates".
2019-10-01 13:50:22,820 (Thread-1): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 13:50:22,821 (Thread-1): Compiling model.dbt_test.with_dates
2019-10-01 13:50:22,850 (Thread-1): Writing injected SQL for node "model.dbt_test.with_dates"
2019-10-01 13:50:22,880 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 13:50:22,880 (Thread-1): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 13:50:22,881 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking
2019-10-01 13:50:22,904 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 13:50:22,927 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 13:50:22,929 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 13:50:22,930 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking_service
2019-10-01 13:50:22,940 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 13:50:22,953 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 13:50:22,956 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 13:50:22,957 (Thread-1): Compiling model.dbt_test.with_fl_acr_service
2019-10-01 13:50:22,967 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 13:50:22,994 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 13:50:22,997 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 13:50:22,998 (Thread-1): Compiling model.dbt_test.with_fl_acr_service_element
2019-10-01 13:50:23,011 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 13:50:23,074 (MainThread): Connection 'with_fl_acr_service_element' was left open.
2019-10-01 13:50:23,075 (MainThread): On with_fl_acr_service_element: Close
2019-10-01 13:50:23,162 (MainThread): Connection 'with_fl_acr_service_element' was left open.
2019-10-01 13:50:23,162 (MainThread): On with_fl_acr_service_element: Close
2019-10-01 13:50:23,339 (MainThread): 13:50:23 | Done.
2019-10-01 13:50:23,339 (MainThread): Flushing usage events
2019-10-01 13:51:52,928 (MainThread): Tracking: tracking
2019-10-01 13:51:52,930 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C93748>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005CBE388>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005CBE5C8>]}
2019-10-01 13:51:53,243 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 13:51:53,244 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: ResourceWarning: unclosed <socket.socket fd=488, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('10.32.130.75', 57859), raddr=('54.174.31.151', 443)>

2019-10-01 13:51:53,246 (MainThread): Error sending message, disabling tracking
2019-10-01 13:51:53,272 (MainThread): Parsing macros\core.sql
2019-10-01 13:51:53,283 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 13:51:53,349 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 13:51:53,359 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 13:51:53,361 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 13:51:53,364 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 13:51:53,368 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 13:51:53,370 (MainThread): Parsing macros\etc\query.sql
2019-10-01 13:51:53,373 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 13:51:53,382 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 13:51:53,396 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 13:51:53,410 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 13:51:53,427 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 13:51:53,451 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 13:51:53,454 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 13:51:53,468 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 13:51:53,475 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 13:51:53,486 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 13:51:53,496 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 13:51:53,501 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 13:51:53,503 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 13:51:53,505 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 13:51:53,508 (MainThread): Parsing macros\adapters.sql
2019-10-01 13:51:53,521 (MainThread): Parsing macros\catalog.sql
2019-10-01 13:51:53,524 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 13:51:53,536 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 13:51:53,539 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 13:51:53,543 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 13:51:53,567 (MainThread): Parsing model.dbt_test.with_ar_agent
2019-10-01 13:51:53,570 (MainThread): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 13:51:53,570 (MainThread): Opening a new connection, currently in state init
2019-10-01 13:51:53,572 (MainThread): c:\python\python37\lib\site-packages\botocore\vendored\requests\models.py:169: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working

2019-10-01 13:51:53,840 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\botocore\\vendored\\requests\\cacert.pem'>

2019-10-01 13:51:53,855 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\certifi\\cacert.pem'>

2019-10-01 13:51:54,475 (MainThread): Parsing model.dbt_test.with_ar_currency
2019-10-01 13:51:54,476 (MainThread): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 13:51:54,476 (MainThread): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 13:51:54,481 (MainThread): Parsing model.dbt_test.with_ar_market
2019-10-01 13:51:54,482 (MainThread): Acquiring new snowflake connection "with_ar_market".
2019-10-01 13:51:54,482 (MainThread): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 13:51:54,486 (MainThread): Parsing model.dbt_test.with_ar_officename
2019-10-01 13:51:54,487 (MainThread): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 13:51:54,487 (MainThread): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 13:51:54,492 (MainThread): Parsing model.dbt_test.with_ar_point
2019-10-01 13:51:54,493 (MainThread): Acquiring new snowflake connection "with_ar_point".
2019-10-01 13:51:54,493 (MainThread): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 13:51:54,498 (MainThread): Parsing model.dbt_test.with_ar_sellstatic
2019-10-01 13:51:54,499 (MainThread): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 13:51:54,499 (MainThread): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 13:51:54,504 (MainThread): Parsing model.dbt_test.with_ar_sellunit
2019-10-01 13:51:54,505 (MainThread): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 13:51:54,505 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 13:51:54,510 (MainThread): Parsing model.dbt_test.with_ar_staticroom
2019-10-01 13:51:54,512 (MainThread): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 13:51:54,512 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 13:51:54,516 (MainThread): Parsing model.dbt_test.with_ar_staticstock
2019-10-01 13:51:54,518 (MainThread): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 13:51:54,518 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 13:51:54,524 (MainThread): Parsing model.dbt_test.with_ar_transinvroute
2019-10-01 13:51:54,524 (MainThread): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 13:51:54,525 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 13:51:54,529 (MainThread): Parsing model.dbt_test.with_ar_transinvroutesector
2019-10-01 13:51:54,530 (MainThread): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 13:51:54,531 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 13:51:54,535 (MainThread): Parsing model.dbt_test.with_ar_transinvsector
2019-10-01 13:51:54,536 (MainThread): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 13:51:54,536 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 13:51:54,541 (MainThread): Parsing model.dbt_test.with_ar_transroute
2019-10-01 13:51:54,542 (MainThread): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 13:51:54,543 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 13:51:54,548 (MainThread): Parsing model.dbt_test.with_ar_usercodes
2019-10-01 13:51:54,549 (MainThread): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 13:51:54,549 (MainThread): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 13:51:54,554 (MainThread): Parsing model.dbt_test.with_booking_fact_margin
2019-10-01 13:51:54,555 (MainThread): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 13:51:54,555 (MainThread): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 13:51:54,560 (MainThread): Parsing model.dbt_test.with_dates
2019-10-01 13:51:54,561 (MainThread): Acquiring new snowflake connection "with_dates".
2019-10-01 13:51:54,561 (MainThread): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 13:51:54,565 (MainThread): Parsing model.dbt_test.with_fl_acr_booking
2019-10-01 13:51:54,566 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 13:51:54,567 (MainThread): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 13:51:54,571 (MainThread): Parsing model.dbt_test.with_fl_acr_booking_service
2019-10-01 13:51:54,572 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 13:51:54,573 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 13:51:54,577 (MainThread): Parsing model.dbt_test.with_fl_acr_service
2019-10-01 13:51:54,579 (MainThread): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 13:51:54,579 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 13:51:54,585 (MainThread): Parsing model.dbt_test.with_fl_acr_service_element
2019-10-01 13:51:54,586 (MainThread): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 13:51:54,586 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 13:51:54,646 (MainThread): Found 20 models, 0 tests, 0 snapshots, 0 analyses, 117 macros, 0 operations, 0 seed files, 0 sources
2019-10-01 13:51:54,649 (MainThread): 
2019-10-01 13:51:54,650 (MainThread): Acquiring new snowflake connection "master".
2019-10-01 13:51:54,650 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 13:51:54,671 (MainThread): Parsing macros\core.sql
2019-10-01 13:51:54,676 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 13:51:54,749 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 13:51:54,759 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 13:51:54,761 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 13:51:54,767 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 13:51:54,771 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 13:51:54,774 (MainThread): Parsing macros\etc\query.sql
2019-10-01 13:51:54,776 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 13:51:54,784 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 13:51:54,793 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 13:51:54,801 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 13:51:54,819 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 13:51:54,840 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 13:51:54,843 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 13:51:54,862 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 13:51:54,869 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 13:51:54,875 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 13:51:54,881 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 13:51:54,884 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 13:51:54,886 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 13:51:54,889 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 13:51:54,892 (MainThread): Parsing macros\adapters.sql
2019-10-01 13:51:54,904 (MainThread): Parsing macros\catalog.sql
2019-10-01 13:51:54,907 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 13:51:54,924 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 13:51:54,928 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 13:51:54,934 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 13:51:55,113 (MainThread): Using snowflake connection "master".
2019-10-01 13:51:55,113 (MainThread): On master: select distinct schema_name
    from OPA_DEV.information_schema.schemata
    where catalog_name ilike 'OPA_DEV'
2019-10-01 13:51:55,796 (MainThread): SQL status: SUCCESS 29 in 0.68 seconds
2019-10-01 13:51:55,852 (MainThread): Using snowflake connection "master".
2019-10-01 13:51:55,852 (MainThread): On master: BEGIN
2019-10-01 13:51:55,985 (MainThread): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 13:51:55,986 (MainThread): Using snowflake connection "master".
2019-10-01 13:51:55,986 (MainThread): On master: select
      table_catalog as database,
      table_name as name,
      table_schema as schema,
      case when table_type = 'BASE TABLE' then 'table'
           when table_type = 'VIEW' then 'view'
           when table_type = 'MATERIALIZED VIEW' then 'materializedview'
           when table_type = 'EXTERNAL TABLE' then 'externaltable'
           else table_type
      end as table_type
    from OPA_DEV.information_schema.tables
    where table_schema ilike 'dbt_test'
      and table_catalog ilike 'opa_dev'
2019-10-01 13:51:57,282 (MainThread): SQL status: SUCCESS 2 in 1.30 seconds
2019-10-01 13:51:57,284 (MainThread): On master: ROLLBACK
2019-10-01 13:51:57,661 (MainThread): Using snowflake connection "master".
2019-10-01 13:51:57,661 (MainThread): On master: BEGIN
2019-10-01 13:51:57,810 (MainThread): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 13:51:57,811 (MainThread): On master: COMMIT
2019-10-01 13:51:57,811 (MainThread): Using snowflake connection "master".
2019-10-01 13:51:57,811 (MainThread): On master: COMMIT
2019-10-01 13:51:57,971 (MainThread): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 13:51:57,972 (MainThread): 13:51:57 | Concurrency: 1 threads (target='dev')
2019-10-01 13:51:57,972 (MainThread): 13:51:57 | 
2019-10-01 13:51:57,975 (Thread-1): 13:51:57 | 1 of 20 START view model DBT_TEST.with_ar_agent...................... [RUN]
2019-10-01 13:51:57,976 (Thread-1): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 13:51:57,976 (Thread-1): Opening a new connection, currently in state init
2019-10-01 13:51:58,449 (Thread-1): Compiling model.dbt_test.with_ar_agent
2019-10-01 13:51:58,454 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 13:51:58,487 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 13:51:58,511 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 13:51:58,511 (Thread-1): On with_ar_agent: BEGIN
2019-10-01 13:51:58,668 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 13:51:58,668 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 13:51:58,669 (Thread-1): On with_ar_agent: create or replace view OPA_DEV.DBT_TEST.with_ar_agent as (
    

SELECT DISTINCT
  ag_1.agt_id
  ,ag_1.def_mkt_id
  ,ag_1.agt_tp_id
FROM opa_stg_uk.ar_agent ag_1
WHERE ag_1.file_dt = (SELECT MAX(ag_2.file_dt) FROM opa_stg_uk.ar_agent ag_2 WHERE ag_1.agt_id = ag_2.agt_id)
  );
2019-10-01 13:51:58,950 (Thread-1): SQL status: SUCCESS 1 in 0.28 seconds
2019-10-01 13:51:58,952 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 13:51:58,952 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 13:51:58,952 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 13:51:59,046 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 13:51:59,051 (Thread-1): 13:51:59 | 1 of 20 OK created view model DBT_TEST.with_ar_agent................. [SUCCESS 1 in 1.07s]
2019-10-01 13:51:59,053 (Thread-1): 13:51:59 | 2 of 20 START view model DBT_TEST.with_ar_currency................... [RUN]
2019-10-01 13:51:59,056 (Thread-1): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 13:51:59,056 (Thread-1): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 13:51:59,057 (Thread-1): Compiling model.dbt_test.with_ar_currency
2019-10-01 13:51:59,065 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 13:51:59,076 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 13:51:59,084 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 13:51:59,084 (Thread-1): On with_ar_currency: BEGIN
2019-10-01 13:51:59,207 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 13:51:59,207 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 13:51:59,208 (Thread-1): On with_ar_currency: create or replace view OPA_DEV.DBT_TEST.with_ar_currency as (
    

SELECT DISTINCT
  cur_1.cur_id
  ,cur_1.cd
  ,cur_1.name
FROM opa_stg_uk.ar_currency cur_1
WHERE cur_1.file_dt = (SELECT MAX(cur_2.file_dt) FROM opa_stg_uk.ar_currency cur_2 WHERE cur_1.cur_id = cur_2.cur_id)
  );
2019-10-01 13:51:59,557 (Thread-1): SQL status: SUCCESS 1 in 0.35 seconds
2019-10-01 13:51:59,558 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 13:51:59,559 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 13:51:59,559 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 13:51:59,654 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 13:51:59,658 (Thread-1): 13:51:59 | 2 of 20 OK created view model DBT_TEST.with_ar_currency.............. [SUCCESS 1 in 0.60s]
2019-10-01 13:51:59,659 (Thread-1): 13:51:59 | 3 of 20 START view model DBT_TEST.with_ar_market..................... [RUN]
2019-10-01 13:51:59,662 (Thread-1): Acquiring new snowflake connection "with_ar_market".
2019-10-01 13:51:59,662 (Thread-1): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 13:51:59,663 (Thread-1): Compiling model.dbt_test.with_ar_market
2019-10-01 13:51:59,670 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_market"
2019-10-01 13:51:59,679 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_market"
2019-10-01 13:51:59,685 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 13:51:59,685 (Thread-1): On with_ar_market: BEGIN
2019-10-01 13:51:59,794 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 13:51:59,794 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 13:51:59,795 (Thread-1): On with_ar_market: create or replace view OPA_DEV.DBT_TEST.with_ar_market as (
    

SELECT DISTINCT
  mk_1.mkt_id
  ,mk_1.off_id
FROM opa_stg_uk.ar_market mk_1
WHERE mk_1.file_dt = (SELECT MAX(mk_2.file_dt) FROM opa_stg_uk.ar_market mk_2 WHERE mk_1.mkt_id = mk_2.mkt_id)
  );
2019-10-01 13:52:00,049 (Thread-1): SQL status: SUCCESS 1 in 0.25 seconds
2019-10-01 13:52:00,051 (Thread-1): On with_ar_market: COMMIT
2019-10-01 13:52:00,051 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 13:52:00,051 (Thread-1): On with_ar_market: COMMIT
2019-10-01 13:52:00,144 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 13:52:00,148 (Thread-1): 13:52:00 | 3 of 20 OK created view model DBT_TEST.with_ar_market................ [SUCCESS 1 in 0.49s]
2019-10-01 13:52:00,149 (Thread-1): 13:52:00 | 4 of 20 START view model DBT_TEST.with_ar_officename................. [RUN]
2019-10-01 13:52:00,150 (Thread-1): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 13:52:00,150 (Thread-1): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 13:52:00,151 (Thread-1): Compiling model.dbt_test.with_ar_officename
2019-10-01 13:52:00,156 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 13:52:00,164 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 13:52:00,171 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 13:52:00,171 (Thread-1): On with_ar_officename: BEGIN
2019-10-01 13:52:00,277 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 13:52:00,277 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 13:52:00,278 (Thread-1): On with_ar_officename: create or replace view OPA_DEV.DBT_TEST.with_ar_officename as (
    

SELECT DISTINCT
  ofn_1.off_name_id
  ,ofn_1.cd
  ,ofn_1.name
  -- ,sm.source_market_code
FROM opa_stg_uk.ar_officename ofn_1
-- LEFT OUTER JOIN opa_stg_all.source_market sm ON 'UKATCOM|' || ofn_1.cd = bk_source_market
WHERE ofn_1.file_dt = (SELECT MAX(ofn_2.file_dt) FROM opa_stg_uk.ar_officename ofn_2 WHERE ofn_1.off_name_id = ofn_2.off_name_id)
  );
2019-10-01 13:52:00,583 (Thread-1): SQL status: SUCCESS 1 in 0.31 seconds
2019-10-01 13:52:00,584 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 13:52:00,584 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 13:52:00,584 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 13:52:00,700 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 13:52:00,704 (Thread-1): 13:52:00 | 4 of 20 OK created view model DBT_TEST.with_ar_officename............ [SUCCESS 1 in 0.55s]
2019-10-01 13:52:00,705 (Thread-1): 13:52:00 | 5 of 20 START view model DBT_TEST.with_ar_point...................... [RUN]
2019-10-01 13:52:00,707 (Thread-1): Acquiring new snowflake connection "with_ar_point".
2019-10-01 13:52:00,707 (Thread-1): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 13:52:00,707 (Thread-1): Compiling model.dbt_test.with_ar_point
2019-10-01 13:52:00,715 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_point"
2019-10-01 13:52:00,725 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_point"
2019-10-01 13:52:00,733 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 13:52:00,733 (Thread-1): On with_ar_point: BEGIN
2019-10-01 13:52:00,858 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 13:52:00,858 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 13:52:00,859 (Thread-1): On with_ar_point: create or replace view OPA_DEV.DBT_TEST.with_ar_point as (
    

SELECT
  p.pt_id
  ,p.pt_cd
FROM opa_stg_uk.ar_point p
WHERE p.file_dt = (SELECT MAX(p_2.file_dt) FROM opa_stg_uk.ar_point p_2 WHERE p.pt_id = p_2.pt_id)
  );
2019-10-01 13:52:01,217 (Thread-1): SQL status: SUCCESS 1 in 0.36 seconds
2019-10-01 13:52:01,218 (Thread-1): On with_ar_point: COMMIT
2019-10-01 13:52:01,218 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 13:52:01,218 (Thread-1): On with_ar_point: COMMIT
2019-10-01 13:52:01,311 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 13:52:01,314 (Thread-1): 13:52:01 | 5 of 20 OK created view model DBT_TEST.with_ar_point................. [SUCCESS 1 in 0.61s]
2019-10-01 13:52:01,315 (Thread-1): 13:52:01 | 6 of 20 START view model DBT_TEST.with_ar_sellstatic................. [RUN]
2019-10-01 13:52:01,317 (Thread-1): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 13:52:01,317 (Thread-1): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 13:52:01,317 (Thread-1): Compiling model.dbt_test.with_ar_sellstatic
2019-10-01 13:52:01,322 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 13:52:01,334 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 13:52:01,343 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 13:52:01,343 (Thread-1): On with_ar_sellstatic: BEGIN
2019-10-01 13:52:01,448 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 13:52:01,448 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 13:52:01,448 (Thread-1): On with_ar_sellstatic: create or replace view OPA_DEV.DBT_TEST.with_ar_sellstatic as (
    

SELECT
  sls_1.sell_stc_id
  ,sls_1.stc_stk_id
FROM opa_stg_uk.ar_sellstatic sls_1
WHERE sls_1.file_dt = (SELECT MAX(sls_2.file_dt) FROM opa_stg_uk.ar_sellstatic sls_2 WHERE sls_1.sell_stc_id = sls_2.sell_stc_id)
  );
2019-10-01 13:52:01,761 (Thread-1): SQL status: SUCCESS 1 in 0.31 seconds
2019-10-01 13:52:01,763 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 13:52:01,763 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 13:52:01,763 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 13:52:01,898 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 13:52:01,902 (Thread-1): 13:52:01 | 6 of 20 OK created view model DBT_TEST.with_ar_sellstatic............ [SUCCESS 1 in 0.58s]
2019-10-01 13:52:01,904 (Thread-1): 13:52:01 | 7 of 20 START view model DBT_TEST.with_ar_sellunit................... [RUN]
2019-10-01 13:52:01,905 (Thread-1): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 13:52:01,906 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 13:52:01,906 (Thread-1): Compiling model.dbt_test.with_ar_sellunit
2019-10-01 13:52:01,912 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 13:52:01,920 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 13:52:01,928 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 13:52:01,928 (Thread-1): On with_ar_sellunit: BEGIN
2019-10-01 13:52:02,093 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 13:52:02,094 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 13:52:02,094 (Thread-1): On with_ar_sellunit: create or replace view OPA_DEV.DBT_TEST.with_ar_sellunit as (
    

SELECT
  su.sell_unit_id
  ,su.rm_id
  ,su.bb_cd_id
FROM opa_stg_uk.ar_sellunit su
WHERE su.file_dt = (SELECT MAX(su_2.file_dt) FROM opa_stg_uk.ar_sellunit su_2 WHERE su.sell_unit_id = su_2.sell_unit_id)
  );
2019-10-01 13:52:02,495 (Thread-1): SQL status: SUCCESS 1 in 0.40 seconds
2019-10-01 13:52:02,497 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 13:52:02,497 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 13:52:02,498 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 13:52:02,606 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 13:52:02,610 (Thread-1): 13:52:02 | 7 of 20 OK created view model DBT_TEST.with_ar_sellunit.............. [SUCCESS 1 in 0.70s]
2019-10-01 13:52:02,611 (Thread-1): 13:52:02 | 8 of 20 START view model DBT_TEST.with_ar_staticroom................. [RUN]
2019-10-01 13:52:02,613 (Thread-1): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 13:52:02,613 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 13:52:02,614 (Thread-1): Compiling model.dbt_test.with_ar_staticroom
2019-10-01 13:52:02,619 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 13:52:02,631 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 13:52:02,639 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 13:52:02,639 (Thread-1): On with_ar_staticroom: BEGIN
2019-10-01 13:52:02,756 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 13:52:02,756 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 13:52:02,757 (Thread-1): On with_ar_staticroom: create or replace view OPA_DEV.DBT_TEST.with_ar_staticroom as (
    

SELECT
  sr.stc_rm_id
  ,sr.stc_stk_id
  ,sr.rm_id
FROM opa_stg_uk.ar_staticroom sr
WHERE sr.file_dt = (SELECT MAX(sr_2.file_dt) FROM opa_stg_uk.ar_staticroom sr_2 WHERE sr.stc_rm_id = sr_2.stc_rm_id)
  );
2019-10-01 13:52:03,016 (Thread-1): SQL status: SUCCESS 1 in 0.26 seconds
2019-10-01 13:52:03,017 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 13:52:03,017 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 13:52:03,017 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 13:52:03,258 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 13:52:03,262 (Thread-1): 13:52:03 | 8 of 20 OK created view model DBT_TEST.with_ar_staticroom............ [SUCCESS 1 in 0.65s]
2019-10-01 13:52:03,263 (Thread-1): 13:52:03 | 9 of 20 START view model DBT_TEST.with_ar_staticstock................ [RUN]
2019-10-01 13:52:03,264 (Thread-1): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 13:52:03,264 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 13:52:03,265 (Thread-1): Compiling model.dbt_test.with_ar_staticstock
2019-10-01 13:52:03,270 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 13:52:03,277 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 13:52:03,282 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 13:52:03,282 (Thread-1): On with_ar_staticstock: BEGIN
2019-10-01 13:52:03,421 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 13:52:03,422 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 13:52:03,422 (Thread-1): On with_ar_staticstock: create or replace view OPA_DEV.DBT_TEST.with_ar_staticstock as (
    

SELECT
  ss.stc_stk_id
  ,ss.cd
FROM opa_stg_uk.ar_staticstock ss
WHERE ss.file_dt = (SELECT MAX(ss_2.file_dt) FROM opa_stg_uk.ar_staticstock ss_2 WHERE ss.stc_stk_id = ss_2.stc_stk_id)
  );
2019-10-01 13:52:03,771 (Thread-1): SQL status: SUCCESS 1 in 0.35 seconds
2019-10-01 13:52:03,772 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 13:52:03,772 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 13:52:03,772 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 13:52:03,895 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 13:52:03,899 (Thread-1): 13:52:03 | 9 of 20 OK created view model DBT_TEST.with_ar_staticstock........... [SUCCESS 1 in 0.63s]
2019-10-01 13:52:03,900 (Thread-1): 13:52:03 | 10 of 20 START view model DBT_TEST.with_ar_transinvroute............. [RUN]
2019-10-01 13:52:03,902 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 13:52:03,902 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 13:52:03,902 (Thread-1): Compiling model.dbt_test.with_ar_transinvroute
2019-10-01 13:52:03,907 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 13:52:03,918 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 13:52:03,924 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 13:52:03,925 (Thread-1): On with_ar_transinvroute: BEGIN
2019-10-01 13:52:04,077 (Thread-1): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 13:52:04,078 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 13:52:04,078 (Thread-1): On with_ar_transinvroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroute as (
    

SELECT
  tir.trans_inv_route_id
  ,tir.trans_route_id
FROM opa_stg_uk.ar_transinvroute tir
WHERE tir.file_dt = (SELECT MAX(tir_2.file_dt) FROM opa_stg_uk.ar_transinvroute tir_2 WHERE tir.trans_inv_route_id = tir_2.trans_inv_route_id)
  );
2019-10-01 13:52:04,501 (Thread-1): SQL status: SUCCESS 1 in 0.42 seconds
2019-10-01 13:52:04,503 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 13:52:04,503 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 13:52:04,503 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 13:52:04,608 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 13:52:04,612 (Thread-1): 13:52:04 | 10 of 20 OK created view model DBT_TEST.with_ar_transinvroute........ [SUCCESS 1 in 0.71s]
2019-10-01 13:52:04,614 (Thread-1): 13:52:04 | 11 of 20 START view model DBT_TEST.with_ar_transinvroutesector....... [RUN]
2019-10-01 13:52:04,615 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 13:52:04,615 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 13:52:04,616 (Thread-1): Compiling model.dbt_test.with_ar_transinvroutesector
2019-10-01 13:52:04,621 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 13:52:04,631 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 13:52:04,640 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 13:52:04,641 (Thread-1): On with_ar_transinvroutesector: BEGIN
2019-10-01 13:52:04,757 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 13:52:04,758 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 13:52:04,758 (Thread-1): On with_ar_transinvroutesector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroutesector as (
    

SELECT
  tirs.trans_inv_route_id
  ,tirs.trans_inv_sec_id
  ,tirs.trans_inv_route_sec_id
FROM opa_stg_uk.ar_transinvroutesector tirs
WHERE tirs.file_dt = (SELECT MAX(tirs_2.file_dt) FROM opa_stg_uk.ar_transinvroutesector tirs_2 WHERE tirs.trans_inv_route_sec_id = tirs_2.trans_inv_route_sec_id)
  );
2019-10-01 13:52:05,016 (Thread-1): SQL status: SUCCESS 1 in 0.26 seconds
2019-10-01 13:52:05,018 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 13:52:05,018 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 13:52:05,019 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 13:52:05,151 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 13:52:05,154 (Thread-1): 13:52:05 | 11 of 20 OK created view model DBT_TEST.with_ar_transinvroutesector.. [SUCCESS 1 in 0.54s]
2019-10-01 13:52:05,155 (Thread-1): 13:52:05 | 12 of 20 START view model DBT_TEST.with_ar_transinvsector............ [RUN]
2019-10-01 13:52:05,157 (Thread-1): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 13:52:05,157 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 13:52:05,157 (Thread-1): Compiling model.dbt_test.with_ar_transinvsector
2019-10-01 13:52:05,162 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 13:52:05,171 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 13:52:05,181 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 13:52:05,181 (Thread-1): On with_ar_transinvsector: BEGIN
2019-10-01 13:52:05,415 (Thread-1): SQL status: SUCCESS 1 in 0.23 seconds
2019-10-01 13:52:05,416 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 13:52:05,416 (Thread-1): On with_ar_transinvsector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvsector as (
    

SELECT
  tis.trans_inv_sec_id
  ,tis.dep_dt_tm
FROM opa_stg_uk.ar_transinvsector tis
WHERE tis.file_dt = (SELECT MAX(tis_2.file_dt) FROM opa_stg_uk.ar_transinvsector tis_2 WHERE tis.trans_inv_sec_id = tis_2.trans_inv_sec_id)
  );
2019-10-01 13:52:05,799 (Thread-1): SQL status: SUCCESS 1 in 0.38 seconds
2019-10-01 13:52:05,800 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 13:52:05,801 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 13:52:05,801 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 13:52:05,909 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 13:52:05,913 (Thread-1): 13:52:05 | 12 of 20 OK created view model DBT_TEST.with_ar_transinvsector....... [SUCCESS 1 in 0.76s]
2019-10-01 13:52:05,914 (Thread-1): 13:52:05 | 13 of 20 START view model DBT_TEST.with_ar_transroute................ [RUN]
2019-10-01 13:52:05,915 (Thread-1): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 13:52:05,915 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 13:52:05,915 (Thread-1): Compiling model.dbt_test.with_ar_transroute
2019-10-01 13:52:05,921 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 13:52:05,933 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 13:52:05,943 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 13:52:05,943 (Thread-1): On with_ar_transroute: BEGIN
2019-10-01 13:52:06,055 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 13:52:06,055 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 13:52:06,055 (Thread-1): On with_ar_transroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transroute as (
    

SELECT
	tr.trans_route_id
	,tr.route_cd
FROM opa_stg_uk.ar_transroute tr
WHERE tr.file_dt = (SELECT MAX(tr_2.file_dt) FROM opa_stg_uk.ar_transroute tr_2 WHERE tr.trans_route_id = tr_2.trans_route_id)
  );
2019-10-01 13:52:06,308 (Thread-1): SQL status: SUCCESS 1 in 0.25 seconds
2019-10-01 13:52:06,309 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 13:52:06,309 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 13:52:06,309 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 13:52:06,401 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 13:52:06,410 (Thread-1): 13:52:06 | 13 of 20 OK created view model DBT_TEST.with_ar_transroute........... [SUCCESS 1 in 0.49s]
2019-10-01 13:52:06,412 (Thread-1): 13:52:06 | 14 of 20 START view model DBT_TEST.with_ar_usercodes................. [RUN]
2019-10-01 13:52:06,418 (Thread-1): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 13:52:06,419 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 13:52:06,420 (Thread-1): Compiling model.dbt_test.with_ar_usercodes
2019-10-01 13:52:06,430 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 13:52:06,446 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 13:52:06,467 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 13:52:06,468 (Thread-1): On with_ar_usercodes: BEGIN
2019-10-01 13:52:06,642 (Thread-1): SQL status: SUCCESS 1 in 0.17 seconds
2019-10-01 13:52:06,643 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 13:52:06,643 (Thread-1): On with_ar_usercodes: create or replace view OPA_DEV.DBT_TEST.with_ar_usercodes as (
    

SELECT DISTINCT
  uc_1.user_cd_id
  ,uc_1.cd
  ,uc_1.name
FROM opa_stg_uk.ar_usercodes uc_1
WHERE uc_1.file_dt = (SELECT MAX(uc_2.file_dt) FROM opa_stg_uk.ar_usercodes uc_2 WHERE uc_1.user_cd_id = uc_2.user_cd_id)
  );
2019-10-01 13:52:07,029 (Thread-1): SQL status: SUCCESS 1 in 0.39 seconds
2019-10-01 13:52:07,030 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 13:52:07,030 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 13:52:07,031 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 13:52:07,126 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 13:52:07,132 (Thread-1): 13:52:07 | 14 of 20 OK created view model DBT_TEST.with_ar_usercodes............ [SUCCESS 1 in 0.71s]
2019-10-01 13:52:07,134 (Thread-1): 13:52:07 | 15 of 20 START view model DBT_TEST.with_booking_fact_margin.......... [RUN]
2019-10-01 13:52:07,138 (Thread-1): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 13:52:07,139 (Thread-1): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 13:52:07,139 (Thread-1): Compiling model.dbt_test.with_booking_fact_margin
2019-10-01 13:52:07,149 (Thread-1): Writing injected SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 13:52:07,163 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 13:52:07,174 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 13:52:07,174 (Thread-1): On with_booking_fact_margin: BEGIN
2019-10-01 13:52:07,419 (Thread-1): SQL status: SUCCESS 1 in 0.25 seconds
2019-10-01 13:52:07,419 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 13:52:07,419 (Thread-1): On with_booking_fact_margin: create or replace view OPA_DEV.DBT_TEST.with_booking_fact_margin as (
    

SELECT
  bff_1.bk_booking
  ,bff_1.ffd_flag
  ,bff_1.sm_currency
  ,bff_1.sm_revenue
  ,bff_1.sm_cnx_and_amend_revenue
  ,bff_1.sm_accommodation_costs
  ,bff_1.sm_early_booking_discounts
  ,bff_1.sm_late_booking_discounts
  ,bff_1.sm_flying_costs
  ,bff_1.sm_other_costs
  ,bff_1.sm_distribution_costs
  ,bff_1.sm_non_margin_items
  ,bff_1.sm_margin
  ,bff_1.smg_currency
  ,bff_1.smg_revenue
  ,bff_1.smg_cnx_and_amend_revenue
  ,bff_1.smg_accommodation_costs
  ,bff_1.smg_early_booking_discounts
  ,bff_1.smg_late_booking_discounts
  ,bff_1.smg_flying_costs
  ,bff_1.smg_other_costs
  ,bff_1.smg_distribution_costs
  ,bff_1.smg_non_margin_items
  ,bff_1.smg_margin
  ,bff_1.rep_currency
  ,bff_1.rep_revenue
  ,bff_1.rep_cnx_and_amend_revenue
  ,bff_1.rep_accommodation_costs
  ,bff_1.rep_early_booking_discounts
  ,bff_1.rep_late_booking_discounts
  ,bff_1.rep_flying_costs
  ,bff_1.rep_other_costs
  ,bff_1.rep_distribution_costs
  ,bff_1.rep_non_margin_items
  ,bff_1.rep_margin
FROM opa_fl_uk.v_booking_fact_margin_uk bff_1
  );
2019-10-01 13:52:07,938 (Thread-1): SQL status: SUCCESS 1 in 0.52 seconds
2019-10-01 13:52:07,939 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 13:52:07,939 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 13:52:07,940 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 13:52:08,061 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 13:52:08,065 (Thread-1): 13:52:08 | 15 of 20 OK created view model DBT_TEST.with_booking_fact_margin..... [SUCCESS 1 in 0.93s]
2019-10-01 13:52:08,067 (Thread-1): 13:52:08 | 16 of 20 START view model DBT_TEST.with_dates........................ [RUN]
2019-10-01 13:52:08,071 (Thread-1): Acquiring new snowflake connection "with_dates".
2019-10-01 13:52:08,071 (Thread-1): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 13:52:08,072 (Thread-1): Compiling model.dbt_test.with_dates
2019-10-01 13:52:08,079 (Thread-1): Writing injected SQL for node "model.dbt_test.with_dates"
2019-10-01 13:52:08,092 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_dates"
2019-10-01 13:52:08,099 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 13:52:08,099 (Thread-1): On with_dates: BEGIN
2019-10-01 13:52:08,227 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 13:52:08,228 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 13:52:08,228 (Thread-1): On with_dates: create or replace view OPA_DEV.DBT_TEST.with_dates as (
    


SELECT
	dd.bk_date
	,dd.group_season_code
FROM opa_stg_all.date_dim
  );
2019-10-01 13:52:08,498 (Thread-1): Snowflake error: 000904 (42000): 018f4144-0006-fbe4-0000-0e29015fd5aa: SQL compilation error: error line 6 at position 1
invalid identifier 'DD.BK_DATE'
2019-10-01 13:52:08,498 (Thread-1): On with_dates: ROLLBACK
2019-10-01 13:52:08,635 (Thread-1): 13:52:08 | 16 of 20 ERROR creating view model DBT_TEST.with_dates............... [ERROR in 0.56s]
2019-10-01 13:52:08,637 (Thread-1): 13:52:08 | 17 of 20 START view model DBT_TEST.with_fl_acr_booking............... [RUN]
2019-10-01 13:52:08,641 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 13:52:08,641 (Thread-1): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 13:52:08,642 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking
2019-10-01 13:52:08,649 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 13:52:08,661 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 13:52:08,669 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 13:52:08,669 (Thread-1): On with_fl_acr_booking: BEGIN
2019-10-01 13:52:08,833 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 13:52:08,833 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 13:52:08,833 (Thread-1): On with_fl_acr_booking: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking as (
    

SELECT
  bk_1.sk_booking_id
  ,bk_1.booking_version
  ,bk_1.atcom_res_id
  ,bk_1.atcom_res_version
  ,bk_1.atcom_market_id -- CG ADDED in V1.06 for new Source Market Derivation
  ,bk_1.number_of_adults
  ,bk_1.number_of_children
  ,bk_1.number_of_infants
  ,bk_1.number_of_passengers
  ,bk_1.sk_season_id
  ,bk_1.booking_status
  ,bk_1.atcom_agent_id
  ,bk_1.atcom_sell_currency_id
  ,bk_1.season_date
  ,bk_1.confirmed_on
  ,bk_1.cancelled_on
  ,bk_1.source_created_on
  ,bk_1.modified_on
  ,bk_1.dwh_created_on
  ,bk_1.dwh_modified_on

FROM opa_stg_uk.fl_acr_booking bk_1
WHERE bk_1.file_dt = (SELECT MAX(bk_2.file_dt) FROM opa_stg_uk.fl_acr_booking bk_2 WHERE bk_1.sk_booking_id = bk_2.sk_booking_id AND bk_1.booking_version = bk_2.booking_version)
AND bk_1.booking_version = (SELECT MAX(bk_3.booking_version) FROM opa_stg_uk.fl_acr_booking bk_3 WHERE bk_1.sk_booking_id = bk_3.sk_booking_id)
AND (bk_1.sk_season_id > 201701 OR bk_1.sk_booking_id IS NULL)

-- To be removed when running against all bookings
AND bk_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 13:52:09,146 (Thread-1): SQL status: SUCCESS 1 in 0.31 seconds
2019-10-01 13:52:09,147 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 13:52:09,147 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 13:52:09,147 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 13:52:09,250 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 13:52:09,254 (Thread-1): 13:52:09 | 17 of 20 OK created view model DBT_TEST.with_fl_acr_booking.......... [SUCCESS 1 in 0.61s]
2019-10-01 13:52:09,256 (Thread-1): 13:52:09 | 18 of 20 START view model DBT_TEST.with_fl_acr_booking_service....... [RUN]
2019-10-01 13:52:09,259 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 13:52:09,260 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 13:52:09,260 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking_service
2019-10-01 13:52:09,267 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 13:52:09,276 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 13:52:09,286 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 13:52:09,287 (Thread-1): On with_fl_acr_booking_service: BEGIN
2019-10-01 13:52:09,462 (Thread-1): SQL status: SUCCESS 1 in 0.17 seconds
2019-10-01 13:52:09,463 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 13:52:09,463 (Thread-1): On with_fl_acr_booking_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking_service as (
    

SELECT
  bk_ser_1.sk_booking_service_id
  ,bk_ser_1.sk_booking_id
  ,bk_ser_1.sk_service_id
  ,bk_ser_1.service_version
  ,bk_ser_1.booking_version
FROM opa_stg_uk.fl_acr_booking_service bk_ser_1
WHERE bk_ser_1.file_dt = (SELECT MAX(bk_ser_2.file_dt) FROM opa_stg_uk.fl_acr_booking_service bk_ser_2 WHERE bk_ser_1.sk_booking_service_id = bk_ser_2.sk_booking_service_id)
AND bk_ser_1.booking_version = (SELECT MAX(bk_ser_3.booking_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_3 WHERE bk_ser_1.sk_booking_id = bk_ser_3.sk_booking_id)
AND bk_ser_1.service_version = (SELECT MAX(bk_ser_4.service_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_4 WHERE bk_ser_1.sk_service_id = bk_ser_4.sk_service_id)

-- To be removed when running against all bookings
AND bk_ser_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 13:52:09,826 (Thread-1): SQL status: SUCCESS 1 in 0.36 seconds
2019-10-01 13:52:09,827 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 13:52:09,827 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 13:52:09,827 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 13:52:09,987 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 13:52:09,991 (Thread-1): 13:52:09 | 18 of 20 OK created view model DBT_TEST.with_fl_acr_booking_service.. [SUCCESS 1 in 0.73s]
2019-10-01 13:52:09,993 (Thread-1): 13:52:09 | 19 of 20 START view model DBT_TEST.with_fl_acr_service............... [RUN]
2019-10-01 13:52:09,997 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 13:52:09,997 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 13:52:09,998 (Thread-1): Compiling model.dbt_test.with_fl_acr_service
2019-10-01 13:52:10,007 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 13:52:10,020 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 13:52:10,031 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 13:52:10,031 (Thread-1): On with_fl_acr_service: BEGIN
2019-10-01 13:52:10,161 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 13:52:10,161 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 13:52:10,161 (Thread-1): On with_fl_acr_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service as (
    

SELECT
  ser_1.sk_service_id
  ,ser_1.atcom_ser_id
  ,ser_1.atcom_dep_point_id
  ,ser_1.service_version
  ,ser_1.service_status
  ,ser_1.direction
  ,ser_1.sell_type
  ,ser_1.service_type
  ,ser_1.flight_type_code
  ,ser_1.service_start_date1
  ,ser_1.service_end_date1
  ,ser_1.departure_flight_number
  ,ser_1.atcom_arr_point_id
  ,ser_1.source_stock_type_code
FROM opa_stg_uk.fl_acr_service ser_1
WHERE ser_1.file_dt = (SELECT MAX(ser_2.file_dt) FROM opa_stg_uk.fl_acr_service ser_2 WHERE ser_1.sk_service_id = ser_2.sk_service_id AND ser_1.service_version = ser_2.service_version)
  );
2019-10-01 13:52:10,556 (Thread-1): SQL status: SUCCESS 1 in 0.39 seconds
2019-10-01 13:52:10,558 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 13:52:10,558 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 13:52:10,558 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 13:52:10,656 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 13:52:10,663 (Thread-1): 13:52:10 | 19 of 20 OK created view model DBT_TEST.with_fl_acr_service.......... [SUCCESS 1 in 0.66s]
2019-10-01 13:52:10,664 (Thread-1): 13:52:10 | 20 of 20 START view model DBT_TEST.with_fl_acr_service_element....... [RUN]
2019-10-01 13:52:10,668 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 13:52:10,669 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 13:52:10,670 (Thread-1): Compiling model.dbt_test.with_fl_acr_service_element
2019-10-01 13:52:10,679 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 13:52:10,690 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 13:52:10,699 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 13:52:10,699 (Thread-1): On with_fl_acr_service_element: BEGIN
2019-10-01 13:52:10,896 (Thread-1): SQL status: SUCCESS 1 in 0.20 seconds
2019-10-01 13:52:10,896 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 13:52:10,896 (Thread-1): On with_fl_acr_service_element: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service_element as (
    

SELECT
  ser_e_1.sk_service_id
  ,ser_e_1.service_version
  ,ser_e_1.atcom_sub_ser_id
FROM opa_stg_uk.fl_acr_service_element ser_e_1
WHERE ser_e_1.file_dt = (SELECT MAX(ser_e_2.file_dt) FROM opa_stg_uk.fl_acr_service_element ser_e_2 WHERE ser_e_1.sk_service_element_id = ser_e_2.sk_service_element_id)
  );
2019-10-01 13:52:11,175 (Thread-1): SQL status: SUCCESS 1 in 0.28 seconds
2019-10-01 13:52:11,176 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 13:52:11,176 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 13:52:11,176 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 13:52:11,274 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 13:52:11,278 (Thread-1): 13:52:11 | 20 of 20 OK created view model DBT_TEST.with_fl_acr_service_element.. [SUCCESS 1 in 0.61s]
2019-10-01 13:52:11,370 (MainThread): Using snowflake connection "master".
2019-10-01 13:52:11,371 (MainThread): On master: BEGIN
2019-10-01 13:52:11,520 (MainThread): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 13:52:11,520 (MainThread): On master: COMMIT
2019-10-01 13:52:11,520 (MainThread): Using snowflake connection "master".
2019-10-01 13:52:11,520 (MainThread): On master: COMMIT
2019-10-01 13:52:11,674 (MainThread): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 13:52:11,675 (MainThread): 13:52:11 | 
2019-10-01 13:52:11,676 (MainThread): 13:52:11 | Finished running 20 view models in 17.03s.
2019-10-01 13:52:11,677 (MainThread): Connection 'master' was left open.
2019-10-01 13:52:11,677 (MainThread): On master: Close
2019-10-01 13:52:11,870 (MainThread): Connection 'with_fl_acr_service_element' was left open.
2019-10-01 13:52:11,870 (MainThread): On with_fl_acr_service_element: Close
2019-10-01 13:52:12,140 (MainThread): 
2019-10-01 13:52:12,141 (MainThread): Completed with 1 error and 0 warnings:
2019-10-01 13:52:12,143 (MainThread): 
2019-10-01 13:52:12,144 (MainThread): Database Error in model with_dates (models\with_dates.sql)
2019-10-01 13:52:12,150 (MainThread):   000904 (42000): 018f4144-0006-fbe4-0000-0e29015fd5aa: SQL compilation error: error line 6 at position 1
2019-10-01 13:52:12,155 (MainThread):   invalid identifier 'DD.BK_DATE'
2019-10-01 13:52:12,157 (MainThread):   compiled SQL at target\compiled\dbt_test\with_dates.sql
2019-10-01 13:52:12,161 (MainThread): 
Done. PASS=19 WARN=0 ERROR=1 SKIP=0 TOTAL=20
2019-10-01 13:52:12,166 (MainThread): Flushing usage events
2019-10-01 13:57:15,082 (MainThread): Tracking: tracking
2019-10-01 13:57:15,084 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C96408>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C93208>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C6DF88>]}
2019-10-01 13:57:15,415 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 13:57:15,416 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: ResourceWarning: unclosed <socket.socket fd=488, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('10.32.130.75', 57927), raddr=('54.174.31.151', 443)>

2019-10-01 13:57:15,418 (MainThread): Error sending message, disabling tracking
2019-10-01 13:57:15,439 (MainThread): Parsing macros\core.sql
2019-10-01 13:57:15,447 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 13:57:15,502 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 13:57:15,523 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 13:57:15,526 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 13:57:15,532 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 13:57:15,539 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 13:57:15,543 (MainThread): Parsing macros\etc\query.sql
2019-10-01 13:57:15,548 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 13:57:15,560 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 13:57:15,569 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 13:57:15,581 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 13:57:15,599 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 13:57:15,620 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 13:57:15,623 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 13:57:15,640 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 13:57:15,652 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 13:57:15,658 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 13:57:15,665 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 13:57:15,670 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 13:57:15,672 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 13:57:15,674 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 13:57:15,677 (MainThread): Parsing macros\adapters.sql
2019-10-01 13:57:15,690 (MainThread): Parsing macros\catalog.sql
2019-10-01 13:57:15,694 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 13:57:15,702 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 13:57:15,705 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 13:57:15,710 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 13:57:15,750 (MainThread): Parsing model.dbt_test.create_table_booking_fact_uk
2019-10-01 13:57:15,752 (MainThread): Acquiring new snowflake connection "create_table_booking_fact_uk".
2019-10-01 13:57:15,752 (MainThread): Opening a new connection, currently in state init
2019-10-01 13:57:15,755 (MainThread): c:\python\python37\lib\site-packages\botocore\vendored\requests\models.py:169: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working

2019-10-01 13:57:16,051 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\botocore\\vendored\\requests\\cacert.pem'>

2019-10-01 13:57:16,078 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\certifi\\cacert.pem'>

2019-10-01 13:57:16,742 (MainThread): Parsing model.dbt_test.v_booking_fact_uk
2019-10-01 13:57:16,745 (MainThread): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 13:57:16,745 (MainThread): Re-using an available connection from the pool (formerly create_table_booking_fact_uk).
2019-10-01 13:57:16,800 (MainThread): Parsing model.dbt_test.with_ar_agent
2019-10-01 13:57:16,801 (MainThread): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 13:57:16,801 (MainThread): Re-using an available connection from the pool (formerly v_booking_fact_uk).
2019-10-01 13:57:16,807 (MainThread): Parsing model.dbt_test.with_ar_currency
2019-10-01 13:57:16,809 (MainThread): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 13:57:16,809 (MainThread): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 13:57:16,816 (MainThread): Parsing model.dbt_test.with_ar_market
2019-10-01 13:57:16,818 (MainThread): Acquiring new snowflake connection "with_ar_market".
2019-10-01 13:57:16,818 (MainThread): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 13:57:16,829 (MainThread): Parsing model.dbt_test.with_ar_officename
2019-10-01 13:57:16,833 (MainThread): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 13:57:16,833 (MainThread): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 13:57:16,842 (MainThread): Parsing model.dbt_test.with_ar_point
2019-10-01 13:57:16,843 (MainThread): Acquiring new snowflake connection "with_ar_point".
2019-10-01 13:57:16,844 (MainThread): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 13:57:16,851 (MainThread): Parsing model.dbt_test.with_ar_sellstatic
2019-10-01 13:57:16,853 (MainThread): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 13:57:16,853 (MainThread): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 13:57:16,861 (MainThread): Parsing model.dbt_test.with_ar_sellunit
2019-10-01 13:57:16,863 (MainThread): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 13:57:16,864 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 13:57:16,875 (MainThread): Parsing model.dbt_test.with_ar_staticroom
2019-10-01 13:57:16,877 (MainThread): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 13:57:16,878 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 13:57:16,888 (MainThread): Parsing model.dbt_test.with_ar_staticstock
2019-10-01 13:57:16,891 (MainThread): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 13:57:16,891 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 13:57:16,900 (MainThread): Parsing model.dbt_test.with_ar_transinvroute
2019-10-01 13:57:16,901 (MainThread): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 13:57:16,901 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 13:57:16,907 (MainThread): Parsing model.dbt_test.with_ar_transinvroutesector
2019-10-01 13:57:16,909 (MainThread): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 13:57:16,910 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 13:57:16,919 (MainThread): Parsing model.dbt_test.with_ar_transinvsector
2019-10-01 13:57:16,921 (MainThread): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 13:57:16,921 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 13:57:16,927 (MainThread): Parsing model.dbt_test.with_ar_transroute
2019-10-01 13:57:16,929 (MainThread): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 13:57:16,929 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 13:57:16,935 (MainThread): Parsing model.dbt_test.with_ar_usercodes
2019-10-01 13:57:16,936 (MainThread): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 13:57:16,936 (MainThread): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 13:57:16,942 (MainThread): Parsing model.dbt_test.with_booking_fact_margin
2019-10-01 13:57:16,944 (MainThread): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 13:57:16,944 (MainThread): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 13:57:16,951 (MainThread): Parsing model.dbt_test.with_dates
2019-10-01 13:57:16,953 (MainThread): Acquiring new snowflake connection "with_dates".
2019-10-01 13:57:16,953 (MainThread): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 13:57:16,964 (MainThread): Parsing model.dbt_test.with_fl_acr_booking
2019-10-01 13:57:16,966 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 13:57:16,966 (MainThread): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 13:57:16,976 (MainThread): Parsing model.dbt_test.with_fl_acr_booking_service
2019-10-01 13:57:16,978 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 13:57:16,978 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 13:57:16,985 (MainThread): Parsing model.dbt_test.with_fl_acr_service
2019-10-01 13:57:16,986 (MainThread): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 13:57:16,987 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 13:57:16,996 (MainThread): Parsing model.dbt_test.with_fl_acr_service_element
2019-10-01 13:57:16,998 (MainThread): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 13:57:16,999 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 13:57:17,064 (MainThread): Flushing usage events
2019-10-01 13:57:17,064 (MainThread): c:\python\python37\lib\site-packages\dbt\main.py:97: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 13:57:17,064 (MainThread): Encountered an error:
2019-10-01 13:57:17,065 (MainThread): c:\python\python37\lib\site-packages\dbt\main.py:98: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 13:57:17,065 (MainThread): Compilation Error in model v_booking_fact_uk (models\v_booking_fact_uk.sql)
  Model 'model.dbt_test.v_booking_fact_uk' depends on model 'with_arusercodes' which was not found or is disabled
2019-10-01 13:57:17,166 (MainThread): Traceback (most recent call last):
  File "c:\python\python37\lib\site-packages\dbt\main.py", line 82, in main
    results, succeeded = handle_and_check(args)
  File "c:\python\python37\lib\site-packages\dbt\main.py", line 151, in handle_and_check
    task, res = run_from_args(parsed)
  File "c:\python\python37\lib\site-packages\dbt\main.py", line 216, in run_from_args
    results = task.run()
  File "c:\python\python37\lib\site-packages\dbt\task\runnable.py", line 272, in run
    self._runtime_initialize()
  File "c:\python\python37\lib\site-packages\dbt\task\runnable.py", line 68, in _runtime_initialize
    super(GraphRunnableTask, self)._runtime_initialize()
  File "c:\python\python37\lib\site-packages\dbt\task\runnable.py", line 46, in _runtime_initialize
    self.manifest = load_manifest(self.config)
  File "c:\python\python37\lib\site-packages\dbt\task\runnable.py", line 33, in load_manifest
    internal_manifest=internal_manifest)
  File "c:\python\python37\lib\site-packages\dbt\loader.py", line 170, in load_all
    internal_manifest)
  File "c:\python\python37\lib\site-packages\dbt\loader.py", line 164, in _load_from_projects
    return loader.create_manifest()
  File "c:\python\python37\lib\site-packages\dbt\loader.py", line 153, in create_manifest
    self.root_project.project_name)
  File "c:\python\python37\lib\site-packages\dbt\parser\util.py", line 217, in process_refs
    cls.process_refs_for_node(manifest, current_project, node)
  File "c:\python\python37\lib\site-packages\dbt\parser\util.py", line 204, in process_refs_for_node
    disabled=(target_model is cls.DISABLED)
  File "c:\python\python37\lib\site-packages\dbt\utils.py", line 399, in invalid_ref_fail_unless_test
    target_model_package)
  File "c:\python\python37\lib\site-packages\dbt\exceptions.py", line 402, in ref_target_not_found
    raise_compiler_error(msg, model)
  File "c:\python\python37\lib\site-packages\dbt\exceptions.py", line 286, in raise_compiler_error
    raise CompilationException(msg, node)
dbt.exceptions.CompilationException: Compilation Error in model v_booking_fact_uk (models\v_booking_fact_uk.sql)
  Model 'model.dbt_test.v_booking_fact_uk' depends on model 'with_arusercodes' which was not found or is disabled

2019-10-01 13:58:39,441 (MainThread): Tracking: tracking
2019-10-01 13:58:39,443 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C91A08>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C91108>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C91A48>]}
2019-10-01 13:58:39,767 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 13:58:39,768 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: ResourceWarning: unclosed <socket.socket fd=488, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('10.32.130.75', 57975), raddr=('54.164.98.48', 443)>

2019-10-01 13:58:39,770 (MainThread): Error sending message, disabling tracking
2019-10-01 13:58:39,810 (MainThread): Parsing macros\core.sql
2019-10-01 13:58:39,825 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 13:58:39,906 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 13:58:39,927 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 13:58:39,931 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 13:58:39,938 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 13:58:39,945 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 13:58:39,951 (MainThread): Parsing macros\etc\query.sql
2019-10-01 13:58:39,956 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 13:58:39,977 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 13:58:39,994 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 13:58:40,010 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 13:58:40,048 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 13:58:40,093 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 13:58:40,100 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 13:58:40,132 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 13:58:40,151 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 13:58:40,164 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 13:58:40,181 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 13:58:40,186 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 13:58:40,190 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 13:58:40,194 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 13:58:40,200 (MainThread): Parsing macros\adapters.sql
2019-10-01 13:58:40,228 (MainThread): Parsing macros\catalog.sql
2019-10-01 13:58:40,234 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 13:58:40,251 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 13:58:40,256 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 13:58:40,266 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 13:58:40,314 (MainThread): Parsing model.dbt_test.v_booking_fact_uk
2019-10-01 13:58:40,316 (MainThread): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 13:58:40,317 (MainThread): Opening a new connection, currently in state init
2019-10-01 13:58:40,319 (MainThread): c:\python\python37\lib\site-packages\botocore\vendored\requests\models.py:169: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working

2019-10-01 13:58:40,627 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\botocore\\vendored\\requests\\cacert.pem'>

2019-10-01 13:58:40,651 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\certifi\\cacert.pem'>

2019-10-01 13:58:41,302 (MainThread): Parsing model.dbt_test.with_ar_agent
2019-10-01 13:58:41,304 (MainThread): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 13:58:41,304 (MainThread): Re-using an available connection from the pool (formerly v_booking_fact_uk).
2019-10-01 13:58:41,313 (MainThread): Parsing model.dbt_test.with_ar_currency
2019-10-01 13:58:41,315 (MainThread): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 13:58:41,315 (MainThread): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 13:58:41,324 (MainThread): Parsing model.dbt_test.with_ar_market
2019-10-01 13:58:41,326 (MainThread): Acquiring new snowflake connection "with_ar_market".
2019-10-01 13:58:41,326 (MainThread): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 13:58:41,333 (MainThread): Parsing model.dbt_test.with_ar_officename
2019-10-01 13:58:41,334 (MainThread): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 13:58:41,335 (MainThread): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 13:58:41,340 (MainThread): Parsing model.dbt_test.with_ar_point
2019-10-01 13:58:41,341 (MainThread): Acquiring new snowflake connection "with_ar_point".
2019-10-01 13:58:41,341 (MainThread): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 13:58:41,345 (MainThread): Parsing model.dbt_test.with_ar_sellstatic
2019-10-01 13:58:41,346 (MainThread): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 13:58:41,346 (MainThread): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 13:58:41,351 (MainThread): Parsing model.dbt_test.with_ar_sellunit
2019-10-01 13:58:41,353 (MainThread): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 13:58:41,353 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 13:58:41,361 (MainThread): Parsing model.dbt_test.with_ar_staticroom
2019-10-01 13:58:41,363 (MainThread): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 13:58:41,363 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 13:58:41,370 (MainThread): Parsing model.dbt_test.with_ar_staticstock
2019-10-01 13:58:41,371 (MainThread): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 13:58:41,371 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 13:58:41,380 (MainThread): Parsing model.dbt_test.with_ar_transinvroute
2019-10-01 13:58:41,382 (MainThread): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 13:58:41,382 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 13:58:41,390 (MainThread): Parsing model.dbt_test.with_ar_transinvroutesector
2019-10-01 13:58:41,392 (MainThread): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 13:58:41,393 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 13:58:41,400 (MainThread): Parsing model.dbt_test.with_ar_transinvsector
2019-10-01 13:58:41,401 (MainThread): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 13:58:41,401 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 13:58:41,409 (MainThread): Parsing model.dbt_test.with_ar_transroute
2019-10-01 13:58:41,411 (MainThread): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 13:58:41,411 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 13:58:41,419 (MainThread): Parsing model.dbt_test.with_ar_usercodes
2019-10-01 13:58:41,421 (MainThread): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 13:58:41,421 (MainThread): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 13:58:41,428 (MainThread): Parsing model.dbt_test.with_booking_fact_margin
2019-10-01 13:58:41,430 (MainThread): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 13:58:41,430 (MainThread): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 13:58:41,436 (MainThread): Parsing model.dbt_test.with_dates
2019-10-01 13:58:41,438 (MainThread): Acquiring new snowflake connection "with_dates".
2019-10-01 13:58:41,438 (MainThread): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 13:58:41,444 (MainThread): Parsing model.dbt_test.with_fl_acr_booking
2019-10-01 13:58:41,446 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 13:58:41,446 (MainThread): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 13:58:41,456 (MainThread): Parsing model.dbt_test.with_fl_acr_booking_service
2019-10-01 13:58:41,458 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 13:58:41,458 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 13:58:41,468 (MainThread): Parsing model.dbt_test.with_fl_acr_service
2019-10-01 13:58:41,470 (MainThread): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 13:58:41,470 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 13:58:41,478 (MainThread): Parsing model.dbt_test.with_fl_acr_service_element
2019-10-01 13:58:41,480 (MainThread): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 13:58:41,480 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 13:58:41,542 (MainThread): Flushing usage events
2019-10-01 13:58:41,543 (MainThread): c:\python\python37\lib\site-packages\dbt\main.py:97: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 13:58:41,543 (MainThread): Encountered an error:
2019-10-01 13:58:41,544 (MainThread): c:\python\python37\lib\site-packages\dbt\main.py:98: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 13:58:41,544 (MainThread): Compilation Error in model v_booking_fact_uk (models\v_booking_fact_uk.sql)
  Model 'model.dbt_test.v_booking_fact_uk' depends on model 'with_arusercodes' which was not found or is disabled
2019-10-01 13:58:41,577 (MainThread): Traceback (most recent call last):
  File "c:\python\python37\lib\site-packages\dbt\main.py", line 82, in main
    results, succeeded = handle_and_check(args)
  File "c:\python\python37\lib\site-packages\dbt\main.py", line 151, in handle_and_check
    task, res = run_from_args(parsed)
  File "c:\python\python37\lib\site-packages\dbt\main.py", line 216, in run_from_args
    results = task.run()
  File "c:\python\python37\lib\site-packages\dbt\task\runnable.py", line 272, in run
    self._runtime_initialize()
  File "c:\python\python37\lib\site-packages\dbt\task\runnable.py", line 68, in _runtime_initialize
    super(GraphRunnableTask, self)._runtime_initialize()
  File "c:\python\python37\lib\site-packages\dbt\task\runnable.py", line 46, in _runtime_initialize
    self.manifest = load_manifest(self.config)
  File "c:\python\python37\lib\site-packages\dbt\task\runnable.py", line 33, in load_manifest
    internal_manifest=internal_manifest)
  File "c:\python\python37\lib\site-packages\dbt\loader.py", line 170, in load_all
    internal_manifest)
  File "c:\python\python37\lib\site-packages\dbt\loader.py", line 164, in _load_from_projects
    return loader.create_manifest()
  File "c:\python\python37\lib\site-packages\dbt\loader.py", line 153, in create_manifest
    self.root_project.project_name)
  File "c:\python\python37\lib\site-packages\dbt\parser\util.py", line 217, in process_refs
    cls.process_refs_for_node(manifest, current_project, node)
  File "c:\python\python37\lib\site-packages\dbt\parser\util.py", line 204, in process_refs_for_node
    disabled=(target_model is cls.DISABLED)
  File "c:\python\python37\lib\site-packages\dbt\utils.py", line 399, in invalid_ref_fail_unless_test
    target_model_package)
  File "c:\python\python37\lib\site-packages\dbt\exceptions.py", line 402, in ref_target_not_found
    raise_compiler_error(msg, model)
  File "c:\python\python37\lib\site-packages\dbt\exceptions.py", line 286, in raise_compiler_error
    raise CompilationException(msg, node)
dbt.exceptions.CompilationException: Compilation Error in model v_booking_fact_uk (models\v_booking_fact_uk.sql)
  Model 'model.dbt_test.v_booking_fact_uk' depends on model 'with_arusercodes' which was not found or is disabled

2019-10-01 13:59:30,890 (MainThread): Tracking: tracking
2019-10-01 13:59:30,893 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C938C8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C93DC8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C6CA48>]}
2019-10-01 13:59:31,188 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 13:59:31,189 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: ResourceWarning: unclosed <socket.socket fd=488, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('10.32.130.75', 58000), raddr=('54.164.98.48', 443)>

2019-10-01 13:59:31,191 (MainThread): Error sending message, disabling tracking
2019-10-01 13:59:31,232 (MainThread): Parsing macros\core.sql
2019-10-01 13:59:31,246 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 13:59:31,322 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 13:59:31,342 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 13:59:31,346 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 13:59:31,351 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 13:59:31,358 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 13:59:31,363 (MainThread): Parsing macros\etc\query.sql
2019-10-01 13:59:31,367 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 13:59:31,382 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 13:59:31,399 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 13:59:31,411 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 13:59:31,437 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 13:59:31,475 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 13:59:31,480 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 13:59:31,494 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 13:59:31,506 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 13:59:31,518 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 13:59:31,529 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 13:59:31,533 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 13:59:31,536 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 13:59:31,542 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 13:59:31,547 (MainThread): Parsing macros\adapters.sql
2019-10-01 13:59:31,569 (MainThread): Parsing macros\catalog.sql
2019-10-01 13:59:31,575 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 13:59:31,591 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 13:59:31,598 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 13:59:31,605 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 13:59:31,679 (MainThread): Parsing model.dbt_test.v_booking_fact_uk
2019-10-01 13:59:31,685 (MainThread): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 13:59:31,685 (MainThread): Opening a new connection, currently in state init
2019-10-01 13:59:31,688 (MainThread): c:\python\python37\lib\site-packages\botocore\vendored\requests\models.py:169: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working

2019-10-01 13:59:32,084 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\botocore\\vendored\\requests\\cacert.pem'>

2019-10-01 13:59:32,111 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\certifi\\cacert.pem'>

2019-10-01 13:59:32,829 (MainThread): Parsing model.dbt_test.with_ar_agent
2019-10-01 13:59:32,831 (MainThread): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 13:59:32,832 (MainThread): Re-using an available connection from the pool (formerly v_booking_fact_uk).
2019-10-01 13:59:32,841 (MainThread): Parsing model.dbt_test.with_ar_currency
2019-10-01 13:59:32,844 (MainThread): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 13:59:32,844 (MainThread): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 13:59:32,854 (MainThread): Parsing model.dbt_test.with_ar_market
2019-10-01 13:59:32,857 (MainThread): Acquiring new snowflake connection "with_ar_market".
2019-10-01 13:59:32,857 (MainThread): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 13:59:32,869 (MainThread): Parsing model.dbt_test.with_ar_officename
2019-10-01 13:59:32,871 (MainThread): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 13:59:32,871 (MainThread): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 13:59:32,881 (MainThread): Parsing model.dbt_test.with_ar_point
2019-10-01 13:59:32,884 (MainThread): Acquiring new snowflake connection "with_ar_point".
2019-10-01 13:59:32,884 (MainThread): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 13:59:32,894 (MainThread): Parsing model.dbt_test.with_ar_sellstatic
2019-10-01 13:59:32,896 (MainThread): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 13:59:32,896 (MainThread): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 13:59:32,907 (MainThread): Parsing model.dbt_test.with_ar_sellunit
2019-10-01 13:59:32,910 (MainThread): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 13:59:32,910 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 13:59:32,922 (MainThread): Parsing model.dbt_test.with_ar_staticroom
2019-10-01 13:59:32,924 (MainThread): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 13:59:32,924 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 13:59:32,934 (MainThread): Parsing model.dbt_test.with_ar_staticstock
2019-10-01 13:59:32,937 (MainThread): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 13:59:32,937 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 13:59:32,947 (MainThread): Parsing model.dbt_test.with_ar_transinvroute
2019-10-01 13:59:32,948 (MainThread): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 13:59:32,949 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 13:59:32,958 (MainThread): Parsing model.dbt_test.with_ar_transinvroutesector
2019-10-01 13:59:32,960 (MainThread): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 13:59:32,961 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 13:59:32,971 (MainThread): Parsing model.dbt_test.with_ar_transinvsector
2019-10-01 13:59:32,974 (MainThread): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 13:59:32,974 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 13:59:32,984 (MainThread): Parsing model.dbt_test.with_ar_transroute
2019-10-01 13:59:32,987 (MainThread): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 13:59:32,988 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 13:59:32,998 (MainThread): Parsing model.dbt_test.with_ar_usercodes
2019-10-01 13:59:33,000 (MainThread): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 13:59:33,000 (MainThread): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 13:59:33,009 (MainThread): Parsing model.dbt_test.with_booking_fact_margin
2019-10-01 13:59:33,012 (MainThread): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 13:59:33,012 (MainThread): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 13:59:33,028 (MainThread): Parsing model.dbt_test.with_dates
2019-10-01 13:59:33,032 (MainThread): Acquiring new snowflake connection "with_dates".
2019-10-01 13:59:33,033 (MainThread): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 13:59:33,047 (MainThread): Parsing model.dbt_test.with_fl_acr_booking
2019-10-01 13:59:33,050 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 13:59:33,050 (MainThread): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 13:59:33,063 (MainThread): Parsing model.dbt_test.with_fl_acr_booking_service
2019-10-01 13:59:33,066 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 13:59:33,066 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 13:59:33,078 (MainThread): Parsing model.dbt_test.with_fl_acr_service
2019-10-01 13:59:33,081 (MainThread): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 13:59:33,081 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 13:59:33,092 (MainThread): Parsing model.dbt_test.with_fl_acr_service_element
2019-10-01 13:59:33,095 (MainThread): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 13:59:33,095 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 13:59:33,254 (MainThread): Found 21 models, 0 tests, 0 snapshots, 0 analyses, 117 macros, 0 operations, 0 seed files, 0 sources
2019-10-01 13:59:33,263 (MainThread): 
2019-10-01 13:59:33,270 (MainThread): 13:59:33 | Concurrency: 1 threads (target='dev')
2019-10-01 13:59:33,273 (MainThread): 13:59:33 | 
2019-10-01 13:59:33,305 (Thread-1): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 13:59:33,307 (Thread-1): Opening a new connection, currently in state init
2019-10-01 13:59:33,900 (Thread-1): Compiling model.dbt_test.with_ar_agent
2019-10-01 13:59:33,916 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 13:59:33,940 (Thread-1): Acquiring new snowflake connection "with_ar_market".
2019-10-01 13:59:33,943 (Thread-1): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 13:59:33,945 (Thread-1): Compiling model.dbt_test.with_ar_market
2019-10-01 13:59:33,957 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_market"
2019-10-01 13:59:33,980 (Thread-1): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 13:59:33,984 (Thread-1): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 13:59:33,985 (Thread-1): Compiling model.dbt_test.with_ar_officename
2019-10-01 13:59:33,995 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 13:59:34,017 (Thread-1): Acquiring new snowflake connection "with_ar_point".
2019-10-01 13:59:34,017 (Thread-1): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 13:59:34,019 (Thread-1): Compiling model.dbt_test.with_ar_point
2019-10-01 13:59:34,035 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_point"
2019-10-01 13:59:34,050 (Thread-1): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 13:59:34,054 (Thread-1): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 13:59:34,064 (Thread-1): Compiling model.dbt_test.with_ar_sellstatic
2019-10-01 13:59:34,084 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 13:59:34,098 (Thread-1): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 13:59:34,102 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 13:59:34,103 (Thread-1): Compiling model.dbt_test.with_ar_sellunit
2019-10-01 13:59:34,113 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 13:59:34,130 (Thread-1): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 13:59:34,133 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 13:59:34,134 (Thread-1): Compiling model.dbt_test.with_ar_staticroom
2019-10-01 13:59:34,144 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 13:59:34,158 (Thread-1): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 13:59:34,161 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 13:59:34,162 (Thread-1): Compiling model.dbt_test.with_ar_staticstock
2019-10-01 13:59:34,173 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 13:59:34,203 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 13:59:34,204 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 13:59:34,205 (Thread-1): Compiling model.dbt_test.with_ar_transinvroute
2019-10-01 13:59:34,228 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 13:59:34,244 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 13:59:34,248 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 13:59:34,250 (Thread-1): Compiling model.dbt_test.with_ar_transinvroutesector
2019-10-01 13:59:34,262 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 13:59:34,279 (Thread-1): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 13:59:34,279 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 13:59:34,280 (Thread-1): Compiling model.dbt_test.with_ar_transinvsector
2019-10-01 13:59:34,290 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 13:59:34,313 (Thread-1): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 13:59:34,314 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 13:59:34,321 (Thread-1): Compiling model.dbt_test.with_ar_transroute
2019-10-01 13:59:34,337 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 13:59:34,377 (Thread-1): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 13:59:34,381 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 13:59:34,382 (Thread-1): Compiling model.dbt_test.with_ar_usercodes
2019-10-01 13:59:34,394 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 13:59:34,409 (Thread-1): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 13:59:34,409 (Thread-1): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 13:59:34,410 (Thread-1): Compiling model.dbt_test.with_booking_fact_margin
2019-10-01 13:59:34,423 (Thread-1): Writing injected SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 13:59:34,463 (Thread-1): Acquiring new snowflake connection "with_dates".
2019-10-01 13:59:34,466 (Thread-1): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 13:59:34,467 (Thread-1): Compiling model.dbt_test.with_dates
2019-10-01 13:59:34,477 (Thread-1): Writing injected SQL for node "model.dbt_test.with_dates"
2019-10-01 13:59:34,496 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 13:59:34,498 (Thread-1): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 13:59:34,499 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking
2019-10-01 13:59:34,510 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 13:59:34,544 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 13:59:34,547 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 13:59:34,548 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking_service
2019-10-01 13:59:34,558 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 13:59:34,576 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 13:59:34,576 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 13:59:34,577 (Thread-1): Compiling model.dbt_test.with_fl_acr_service
2019-10-01 13:59:34,587 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 13:59:34,608 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 13:59:34,611 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 13:59:34,612 (Thread-1): Compiling model.dbt_test.with_fl_acr_service_element
2019-10-01 13:59:34,621 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 13:59:34,637 (Thread-1): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 13:59:34,638 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 13:59:34,639 (Thread-1): Compiling model.dbt_test.with_ar_currency
2019-10-01 13:59:34,652 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 13:59:34,670 (Thread-1): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 13:59:34,674 (Thread-1): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 13:59:34,675 (Thread-1): Compiling model.dbt_test.v_booking_fact_uk
2019-10-01 13:59:34,773 (Thread-1): Writing injected SQL for node "model.dbt_test.v_booking_fact_uk"
2019-10-01 13:59:34,846 (MainThread): Connection 'with_fl_acr_service_element' was left open.
2019-10-01 13:59:34,847 (MainThread): On with_fl_acr_service_element: Close
2019-10-01 13:59:34,981 (MainThread): Connection 'v_booking_fact_uk' was left open.
2019-10-01 13:59:34,982 (MainThread): On v_booking_fact_uk: Close
2019-10-01 13:59:35,143 (MainThread): 13:59:35 | Done.
2019-10-01 13:59:35,144 (MainThread): Flushing usage events
2019-10-01 14:00:45,846 (MainThread): Tracking: tracking
2019-10-01 14:00:45,849 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000000070CB748>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C93B08>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C6E588>]}
2019-10-01 14:00:46,163 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 14:00:46,163 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: ResourceWarning: unclosed <socket.socket fd=488, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('10.32.130.75', 58028), raddr=('54.174.31.151', 443)>

2019-10-01 14:00:46,164 (MainThread): Error sending message, disabling tracking
2019-10-01 14:00:46,190 (MainThread): Parsing macros\core.sql
2019-10-01 14:00:46,202 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 14:00:46,277 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 14:00:46,293 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 14:00:46,296 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 14:00:46,299 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 14:00:46,303 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 14:00:46,306 (MainThread): Parsing macros\etc\query.sql
2019-10-01 14:00:46,309 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 14:00:46,321 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 14:00:46,332 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 14:00:46,344 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 14:00:46,372 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 14:00:46,414 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 14:00:46,420 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 14:00:46,444 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 14:00:46,458 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 14:00:46,470 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 14:00:46,484 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 14:00:46,489 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 14:00:46,493 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 14:00:46,497 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 14:00:46,502 (MainThread): Parsing macros\adapters.sql
2019-10-01 14:00:46,530 (MainThread): Parsing macros\catalog.sql
2019-10-01 14:00:46,540 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 14:00:46,568 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 14:00:46,575 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 14:00:46,586 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 14:00:46,630 (MainThread): Parsing model.dbt_test.v_booking_fact_uk
2019-10-01 14:00:46,633 (MainThread): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 14:00:46,633 (MainThread): Opening a new connection, currently in state init
2019-10-01 14:00:46,636 (MainThread): c:\python\python37\lib\site-packages\botocore\vendored\requests\models.py:169: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working

2019-10-01 14:00:46,919 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\botocore\\vendored\\requests\\cacert.pem'>

2019-10-01 14:00:46,947 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\certifi\\cacert.pem'>

2019-10-01 14:00:47,635 (MainThread): Parsing model.dbt_test.with_ar_agent
2019-10-01 14:00:47,636 (MainThread): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 14:00:47,636 (MainThread): Re-using an available connection from the pool (formerly v_booking_fact_uk).
2019-10-01 14:00:47,640 (MainThread): Parsing model.dbt_test.with_ar_currency
2019-10-01 14:00:47,641 (MainThread): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 14:00:47,641 (MainThread): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 14:00:47,645 (MainThread): Parsing model.dbt_test.with_ar_market
2019-10-01 14:00:47,646 (MainThread): Acquiring new snowflake connection "with_ar_market".
2019-10-01 14:00:47,646 (MainThread): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 14:00:47,653 (MainThread): Parsing model.dbt_test.with_ar_officename
2019-10-01 14:00:47,655 (MainThread): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 14:00:47,656 (MainThread): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 14:00:47,664 (MainThread): Parsing model.dbt_test.with_ar_point
2019-10-01 14:00:47,667 (MainThread): Acquiring new snowflake connection "with_ar_point".
2019-10-01 14:00:47,667 (MainThread): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 14:00:47,676 (MainThread): Parsing model.dbt_test.with_ar_sellstatic
2019-10-01 14:00:47,676 (MainThread): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 14:00:47,677 (MainThread): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 14:00:47,681 (MainThread): Parsing model.dbt_test.with_ar_sellunit
2019-10-01 14:00:47,682 (MainThread): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 14:00:47,682 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 14:00:47,686 (MainThread): Parsing model.dbt_test.with_ar_staticroom
2019-10-01 14:00:47,687 (MainThread): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 14:00:47,687 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 14:00:47,693 (MainThread): Parsing model.dbt_test.with_ar_staticstock
2019-10-01 14:00:47,694 (MainThread): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 14:00:47,694 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 14:00:47,698 (MainThread): Parsing model.dbt_test.with_ar_transinvroute
2019-10-01 14:00:47,699 (MainThread): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 14:00:47,699 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 14:00:47,703 (MainThread): Parsing model.dbt_test.with_ar_transinvroutesector
2019-10-01 14:00:47,704 (MainThread): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:00:47,705 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 14:00:47,709 (MainThread): Parsing model.dbt_test.with_ar_transinvsector
2019-10-01 14:00:47,710 (MainThread): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 14:00:47,710 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 14:00:47,714 (MainThread): Parsing model.dbt_test.with_ar_transroute
2019-10-01 14:00:47,715 (MainThread): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 14:00:47,715 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 14:00:47,720 (MainThread): Parsing model.dbt_test.with_ar_usercodes
2019-10-01 14:00:47,721 (MainThread): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 14:00:47,721 (MainThread): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 14:00:47,725 (MainThread): Parsing model.dbt_test.with_booking_fact_margin
2019-10-01 14:00:47,726 (MainThread): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 14:00:47,726 (MainThread): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 14:00:47,731 (MainThread): Parsing model.dbt_test.with_dates
2019-10-01 14:00:47,732 (MainThread): Acquiring new snowflake connection "with_dates".
2019-10-01 14:00:47,732 (MainThread): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 14:00:47,737 (MainThread): Parsing model.dbt_test.with_fl_acr_booking
2019-10-01 14:00:47,738 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 14:00:47,738 (MainThread): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 14:00:47,742 (MainThread): Parsing model.dbt_test.with_fl_acr_booking_service
2019-10-01 14:00:47,743 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:00:47,744 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 14:00:47,748 (MainThread): Parsing model.dbt_test.with_fl_acr_service
2019-10-01 14:00:47,749 (MainThread): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 14:00:47,749 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 14:00:47,753 (MainThread): Parsing model.dbt_test.with_fl_acr_service_element
2019-10-01 14:00:47,754 (MainThread): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 14:00:47,754 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 14:00:47,820 (MainThread): Found 21 models, 0 tests, 0 snapshots, 0 analyses, 117 macros, 0 operations, 0 seed files, 0 sources
2019-10-01 14:00:47,825 (MainThread): 
2019-10-01 14:00:47,825 (MainThread): Acquiring new snowflake connection "master".
2019-10-01 14:00:47,826 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 14:00:47,865 (MainThread): Parsing macros\core.sql
2019-10-01 14:00:47,876 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 14:00:47,975 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 14:00:47,997 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 14:00:48,001 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 14:00:48,008 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 14:00:48,015 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 14:00:48,021 (MainThread): Parsing macros\etc\query.sql
2019-10-01 14:00:48,026 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 14:00:48,042 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 14:00:48,051 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 14:00:48,065 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 14:00:48,093 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 14:00:48,123 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 14:00:48,126 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 14:00:48,146 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 14:00:48,158 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 14:00:48,168 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 14:00:48,186 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 14:00:48,194 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 14:00:48,199 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 14:00:48,204 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 14:00:48,211 (MainThread): Parsing macros\adapters.sql
2019-10-01 14:00:48,238 (MainThread): Parsing macros\catalog.sql
2019-10-01 14:00:48,244 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 14:00:48,260 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 14:00:48,265 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 14:00:48,272 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 14:00:48,411 (MainThread): Using snowflake connection "master".
2019-10-01 14:00:48,412 (MainThread): On master: select distinct schema_name
    from OPA_DEV.information_schema.schemata
    where catalog_name ilike 'OPA_DEV'
2019-10-01 14:00:49,621 (MainThread): SQL status: SUCCESS 29 in 1.21 seconds
2019-10-01 14:00:49,700 (MainThread): Using snowflake connection "master".
2019-10-01 14:00:49,701 (MainThread): On master: BEGIN
2019-10-01 14:00:49,872 (MainThread): SQL status: SUCCESS 1 in 0.17 seconds
2019-10-01 14:00:49,873 (MainThread): Using snowflake connection "master".
2019-10-01 14:00:49,873 (MainThread): On master: select
      table_catalog as database,
      table_name as name,
      table_schema as schema,
      case when table_type = 'BASE TABLE' then 'table'
           when table_type = 'VIEW' then 'view'
           when table_type = 'MATERIALIZED VIEW' then 'materializedview'
           when table_type = 'EXTERNAL TABLE' then 'externaltable'
           else table_type
      end as table_type
    from OPA_DEV.information_schema.tables
    where table_schema ilike 'dbt_test'
      and table_catalog ilike 'opa_dev'
2019-10-01 14:00:52,615 (MainThread): SQL status: SUCCESS 19 in 2.74 seconds
2019-10-01 14:00:52,634 (MainThread): On master: ROLLBACK
2019-10-01 14:00:52,837 (MainThread): Using snowflake connection "master".
2019-10-01 14:00:52,837 (MainThread): On master: BEGIN
2019-10-01 14:00:52,947 (MainThread): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:00:52,947 (MainThread): On master: COMMIT
2019-10-01 14:00:52,947 (MainThread): Using snowflake connection "master".
2019-10-01 14:00:52,947 (MainThread): On master: COMMIT
2019-10-01 14:00:53,111 (MainThread): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:00:53,112 (MainThread): 14:00:53 | Concurrency: 1 threads (target='dev')
2019-10-01 14:00:53,112 (MainThread): 14:00:53 | 
2019-10-01 14:00:53,121 (Thread-1): 14:00:53 | 1 of 21 START view model DBT_TEST.with_ar_agent...................... [RUN]
2019-10-01 14:00:53,122 (Thread-1): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 14:00:53,122 (Thread-1): Opening a new connection, currently in state init
2019-10-01 14:00:53,692 (Thread-1): Compiling model.dbt_test.with_ar_agent
2019-10-01 14:00:53,698 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 14:00:53,732 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 14:00:53,741 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:00:53,742 (Thread-1): On with_ar_agent: BEGIN
2019-10-01 14:00:53,863 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:00:53,863 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:00:53,864 (Thread-1): On with_ar_agent: create or replace view OPA_DEV.DBT_TEST.with_ar_agent as (
    

SELECT DISTINCT
  ag_1.agt_id
  ,ag_1.def_mkt_id
  ,ag_1.agt_tp_id
FROM opa_stg_uk.ar_agent ag_1
WHERE ag_1.file_dt = (SELECT MAX(ag_2.file_dt) FROM opa_stg_uk.ar_agent ag_2 WHERE ag_1.agt_id = ag_2.agt_id)
  );
2019-10-01 14:00:54,812 (Thread-1): SQL status: SUCCESS 1 in 0.95 seconds
2019-10-01 14:00:54,814 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 14:00:54,814 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:00:54,814 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 14:00:54,914 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:00:54,924 (Thread-1): 14:00:54 | 1 of 21 OK created view model DBT_TEST.with_ar_agent................. [SUCCESS 1 in 1.80s]
2019-10-01 14:00:54,927 (Thread-1): 14:00:54 | 2 of 21 START view model DBT_TEST.with_ar_market..................... [RUN]
2019-10-01 14:00:54,931 (Thread-1): Acquiring new snowflake connection "with_ar_market".
2019-10-01 14:00:54,931 (Thread-1): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 14:00:54,933 (Thread-1): Compiling model.dbt_test.with_ar_market
2019-10-01 14:00:54,945 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_market"
2019-10-01 14:00:54,963 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_market"
2019-10-01 14:00:54,971 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:00:54,971 (Thread-1): On with_ar_market: BEGIN
2019-10-01 14:00:55,092 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:00:55,093 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:00:55,093 (Thread-1): On with_ar_market: create or replace view OPA_DEV.DBT_TEST.with_ar_market as (
    

SELECT DISTINCT
  mk_1.mkt_id
  ,mk_1.off_id
FROM opa_stg_uk.ar_market mk_1
WHERE mk_1.file_dt = (SELECT MAX(mk_2.file_dt) FROM opa_stg_uk.ar_market mk_2 WHERE mk_1.mkt_id = mk_2.mkt_id)
  );
2019-10-01 14:00:56,051 (Thread-1): SQL status: SUCCESS 1 in 0.96 seconds
2019-10-01 14:00:56,052 (Thread-1): On with_ar_market: COMMIT
2019-10-01 14:00:56,052 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:00:56,052 (Thread-1): On with_ar_market: COMMIT
2019-10-01 14:00:56,226 (Thread-1): SQL status: SUCCESS 1 in 0.17 seconds
2019-10-01 14:00:56,232 (Thread-1): 14:00:56 | 2 of 21 OK created view model DBT_TEST.with_ar_market................ [SUCCESS 1 in 1.30s]
2019-10-01 14:00:56,233 (Thread-1): 14:00:56 | 3 of 21 START view model DBT_TEST.with_ar_officename................. [RUN]
2019-10-01 14:00:56,237 (Thread-1): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 14:00:56,238 (Thread-1): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 14:00:56,239 (Thread-1): Compiling model.dbt_test.with_ar_officename
2019-10-01 14:00:56,250 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 14:00:56,263 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 14:00:56,272 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:00:56,272 (Thread-1): On with_ar_officename: BEGIN
2019-10-01 14:00:56,436 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:00:56,437 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:00:56,437 (Thread-1): On with_ar_officename: create or replace view OPA_DEV.DBT_TEST.with_ar_officename as (
    

SELECT DISTINCT
  ofn_1.off_name_id
  ,ofn_1.cd
  ,ofn_1.name
  -- ,sm.source_market_code
FROM opa_stg_uk.ar_officename ofn_1
-- LEFT OUTER JOIN opa_stg_all.source_market sm ON 'UKATCOM|' || ofn_1.cd = bk_source_market
WHERE ofn_1.file_dt = (SELECT MAX(ofn_2.file_dt) FROM opa_stg_uk.ar_officename ofn_2 WHERE ofn_1.off_name_id = ofn_2.off_name_id)
  );
2019-10-01 14:00:56,720 (Thread-1): SQL status: SUCCESS 1 in 0.28 seconds
2019-10-01 14:00:56,722 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 14:00:56,722 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:00:56,722 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 14:00:56,811 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:00:56,822 (Thread-1): 14:00:56 | 3 of 21 OK created view model DBT_TEST.with_ar_officename............ [SUCCESS 1 in 0.58s]
2019-10-01 14:00:56,826 (Thread-1): 14:00:56 | 4 of 21 START view model DBT_TEST.with_ar_point...................... [RUN]
2019-10-01 14:00:56,831 (Thread-1): Acquiring new snowflake connection "with_ar_point".
2019-10-01 14:00:56,832 (Thread-1): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 14:00:56,833 (Thread-1): Compiling model.dbt_test.with_ar_point
2019-10-01 14:00:56,848 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_point"
2019-10-01 14:00:56,866 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_point"
2019-10-01 14:00:56,876 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:00:56,876 (Thread-1): On with_ar_point: BEGIN
2019-10-01 14:00:56,996 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:00:56,997 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:00:56,997 (Thread-1): On with_ar_point: create or replace view OPA_DEV.DBT_TEST.with_ar_point as (
    

SELECT
  p.pt_id
  ,p.pt_cd
FROM opa_stg_uk.ar_point p
WHERE p.file_dt = (SELECT MAX(p_2.file_dt) FROM opa_stg_uk.ar_point p_2 WHERE p.pt_id = p_2.pt_id)
  );
2019-10-01 14:00:57,273 (Thread-1): SQL status: SUCCESS 1 in 0.28 seconds
2019-10-01 14:00:57,276 (Thread-1): On with_ar_point: COMMIT
2019-10-01 14:00:57,276 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:00:57,276 (Thread-1): On with_ar_point: COMMIT
2019-10-01 14:00:57,886 (Thread-1): SQL status: SUCCESS 1 in 0.61 seconds
2019-10-01 14:00:57,893 (Thread-1): 14:00:57 | 4 of 21 OK created view model DBT_TEST.with_ar_point................. [SUCCESS 1 in 1.06s]
2019-10-01 14:00:57,894 (Thread-1): 14:00:57 | 5 of 21 START view model DBT_TEST.with_ar_sellstatic................. [RUN]
2019-10-01 14:00:57,899 (Thread-1): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 14:00:57,899 (Thread-1): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 14:00:57,901 (Thread-1): Compiling model.dbt_test.with_ar_sellstatic
2019-10-01 14:00:57,907 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 14:00:57,917 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 14:00:57,924 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:00:57,924 (Thread-1): On with_ar_sellstatic: BEGIN
2019-10-01 14:00:58,109 (Thread-1): SQL status: SUCCESS 1 in 0.18 seconds
2019-10-01 14:00:58,109 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:00:58,109 (Thread-1): On with_ar_sellstatic: create or replace view OPA_DEV.DBT_TEST.with_ar_sellstatic as (
    

SELECT
  sls_1.sell_stc_id
  ,sls_1.stc_stk_id
FROM opa_stg_uk.ar_sellstatic sls_1
WHERE sls_1.file_dt = (SELECT MAX(sls_2.file_dt) FROM opa_stg_uk.ar_sellstatic sls_2 WHERE sls_1.sell_stc_id = sls_2.sell_stc_id)
  );
2019-10-01 14:00:59,095 (Thread-1): SQL status: SUCCESS 1 in 0.99 seconds
2019-10-01 14:00:59,097 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 14:00:59,097 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:00:59,097 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 14:00:59,234 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:00:59,241 (Thread-1): 14:00:59 | 5 of 21 OK created view model DBT_TEST.with_ar_sellstatic............ [SUCCESS 1 in 1.34s]
2019-10-01 14:00:59,244 (Thread-1): 14:00:59 | 6 of 21 START view model DBT_TEST.with_ar_sellunit................... [RUN]
2019-10-01 14:00:59,250 (Thread-1): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 14:00:59,250 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 14:00:59,251 (Thread-1): Compiling model.dbt_test.with_ar_sellunit
2019-10-01 14:00:59,260 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 14:00:59,273 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 14:00:59,282 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:00:59,283 (Thread-1): On with_ar_sellunit: BEGIN
2019-10-01 14:00:59,390 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:00:59,391 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:00:59,391 (Thread-1): On with_ar_sellunit: create or replace view OPA_DEV.DBT_TEST.with_ar_sellunit as (
    

SELECT
  su.sell_unit_id
  ,su.rm_id
  ,su.bb_cd_id
FROM opa_stg_uk.ar_sellunit su
WHERE su.file_dt = (SELECT MAX(su_2.file_dt) FROM opa_stg_uk.ar_sellunit su_2 WHERE su.sell_unit_id = su_2.sell_unit_id)
  );
2019-10-01 14:00:59,682 (Thread-1): SQL status: SUCCESS 1 in 0.29 seconds
2019-10-01 14:00:59,683 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 14:00:59,683 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:00:59,683 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 14:00:59,777 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:00:59,782 (Thread-1): 14:00:59 | 6 of 21 OK created view model DBT_TEST.with_ar_sellunit.............. [SUCCESS 1 in 0.53s]
2019-10-01 14:00:59,784 (Thread-1): 14:00:59 | 7 of 21 START view model DBT_TEST.with_ar_staticroom................. [RUN]
2019-10-01 14:00:59,788 (Thread-1): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 14:00:59,788 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 14:00:59,789 (Thread-1): Compiling model.dbt_test.with_ar_staticroom
2019-10-01 14:00:59,796 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 14:00:59,808 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 14:00:59,815 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:00:59,815 (Thread-1): On with_ar_staticroom: BEGIN
2019-10-01 14:00:59,933 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:00:59,933 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:00:59,933 (Thread-1): On with_ar_staticroom: create or replace view OPA_DEV.DBT_TEST.with_ar_staticroom as (
    

SELECT
  sr.stc_rm_id
  ,sr.stc_stk_id
  ,sr.rm_id
FROM opa_stg_uk.ar_staticroom sr
WHERE sr.file_dt = (SELECT MAX(sr_2.file_dt) FROM opa_stg_uk.ar_staticroom sr_2 WHERE sr.stc_rm_id = sr_2.stc_rm_id)
  );
2019-10-01 14:01:00,267 (Thread-1): SQL status: SUCCESS 1 in 0.33 seconds
2019-10-01 14:01:00,269 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 14:01:00,269 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:01:00,270 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 14:01:00,361 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:01:00,370 (Thread-1): 14:01:00 | 7 of 21 OK created view model DBT_TEST.with_ar_staticroom............ [SUCCESS 1 in 0.58s]
2019-10-01 14:01:00,372 (Thread-1): 14:01:00 | 8 of 21 START view model DBT_TEST.with_ar_staticstock................ [RUN]
2019-10-01 14:01:00,376 (Thread-1): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 14:01:00,376 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 14:01:00,378 (Thread-1): Compiling model.dbt_test.with_ar_staticstock
2019-10-01 14:01:00,391 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 14:01:00,406 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 14:01:00,416 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:01:00,416 (Thread-1): On with_ar_staticstock: BEGIN
2019-10-01 14:01:00,532 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:01:00,533 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:01:00,533 (Thread-1): On with_ar_staticstock: create or replace view OPA_DEV.DBT_TEST.with_ar_staticstock as (
    

SELECT
  ss.stc_stk_id
  ,ss.cd
FROM opa_stg_uk.ar_staticstock ss
WHERE ss.file_dt = (SELECT MAX(ss_2.file_dt) FROM opa_stg_uk.ar_staticstock ss_2 WHERE ss.stc_stk_id = ss_2.stc_stk_id)
  );
2019-10-01 14:01:00,898 (Thread-1): SQL status: SUCCESS 1 in 0.36 seconds
2019-10-01 14:01:00,900 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 14:01:00,901 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:01:00,901 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 14:01:00,999 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:01:01,008 (Thread-1): 14:01:01 | 8 of 21 OK created view model DBT_TEST.with_ar_staticstock........... [SUCCESS 1 in 0.63s]
2019-10-01 14:01:01,012 (Thread-1): 14:01:01 | 9 of 21 START view model DBT_TEST.with_ar_transinvroute.............. [RUN]
2019-10-01 14:01:01,018 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 14:01:01,018 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 14:01:01,020 (Thread-1): Compiling model.dbt_test.with_ar_transinvroute
2019-10-01 14:01:01,032 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 14:01:01,051 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 14:01:01,059 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:01:01,059 (Thread-1): On with_ar_transinvroute: BEGIN
2019-10-01 14:01:01,248 (Thread-1): SQL status: SUCCESS 1 in 0.19 seconds
2019-10-01 14:01:01,249 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:01:01,249 (Thread-1): On with_ar_transinvroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroute as (
    

SELECT
  tir.trans_inv_route_id
  ,tir.trans_route_id
FROM opa_stg_uk.ar_transinvroute tir
WHERE tir.file_dt = (SELECT MAX(tir_2.file_dt) FROM opa_stg_uk.ar_transinvroute tir_2 WHERE tir.trans_inv_route_id = tir_2.trans_inv_route_id)
  );
2019-10-01 14:01:01,495 (Thread-1): SQL status: SUCCESS 1 in 0.25 seconds
2019-10-01 14:01:01,496 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 14:01:01,496 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:01:01,496 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 14:01:01,589 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:01:01,593 (Thread-1): 14:01:01 | 9 of 21 OK created view model DBT_TEST.with_ar_transinvroute......... [SUCCESS 1 in 0.57s]
2019-10-01 14:01:01,594 (Thread-1): 14:01:01 | 10 of 21 START view model DBT_TEST.with_ar_transinvroutesector....... [RUN]
2019-10-01 14:01:01,598 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:01:01,598 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 14:01:01,599 (Thread-1): Compiling model.dbt_test.with_ar_transinvroutesector
2019-10-01 14:01:01,609 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 14:01:01,622 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 14:01:01,629 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:01:01,630 (Thread-1): On with_ar_transinvroutesector: BEGIN
2019-10-01 14:01:01,750 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:01:01,751 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:01:01,751 (Thread-1): On with_ar_transinvroutesector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroutesector as (
    

SELECT
  tirs.trans_inv_route_id
  ,tirs.trans_inv_sec_id
  ,tirs.trans_inv_route_sec_id
FROM opa_stg_uk.ar_transinvroutesector tirs
WHERE tirs.file_dt = (SELECT MAX(tirs_2.file_dt) FROM opa_stg_uk.ar_transinvroutesector tirs_2 WHERE tirs.trans_inv_route_sec_id = tirs_2.trans_inv_route_sec_id)
  );
2019-10-01 14:01:02,180 (Thread-1): SQL status: SUCCESS 1 in 0.43 seconds
2019-10-01 14:01:02,182 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 14:01:02,182 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:01:02,182 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 14:01:02,296 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:01:02,313 (Thread-1): 14:01:02 | 10 of 21 OK created view model DBT_TEST.with_ar_transinvroutesector.. [SUCCESS 1 in 0.71s]
2019-10-01 14:01:02,319 (Thread-1): 14:01:02 | 11 of 21 START view model DBT_TEST.with_ar_transinvsector............ [RUN]
2019-10-01 14:01:02,323 (Thread-1): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 14:01:02,324 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 14:01:02,325 (Thread-1): Compiling model.dbt_test.with_ar_transinvsector
2019-10-01 14:01:02,331 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 14:01:02,350 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 14:01:02,359 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:01:02,359 (Thread-1): On with_ar_transinvsector: BEGIN
2019-10-01 14:01:02,880 (Thread-1): SQL status: SUCCESS 1 in 0.52 seconds
2019-10-01 14:01:02,881 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:01:02,881 (Thread-1): On with_ar_transinvsector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvsector as (
    

SELECT
  tis.trans_inv_sec_id
  ,tis.dep_dt_tm
FROM opa_stg_uk.ar_transinvsector tis
WHERE tis.file_dt = (SELECT MAX(tis_2.file_dt) FROM opa_stg_uk.ar_transinvsector tis_2 WHERE tis.trans_inv_sec_id = tis_2.trans_inv_sec_id)
  );
2019-10-01 14:01:03,330 (Thread-1): SQL status: SUCCESS 1 in 0.45 seconds
2019-10-01 14:01:03,332 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 14:01:03,332 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:01:03,332 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 14:01:03,455 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:01:03,459 (Thread-1): 14:01:03 | 11 of 21 OK created view model DBT_TEST.with_ar_transinvsector....... [SUCCESS 1 in 1.13s]
2019-10-01 14:01:03,461 (Thread-1): 14:01:03 | 12 of 21 START view model DBT_TEST.with_ar_transroute................ [RUN]
2019-10-01 14:01:03,465 (Thread-1): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 14:01:03,466 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 14:01:03,466 (Thread-1): Compiling model.dbt_test.with_ar_transroute
2019-10-01 14:01:03,476 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 14:01:03,489 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 14:01:03,495 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:01:03,495 (Thread-1): On with_ar_transroute: BEGIN
2019-10-01 14:01:03,643 (Thread-1): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 14:01:03,644 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:01:03,644 (Thread-1): On with_ar_transroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transroute as (
    

SELECT
	tr.trans_route_id
	,tr.route_cd
FROM opa_stg_uk.ar_transroute tr
WHERE tr.file_dt = (SELECT MAX(tr_2.file_dt) FROM opa_stg_uk.ar_transroute tr_2 WHERE tr.trans_route_id = tr_2.trans_route_id)
  );
2019-10-01 14:01:03,925 (Thread-1): SQL status: SUCCESS 1 in 0.28 seconds
2019-10-01 14:01:03,927 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 14:01:03,927 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:01:03,927 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 14:01:04,024 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:01:04,033 (Thread-1): 14:01:04 | 12 of 21 OK created view model DBT_TEST.with_ar_transroute........... [SUCCESS 1 in 0.56s]
2019-10-01 14:01:04,035 (Thread-1): 14:01:04 | 13 of 21 START view model DBT_TEST.with_ar_usercodes................. [RUN]
2019-10-01 14:01:04,040 (Thread-1): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 14:01:04,040 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 14:01:04,042 (Thread-1): Compiling model.dbt_test.with_ar_usercodes
2019-10-01 14:01:04,054 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 14:01:04,067 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 14:01:04,074 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:01:04,074 (Thread-1): On with_ar_usercodes: BEGIN
2019-10-01 14:01:04,186 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:01:04,187 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:01:04,187 (Thread-1): On with_ar_usercodes: create or replace view OPA_DEV.DBT_TEST.with_ar_usercodes as (
    

SELECT DISTINCT
  uc_1.user_cd_id
  ,uc_1.cd
  ,uc_1.name
FROM opa_stg_uk.ar_usercodes uc_1
WHERE uc_1.file_dt = (SELECT MAX(uc_2.file_dt) FROM opa_stg_uk.ar_usercodes uc_2 WHERE uc_1.user_cd_id = uc_2.user_cd_id)
  );
2019-10-01 14:01:05,238 (Thread-1): SQL status: SUCCESS 1 in 1.05 seconds
2019-10-01 14:01:05,240 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 14:01:05,240 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:01:05,240 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 14:01:05,371 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:01:05,379 (Thread-1): 14:01:05 | 13 of 21 OK created view model DBT_TEST.with_ar_usercodes............ [SUCCESS 1 in 1.34s]
2019-10-01 14:01:05,380 (Thread-1): 14:01:05 | 14 of 21 START view model DBT_TEST.with_booking_fact_margin.......... [RUN]
2019-10-01 14:01:05,384 (Thread-1): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 14:01:05,385 (Thread-1): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 14:01:05,386 (Thread-1): Compiling model.dbt_test.with_booking_fact_margin
2019-10-01 14:01:05,400 (Thread-1): Writing injected SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 14:01:05,414 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 14:01:05,421 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:01:05,421 (Thread-1): On with_booking_fact_margin: BEGIN
2019-10-01 14:01:06,196 (Thread-1): SQL status: SUCCESS 1 in 0.78 seconds
2019-10-01 14:01:06,197 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:01:06,197 (Thread-1): On with_booking_fact_margin: create or replace view OPA_DEV.DBT_TEST.with_booking_fact_margin as (
    

SELECT
  bff_1.bk_booking
  ,bff_1.ffd_flag
  ,bff_1.sm_currency
  ,bff_1.sm_revenue
  ,bff_1.sm_cnx_and_amend_revenue
  ,bff_1.sm_accommodation_costs
  ,bff_1.sm_early_booking_discounts
  ,bff_1.sm_late_booking_discounts
  ,bff_1.sm_flying_costs
  ,bff_1.sm_other_costs
  ,bff_1.sm_distribution_costs
  ,bff_1.sm_non_margin_items
  ,bff_1.sm_margin
  ,bff_1.smg_currency
  ,bff_1.smg_revenue
  ,bff_1.smg_cnx_and_amend_revenue
  ,bff_1.smg_accommodation_costs
  ,bff_1.smg_early_booking_discounts
  ,bff_1.smg_late_booking_discounts
  ,bff_1.smg_flying_costs
  ,bff_1.smg_other_costs
  ,bff_1.smg_distribution_costs
  ,bff_1.smg_non_margin_items
  ,bff_1.smg_margin
  ,bff_1.rep_currency
  ,bff_1.rep_revenue
  ,bff_1.rep_cnx_and_amend_revenue
  ,bff_1.rep_accommodation_costs
  ,bff_1.rep_early_booking_discounts
  ,bff_1.rep_late_booking_discounts
  ,bff_1.rep_flying_costs
  ,bff_1.rep_other_costs
  ,bff_1.rep_distribution_costs
  ,bff_1.rep_non_margin_items
  ,bff_1.rep_margin
FROM opa_fl_uk.v_booking_fact_margin_uk bff_1
  );
2019-10-01 14:01:06,704 (Thread-1): SQL status: SUCCESS 1 in 0.51 seconds
2019-10-01 14:01:06,706 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 14:01:06,706 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:01:06,707 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 14:01:06,807 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:01:06,811 (Thread-1): 14:01:06 | 14 of 21 OK created view model DBT_TEST.with_booking_fact_margin..... [SUCCESS 1 in 1.42s]
2019-10-01 14:01:06,813 (Thread-1): 14:01:06 | 15 of 21 START view model DBT_TEST.with_dates........................ [RUN]
2019-10-01 14:01:06,816 (Thread-1): Acquiring new snowflake connection "with_dates".
2019-10-01 14:01:06,817 (Thread-1): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 14:01:06,817 (Thread-1): Compiling model.dbt_test.with_dates
2019-10-01 14:01:06,824 (Thread-1): Writing injected SQL for node "model.dbt_test.with_dates"
2019-10-01 14:01:06,832 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_dates"
2019-10-01 14:01:06,838 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:01:06,838 (Thread-1): On with_dates: BEGIN
2019-10-01 14:01:06,964 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:01:06,964 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:01:06,965 (Thread-1): On with_dates: create or replace view OPA_DEV.DBT_TEST.with_dates as (
    


SELECT
	dd.bk_date
	,dd.group_season_code
FROM opa_stg_all.date_dim dd
  );
2019-10-01 14:01:07,229 (Thread-1): SQL status: SUCCESS 1 in 0.26 seconds
2019-10-01 14:01:07,231 (Thread-1): On with_dates: COMMIT
2019-10-01 14:01:07,232 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:01:07,232 (Thread-1): On with_dates: COMMIT
2019-10-01 14:01:07,353 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:01:07,362 (Thread-1): 14:01:07 | 15 of 21 OK created view model DBT_TEST.with_dates................... [SUCCESS 1 in 0.54s]
2019-10-01 14:01:07,365 (Thread-1): 14:01:07 | 16 of 21 START view model DBT_TEST.with_fl_acr_booking............... [RUN]
2019-10-01 14:01:07,371 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 14:01:07,371 (Thread-1): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 14:01:07,373 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking
2019-10-01 14:01:07,385 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 14:01:07,399 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 14:01:07,407 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:01:07,408 (Thread-1): On with_fl_acr_booking: BEGIN
2019-10-01 14:01:07,517 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:01:07,518 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:01:07,518 (Thread-1): On with_fl_acr_booking: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking as (
    

SELECT
  bk_1.sk_booking_id
  ,bk_1.booking_version
  ,bk_1.atcom_res_id
  ,bk_1.atcom_res_version
  ,bk_1.atcom_market_id -- CG ADDED in V1.06 for new Source Market Derivation
  ,bk_1.number_of_adults
  ,bk_1.number_of_children
  ,bk_1.number_of_infants
  ,bk_1.number_of_passengers
  ,bk_1.sk_season_id
  ,bk_1.booking_status
  ,bk_1.atcom_agent_id
  ,bk_1.atcom_sell_currency_id
  ,bk_1.season_date
  ,bk_1.confirmed_on
  ,bk_1.cancelled_on
  ,bk_1.source_created_on
  ,bk_1.modified_on
  ,bk_1.dwh_created_on
  ,bk_1.dwh_modified_on

FROM opa_stg_uk.fl_acr_booking bk_1
WHERE bk_1.file_dt = (SELECT MAX(bk_2.file_dt) FROM opa_stg_uk.fl_acr_booking bk_2 WHERE bk_1.sk_booking_id = bk_2.sk_booking_id AND bk_1.booking_version = bk_2.booking_version)
AND bk_1.booking_version = (SELECT MAX(bk_3.booking_version) FROM opa_stg_uk.fl_acr_booking bk_3 WHERE bk_1.sk_booking_id = bk_3.sk_booking_id)
AND (bk_1.sk_season_id > 201701 OR bk_1.sk_booking_id IS NULL)

-- To be removed when running against all bookings
AND bk_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 14:01:08,267 (Thread-1): SQL status: SUCCESS 1 in 0.75 seconds
2019-10-01 14:01:08,268 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 14:01:08,269 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:01:08,269 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 14:01:08,363 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:01:08,367 (Thread-1): 14:01:08 | 16 of 21 OK created view model DBT_TEST.with_fl_acr_booking.......... [SUCCESS 1 in 0.99s]
2019-10-01 14:01:08,368 (Thread-1): 14:01:08 | 17 of 21 START view model DBT_TEST.with_fl_acr_booking_service....... [RUN]
2019-10-01 14:01:08,372 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:01:08,373 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 14:01:08,373 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking_service
2019-10-01 14:01:08,381 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 14:01:08,394 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 14:01:08,403 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:01:08,403 (Thread-1): On with_fl_acr_booking_service: BEGIN
2019-10-01 14:01:08,524 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:01:08,525 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:01:08,525 (Thread-1): On with_fl_acr_booking_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking_service as (
    

SELECT
  bk_ser_1.sk_booking_service_id
  ,bk_ser_1.sk_booking_id
  ,bk_ser_1.sk_service_id
  ,bk_ser_1.service_version
  ,bk_ser_1.booking_version
FROM opa_stg_uk.fl_acr_booking_service bk_ser_1
WHERE bk_ser_1.file_dt = (SELECT MAX(bk_ser_2.file_dt) FROM opa_stg_uk.fl_acr_booking_service bk_ser_2 WHERE bk_ser_1.sk_booking_service_id = bk_ser_2.sk_booking_service_id)
AND bk_ser_1.booking_version = (SELECT MAX(bk_ser_3.booking_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_3 WHERE bk_ser_1.sk_booking_id = bk_ser_3.sk_booking_id)
AND bk_ser_1.service_version = (SELECT MAX(bk_ser_4.service_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_4 WHERE bk_ser_1.sk_service_id = bk_ser_4.sk_service_id)

-- To be removed when running against all bookings
AND bk_ser_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 14:01:08,762 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:01:08,764 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 14:01:08,764 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:01:08,764 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 14:01:09,005 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:01:09,016 (Thread-1): 14:01:09 | 17 of 21 OK created view model DBT_TEST.with_fl_acr_booking_service.. [SUCCESS 1 in 0.64s]
2019-10-01 14:01:09,018 (Thread-1): 14:01:09 | 18 of 21 START view model DBT_TEST.with_fl_acr_service............... [RUN]
2019-10-01 14:01:09,024 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 14:01:09,024 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 14:01:09,026 (Thread-1): Compiling model.dbt_test.with_fl_acr_service
2019-10-01 14:01:09,039 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 14:01:09,054 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 14:01:09,061 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:01:09,062 (Thread-1): On with_fl_acr_service: BEGIN
2019-10-01 14:01:09,170 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:01:09,170 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:01:09,170 (Thread-1): On with_fl_acr_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service as (
    

SELECT
  ser_1.sk_service_id
  ,ser_1.atcom_ser_id
  ,ser_1.atcom_dep_point_id
  ,ser_1.service_version
  ,ser_1.service_status
  ,ser_1.direction
  ,ser_1.sell_type
  ,ser_1.service_type
  ,ser_1.flight_type_code
  ,ser_1.service_start_date1
  ,ser_1.service_end_date1
  ,ser_1.departure_flight_number
  ,ser_1.atcom_arr_point_id
  ,ser_1.source_stock_type_code
FROM opa_stg_uk.fl_acr_service ser_1
WHERE ser_1.file_dt = (SELECT MAX(ser_2.file_dt) FROM opa_stg_uk.fl_acr_service ser_2 WHERE ser_1.sk_service_id = ser_2.sk_service_id AND ser_1.service_version = ser_2.service_version)
  );
2019-10-01 14:01:09,585 (Thread-1): SQL status: SUCCESS 1 in 0.41 seconds
2019-10-01 14:01:09,586 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 14:01:09,587 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:01:09,587 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 14:01:09,680 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:01:09,684 (Thread-1): 14:01:09 | 18 of 21 OK created view model DBT_TEST.with_fl_acr_service.......... [SUCCESS 1 in 0.66s]
2019-10-01 14:01:09,686 (Thread-1): 14:01:09 | 19 of 21 START view model DBT_TEST.with_fl_acr_service_element....... [RUN]
2019-10-01 14:01:09,690 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 14:01:09,690 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 14:01:09,691 (Thread-1): Compiling model.dbt_test.with_fl_acr_service_element
2019-10-01 14:01:09,699 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 14:01:09,707 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 14:01:09,714 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:01:09,714 (Thread-1): On with_fl_acr_service_element: BEGIN
2019-10-01 14:01:09,919 (Thread-1): SQL status: SUCCESS 1 in 0.21 seconds
2019-10-01 14:01:09,919 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:01:09,920 (Thread-1): On with_fl_acr_service_element: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service_element as (
    

SELECT
  ser_e_1.sk_service_id
  ,ser_e_1.service_version
  ,ser_e_1.atcom_sub_ser_id
FROM opa_stg_uk.fl_acr_service_element ser_e_1
WHERE ser_e_1.file_dt = (SELECT MAX(ser_e_2.file_dt) FROM opa_stg_uk.fl_acr_service_element ser_e_2 WHERE ser_e_1.sk_service_element_id = ser_e_2.sk_service_element_id)
  );
2019-10-01 14:01:10,235 (Thread-1): SQL status: SUCCESS 1 in 0.32 seconds
2019-10-01 14:01:10,237 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 14:01:10,238 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:01:10,238 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 14:01:10,352 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:01:10,358 (Thread-1): 14:01:10 | 19 of 21 OK created view model DBT_TEST.with_fl_acr_service_element.. [SUCCESS 1 in 0.67s]
2019-10-01 14:01:10,360 (Thread-1): 14:01:10 | 20 of 21 START view model DBT_TEST.with_ar_currency.................. [RUN]
2019-10-01 14:01:10,366 (Thread-1): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 14:01:10,366 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 14:01:10,368 (Thread-1): Compiling model.dbt_test.with_ar_currency
2019-10-01 14:01:10,378 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 14:01:10,391 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 14:01:10,397 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:01:10,397 (Thread-1): On with_ar_currency: BEGIN
2019-10-01 14:01:10,504 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:01:10,505 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:01:10,506 (Thread-1): On with_ar_currency: create or replace view OPA_DEV.DBT_TEST.with_ar_currency as (
    

SELECT DISTINCT
  cur_1.cur_id
  ,cur_1.cd
  ,cur_1.name
FROM opa_stg_uk.ar_currency cur_1
WHERE cur_1.file_dt = (SELECT MAX(cur_2.file_dt) FROM opa_stg_uk.ar_currency cur_2 WHERE cur_1.cur_id = cur_2.cur_id)
  );
2019-10-01 14:01:10,948 (Thread-1): SQL status: SUCCESS 1 in 0.44 seconds
2019-10-01 14:01:10,950 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 14:01:10,950 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:01:10,950 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 14:01:11,075 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:01:11,079 (Thread-1): 14:01:11 | 20 of 21 OK created view model DBT_TEST.with_ar_currency............. [SUCCESS 1 in 0.71s]
2019-10-01 14:01:11,081 (Thread-1): 14:01:11 | 21 of 21 START view model DBT_TEST.v_booking_fact_uk................. [RUN]
2019-10-01 14:01:11,085 (Thread-1): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 14:01:11,085 (Thread-1): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 14:01:11,086 (Thread-1): Compiling model.dbt_test.v_booking_fact_uk
2019-10-01 14:01:11,144 (Thread-1): Writing injected SQL for node "model.dbt_test.v_booking_fact_uk"
2019-10-01 14:01:11,191 (Thread-1): Writing runtime SQL for node "model.dbt_test.v_booking_fact_uk"
2019-10-01 14:01:11,322 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:01:11,322 (Thread-1): On v_booking_fact_uk: BEGIN
2019-10-01 14:01:11,435 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:01:11,436 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:01:11,436 (Thread-1): On v_booking_fact_uk: create or replace view OPA_DEV.DBT_TEST.v_booking_fact_uk as (
    

WITH booking_service AS (
	SELECT
		bk_ser.sk_booking_id
		,bk_ser.booking_version
		,bk_ser.sk_service_id
		,bk_ser.service_version
		,bk_ser.sk_booking_service_id
		,ser.service_type
		,ser.source_stock_type_code
		,ser.sell_type
		,ser.service_status
		,ser.flight_type_code
		,ser.service_start_date1
		,ser.service_end_date1
		,tis.dep_dt_tm
		,ser.departure_flight_number
		,ser.direction
		,tr.route_cd
		,dpt.pt_cd
		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN apt.pt_cd
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				AND ser.service_status = 'CON'
				THEN apt.pt_cd
				ELSE NULL
			END
		END AS min_flight_gateway

		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
					AND ser.service_status = 'CON'
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		END	AS min_flight_id

		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MAX(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MAX(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
					AND ser.service_status = 'CON'
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		END AS max_flight_id


		-- MULTICENTRE
		,CASE WHEN
			-- All multicentre services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END	AS min_multi_center_date

		,CASE WHEN
			-- All multicentre services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS max_multi_center_date


		-- ACCOM
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU'))
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_accom_date
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU'))
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS max_accom_date


		-- CRUISE
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_cruise_date
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END max_cruise_date


		-- FLIGHT
		,CASE WHEN
			-- All flight services cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_flight_date
		,CASE WHEN
			-- All flight services cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END	AS max_flight_date

		,sts.cd AS accom
		,su.bb_cd_id AS board_cd
		,uc_3.name AS board_name
		,str.stc_rm_id AS room

		-- Booking type derivation part 1
		,CASE WHEN
				-- No outbound flight services on the booking are third party
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
		THEN 0
		ELSE
			CASE WHEN
				-- All outbound flight services are 3PF
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
					+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				=
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

			OR
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
			THEN 1
			ELSE 0
			END
		END AS tpf_out_count
		,CASE WHEN
				-- No outbound flight services on the booking are third party
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
		THEN 0
		ELSE
			CASE WHEN
				-- All outbound flight services are 3PF
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
					+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				=
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

			OR
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
			THEN 1
			ELSE 0
			END
		END AS tpf_in_count
		,CASE WHEN
				CASE WHEN
						-- No outbound flight services on the booking are third party
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
				THEN 0
				ELSE
					CASE WHEN
						-- All outbound flight services are 3PF
						SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
							+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
						=
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

					OR
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
					THEN 1
					ELSE 0
					END
				END
			+
				CASE WHEN
						-- No outbound flight services on the booking are third party
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
				THEN 0
				ELSE
					CASE WHEN
						-- All outbound flight services are 3PF
						SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
							+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
						=
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

					OR
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
					THEN 1
					ELSE 0
					END
				END
		> 0
			THEN 'Y'
			ELSE 'N'
		END AS tpf_indicator
		,CASE WHEN
				-- All accom cancelled
				SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS accom_count
		,CASE WHEN
				-- All cruise cancelled
				SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS cruise_count
		,CASE WHEN
				-- All flight out cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS flight_out_count
		,CASE WHEN
				-- All flight in cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS flight_ret_count
		,CASE WHEN
				-- All ahoc services cancelled
				SUM(CASE WHEN ser.service_type = 'AHOC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'AHOC' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'AHOC' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS thirdparty_count

		,CASE WHEN
				-- All flight out first date cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN ser.service_start_date1 ELSE NULL END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN ser.service_start_date1 ELSE NULL END
		END AS flight_out_first_date
		,CASE WHEN
				-- All flight in first date cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN ser.service_start_date1 ELSE NULL END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN ser.service_start_date1 ELSE NULL END
		END AS flight_ret_first_date

	-- Service and subservice
	FROM OPA_DEV.DBT_TEST.with_fl_acr_booking_service bk_ser
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_fl_acr_service ser ON bk_ser.sk_service_id = ser.sk_service_id AND bk_ser.service_version = ser.service_version
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_fl_acr_service_element ser_e ON ser.sk_service_id = ser_e.sk_service_id AND ser.service_version = ser_e.service_version

	-- Accom
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_sellstatic sls ON ser.atcom_ser_id = sls.sell_stc_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_staticstock sts ON sls.stc_stk_id = sts.stc_stk_id

	-- Room
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_sellunit su ON ser_e.atcom_sub_ser_id = su.sell_unit_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_staticroom str ON sts.stc_stk_id = str.stc_stk_id AND su.rm_id = str.rm_id

	-- Board
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_usercodes uc_3 ON su.bb_cd_id = uc_3.user_cd_id

	-- Flight
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvroute tir ON ser.atcom_ser_id = tir.trans_inv_route_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transroute tr ON tir.trans_route_id = tr.trans_route_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvroutesector tirs ON tir.trans_inv_route_id = tirs.trans_inv_route_id
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvsector tis ON tirs.trans_inv_sec_id = tis.trans_inv_sec_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_point dpt ON ser.atcom_dep_point_id = dpt.pt_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_point apt ON ser.atcom_arr_point_id = apt.pt_id

	ORDER BY
		bk_ser.sk_booking_id
		,bk_ser.booking_version
		,ser.source_stock_type_code

)
,booking_fact_1 AS (
  SELECT DISTINCT
    CASE WHEN bk.atcom_res_id IS NULL THEN NULL ELSE 'UKATCOM|' || bk.atcom_res_id || '|' || bk.booking_version END AS bk_booking
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS bk_primary_accom
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS bk_primary_room
    ,COALESCE(
      CASE WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
        AND COUNT(DISTINCT bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) > 1
          THEN 'MULTI'
      WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
        AND COUNT(DISTINCT bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = 1
          THEN 'UKATCOM|' || MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      WHEN SUM(bs.flight_out_count) OVER (PARTITION BY bk.atcom_res_id) > 1
        THEN 'MULTI'
        ELSE 'UKATCOM|' || MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      END
    , 'U') AS bk_first_flight
    ,COALESCE(
      CASE WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
          THEN NULL
      WHEN SUM(bs.flight_ret_count) OVER (PARTITION BY bk.atcom_res_id) > 1
        THEN 'MULTI'
        ELSE 'UKATCOM|' || MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      END
    , 'U') AS bk_last_flight
    ,CASE WHEN ofn.cd IS NULL
      THEN 'UKATCOM|U'
      ELSE 'UKATCOM|' || ofn.cd
    END AS bk_source_market
    ,'UKATCOM' AS bk_originating_system
    ,CASE WHEN
        -- Third party flight
        SUM(CASE WHEN bs.tpf_indicator = 'Y' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|3PF'

      WHEN
        -- Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGAF'

      WHEN
        -- Cruise and Flight Package
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) > 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGCF'

      WHEN
        -- Cruise and Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGCAF'

      WHEN
        -- Multi Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMAF'

      WHEN
        -- Multi Cruise and Flight Package
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMCF'

      WHEN
        -- Multi Accommodation and One Cruise and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMACF'

      WHEN
        -- Multi Cruise and One Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMCAF'

      WHEN
        -- Multi Accommodation and Multi Cruise and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMAMCF'

      WHEN
        -- Single Accommodation Only
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCA'

      WHEN
        -- Multi Accommodation Only
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCMA'

      WHEN
        -- Accommodation and Flight Other
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 1
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCOTH'

      WHEN
        -- Flight Only Return Outbound First
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id) < MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTROF'

      WHEN
        -- Flight Only Return Inbound First
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id) < MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTRIF'

      WHEN
        -- Flight only same day return
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id) = MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTSDR'

      WHEN
        -- Flight Only One Way Outbound
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTOBO'

      WHEN
        -- Flight Only One Way Inbound
        SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTIBO'

      WHEN
        -- Single Cruise Only
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|CRU' -- Granular code = 'CRUSGL'

      WHEN
        -- Multi Cruise Only
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|CRU' -- Granular code = 'CRUMLT'

      WHEN
        -- Third party
        SUM(bs.thirdparty_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|TPB' -- Granular code = 'TPB'

      ELSE 'UKATCOM|OTH'
    END AS bk_booking_type
    ,CASE WHEN bk.booking_status IS NULL
      THEN 'U'
      ELSE 'UKATCOM|' || bk.booking_status
    END AS bk_booking_status
    ,bk.atcom_res_id AS source_booking_id
    --,bk.atcom_res_version AS source_booking_version
    ,bk.booking_version AS source_booking_version -- swapped to FL version not Atcom version PiT
    ,COALESCE(CAST(bk.source_created_on AS TIMESTAMP), CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_created_datetime
    ,COALESCE(bk.confirmed_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_confirmed_datetime
    ,COALESCE(bk.cancelled_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_cancelled_datetime
    ,gs.group_season_code AS group_season
    ,CASE WHEN bk.sk_season_id IS NULL OR bk.sk_season_id = -1 OR bk.sk_season_id = -2
      THEN NULL
      ELSE
        CASE WHEN SUBSTRING(bk.sk_season_id, 5, 2) = 01
          THEN 'S' || SUBSTRING(bk.sk_season_id, 3, 2)
          ELSE 'W' || SUBSTRING(bk.sk_season_id, 3, 2)
        END
    END AS sm_season
    ,CASE WHEN uc.cd IS NULL
      THEN NULL
      ELSE 'UKATCOM|' || uc.cd
    END AS channel_code
    ,CASE WHEN uc.name IS NULL
      THEN NULL
      ELSE 'UKATCOM|' || uc.name
    END AS channel_desc
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS booked_board_code
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS booked_board_name
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
      ELSE
        CASE WHEN SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
    END AS multi_room_booking
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      ELSE
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
    END AS number_of_booked_rooms
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
      ELSE
        CASE WHEN COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
    END AS multi_centre_booking
    ,COALESCE(bk.season_date,CAST('2999-12-31 23:59:59.0' AS DATE)) AS departure_date
    ,COALESCE(
      bs.max_multi_center_date,
      bs.max_accom_date,
      bs.max_cruise_date,
      bs.max_flight_date,
      CAST('2999-12-31 23:59:59.0' AS DATE)
    ) AS return_date
    ,CASE WHEN
      COALESCE(bk.season_date, CAST('2999-12-31 23:59:59.0' AS DATE)) = CAST('2999-12-31 23:59:59.0' AS DATE)
    OR
      COALESCE(
        bs.max_multi_center_date,
        bs.max_accom_date,
        bs.max_cruise_date,
        bs.max_flight_date,
        CAST('2999-12-31 23:59:59.0' AS DATE)
      ) = CAST('2999-12-31 23:59:59.0' AS DATE)
    THEN 0
    ELSE
      DATEDIFF('DAY',
        bk.season_date
      ,
        COALESCE(
          bs.max_multi_center_date,
          bs.max_accom_date,
          bs.max_cruise_date,
          bs.max_flight_date)
      )
    END	AS DURATION
    ,COALESCE(bk.number_of_adults, 0) AS std_number_of_booking_adult_pax
    ,COALESCE(bk.number_of_children, 0) AS std_number_of_booking_child_pax
    ,COALESCE(bk.number_of_infants, 0) AS std_number_of_booking_infant_pax
    ,COALESCE(bk.number_of_passengers, 0) AS std_number_of_booking_pax
    ,COALESCE(bk.number_of_adults, 0) AS sm_number_of_booking_adult_pax
    ,0 AS sm_number_of_booking_teenager_pax
    ,COALESCE(bk.number_of_children, 0) AS sm_number_of_booking_child_pax
    ,COALESCE(bk.number_of_infants, 0) AS sm_number_of_booking_infant_pax
    ,COALESCE(bk.number_of_passengers, 0) AS sm_number_of_booking_pax
    ,CASE WHEN COUNT(DISTINCT bs.min_flight_gateway) OVER (PARTITION BY bk.atcom_res_id) > 1
      THEN 'MULTI'
      ELSE MIN(bs.min_flight_gateway) OVER (PARTITION BY bk.atcom_res_id)
    END AS primary_gateway
    -- ,cur.name AS currency
    ,'Insert' AS record_type
    ,COALESCE(bk.effective_from, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS effective_from
    ,COALESCE(
      bk.lead_effective_from
      ,bk.effective_to
      ,CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)
    ) AS effective_to
    ,COALESCE(bk.dwh_created_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS sm_created_datetime
    ,COALESCE(bk.dwh_modified_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS sm_updated_datetime
    ,CAST(CONVERT_TIMEZONE('Europe/London',CURRENT_TIMESTAMP()) AS TIMESTAMP_NTZ) AS dm_created_datetime

  FROM OPA_DEV.DBT_TEST.with_fl_acr_booking bk
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_fl_acr_booking_service bs ON bk.sk_booking_id = bs.sk_booking_id AND bk.booking_version = bs.booking_version

  -- Group Season
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_dates gs ON CAST(COALESCE(SUBSTRING(bk.season_date, 1, 4) || SUBSTRING(bk.season_date, 6, 2) || SUBSTRING(bk.season_date, 9, 2), 20991231) AS INTEGER) = gs.bk_date

  -- Market source
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_agent ag ON bk.atcom_agent_id = ag.agt_id

  -- V1.06 Version of source market joins
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_market m   ON bk.atcom_market_id = m.mkt_id
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_officename ofn ON m.off_id = ofn.off_name_id

  -- Channel
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_usercodes uc ON ag.agt_tp_id = uc.user_cd_id

  -- Currency
  -- LEFT OUTER JOIN ar_currency cur ON bk.atcom_sell_currency_id = cur.cur_id

  WHERE bk_booking IS NOT NULL
)

SELECT
  bf_1.bk_booking,
  bf_1.bk_primary_accom,
  bf_1.bk_primary_room,
  bf_1.bk_first_flight,
  bf_1.bk_last_flight,
  bf_1.bk_source_market,
  bf_1.bk_originating_system,
  bf_1.bk_booking_type,
  bf_1.bk_booking_status,
  bf_1.source_booking_id,
  bf_1.source_booking_version,
  bf_1.booking_created_datetime,
  bf_1.booking_confirmed_datetime,
  bf_1.booking_cancelled_datetime,
  bf_1.group_season,
  bf_1.sm_season,
  bf_1.channel_code,
  bf_1.channel_desc,
  bf_1.booked_board_code,
  bf_1.booked_board_name,
  bf_1.multi_room_booking,
  bf_1.number_of_booked_rooms,
  bf_1.multi_centre_booking,
  bf_1.departure_date,
  bf_1.return_date,
  bf_1.duration,
  bf_1.std_number_of_booking_adult_pax,
  bf_1.std_number_of_booking_child_pax,
  bf_1.std_number_of_booking_infant_pax,
  bf_1.std_number_of_booking_pax,
  bf_1.sm_number_of_booking_adult_pax,
  bf_1.sm_number_of_booking_teenager_pax,
  bf_1.sm_number_of_booking_child_pax,
  bf_1.sm_number_of_booking_infant_pax,
  bf_1.sm_number_of_booking_pax,
  bf_1.primary_gateway,
  COALESCE(bfm.sm_currency, fx.bk_sm_ccy, 'U') AS sm_currency,
  COALESCE(bfm.sm_revenue, 0) AS sm_revenue,
  COALESCE(bfm.sm_cnx_and_amend_revenue, 0) AS sm_cnx_and_amend_revenue,
  COALESCE(bfm.sm_accommodation_costs, 0) AS sm_accommodation_costs,
  COALESCE(bfm.sm_early_booking_discounts, 0) AS sm_early_booking_discounts,
  COALESCE(bfm.sm_late_booking_discounts, 0) AS sm_late_booking_discounts,
  COALESCE(bfm.sm_flying_costs, 0) AS sm_flying_costs,
  COALESCE(bfm.sm_other_costs, 0) AS sm_other_costs,
  COALESCE(bfm.sm_distribution_costs, 0) AS sm_distribution_costs,
  COALESCE(bfm.sm_non_margin_items, 0) AS sm_non_margin_items,
  COALESCE(bfm.sm_margin, 0) AS sm_margin,
  COALESCE(bfm.smg_currency, fx.bk_smg_ccy, 'U') AS smg_currency,
  COALESCE(bfm.smg_revenue, 0) AS smg_revenue,
  COALESCE(bfm.smg_cnx_and_amend_revenue, 0) AS smg_cnx_and_amend_revenue,
  COALESCE(bfm.smg_accommodation_costs, 0) AS smg_accommodation_costs,
  COALESCE(bfm.smg_early_booking_discounts, 0) AS smg_early_booking_discounts,
  COALESCE(bfm.smg_late_booking_discounts, 0) AS smg_late_booking_discounts,
  COALESCE(bfm.smg_flying_costs, 0) AS smg_flying_costs,
  COALESCE(bfm.smg_other_costs, 0) AS smg_other_costs,
  COALESCE(bfm.smg_distribution_costs, 0) AS smg_distribution_costs,
  COALESCE(bfm.smg_non_margin_items, 0) AS smg_non_margin_items,
  COALESCE(bfm.smg_margin, 0) AS smg_margin,
  COALESCE(bfm.rep_currency, fx.bk_rep_ccy, 'U') AS rep_currency,
  COALESCE(bfm.rep_revenue, 0) AS rep_revenue,
  COALESCE(bfm.rep_cnx_and_amend_revenue, 0) AS rep_cnx_and_amend_revenue,
  COALESCE(bfm.rep_accommodation_costs, 0) AS rep_accommodation_costs,
  COALESCE(bfm.rep_early_booking_discounts, 0) AS rep_early_booking_discounts,
  COALESCE(bfm.rep_late_booking_discounts, 0) AS rep_late_booking_discounts,
  COALESCE(bfm.rep_flying_costs, 0) AS rep_flying_costs,
  COALESCE(bfm.rep_other_costs, 0) AS rep_other_costs,
  COALESCE(bfm.rep_distribution_costs, 0) AS rep_distribution_costs,
  COALESCE(bfm.rep_non_margin_items, 0) AS rep_non_margin_items,
  COALESCE(bfm.rep_margin, 0) AS rep_margin,
  COALESCE(bfm.ffd_flag, 'N') AS ffd_flag,
  bf_1.record_type,
  bf_1.effective_from,
  bf_1.effective_to,
  bf_1.sm_created_datetime,
  bf_1.sm_updated_datetime,
  bf_1.dm_created_datetime,
  CASE WHEN bf_1.source_booking_version = MAX(bf_1.source_booking_version) OVER (PARTITION BY LEFT(bf_1.bk_booking, LENGTH(bf_1.bk_booking) - REGEXP_INSTR(bf_1.bk_booking, '|', 2)))
    THEN 'Y'
    ELSE 'N'
  END AS latest_record_indicator
FROM booking_fact_1 bf_1
LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_booking_fact_margin bfm ON bf_1.bk_booking = bfm.bk_booking
LEFT OUTER JOIN opa_fl_all.source_market sm ON bf_1.bk_source_market = sm.bk_source_market
LEFT OUTER JOIN opa_fl_uk.fx_rates_dim_uk fx
  ON bf_1.sm_season = fx.bk_season
  AND sm.source_market_code = fx.source_market_code
ORDER BY
  bk_booking
  ,source_booking_version
  ,record_type DESC
);
2019-10-01 14:01:12,475 (Thread-1): Snowflake error: 000904 (42000): 018f414d-005d-aaf4-0000-0e29015fd91e: SQL compilation error: error line 502 at position 22
invalid identifier 'BS.SERVICE_TYPE'
2019-10-01 14:01:12,475 (Thread-1): On v_booking_fact_uk: ROLLBACK
2019-10-01 14:01:12,616 (Thread-1): 14:01:12 | 21 of 21 ERROR creating view model DBT_TEST.v_booking_fact_uk........ [ERROR in 1.53s]
2019-10-01 14:01:12,662 (MainThread): Using snowflake connection "master".
2019-10-01 14:01:12,662 (MainThread): On master: BEGIN
2019-10-01 14:01:12,791 (MainThread): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:01:12,791 (MainThread): On master: COMMIT
2019-10-01 14:01:12,791 (MainThread): Using snowflake connection "master".
2019-10-01 14:01:12,791 (MainThread): On master: COMMIT
2019-10-01 14:01:12,939 (MainThread): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 14:01:12,940 (MainThread): 14:01:12 | 
2019-10-01 14:01:12,940 (MainThread): 14:01:12 | Finished running 21 view models in 25.12s.
2019-10-01 14:01:12,941 (MainThread): Connection 'master' was left open.
2019-10-01 14:01:12,942 (MainThread): On master: Close
2019-10-01 14:01:13,121 (MainThread): Connection 'v_booking_fact_uk' was left open.
2019-10-01 14:01:13,122 (MainThread): On v_booking_fact_uk: Close
2019-10-01 14:01:13,354 (MainThread): 
2019-10-01 14:01:13,354 (MainThread): Completed with 1 error and 0 warnings:
2019-10-01 14:01:13,356 (MainThread): 
2019-10-01 14:01:13,357 (MainThread): Database Error in model v_booking_fact_uk (models\v_booking_fact_uk.sql)
2019-10-01 14:01:13,364 (MainThread):   000904 (42000): 018f414d-005d-aaf4-0000-0e29015fd91e: SQL compilation error: error line 502 at position 22
2019-10-01 14:01:13,367 (MainThread):   invalid identifier 'BS.SERVICE_TYPE'
2019-10-01 14:01:13,370 (MainThread):   compiled SQL at target\compiled\dbt_test\v_booking_fact_uk.sql
2019-10-01 14:01:13,375 (MainThread): 
Done. PASS=20 WARN=0 ERROR=1 SKIP=0 TOTAL=21
2019-10-01 14:01:13,379 (MainThread): Flushing usage events
2019-10-01 14:04:03,404 (MainThread): Tracking: tracking
2019-10-01 14:04:03,406 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C93E48>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C937C8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C6EE08>]}
2019-10-01 14:04:03,715 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 14:04:03,716 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: ResourceWarning: unclosed <socket.socket fd=488, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('10.32.130.75', 58088), raddr=('54.164.98.48', 443)>

2019-10-01 14:04:03,717 (MainThread): Error sending message, disabling tracking
2019-10-01 14:04:03,745 (MainThread): Parsing macros\core.sql
2019-10-01 14:04:03,754 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 14:04:03,793 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 14:04:03,803 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 14:04:03,806 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 14:04:03,810 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 14:04:03,814 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 14:04:03,817 (MainThread): Parsing macros\etc\query.sql
2019-10-01 14:04:03,820 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 14:04:03,829 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 14:04:03,838 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 14:04:03,851 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 14:04:03,878 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 14:04:03,914 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 14:04:03,920 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 14:04:03,948 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 14:04:03,956 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 14:04:03,963 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 14:04:03,972 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 14:04:03,975 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 14:04:03,980 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 14:04:03,984 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 14:04:03,990 (MainThread): Parsing macros\adapters.sql
2019-10-01 14:04:04,013 (MainThread): Parsing macros\catalog.sql
2019-10-01 14:04:04,016 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 14:04:04,027 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 14:04:04,032 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 14:04:04,037 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 14:04:04,066 (MainThread): Parsing model.dbt_test.v_booking_fact_uk
2019-10-01 14:04:04,069 (MainThread): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 14:04:04,069 (MainThread): Opening a new connection, currently in state init
2019-10-01 14:04:04,071 (MainThread): c:\python\python37\lib\site-packages\botocore\vendored\requests\models.py:169: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working

2019-10-01 14:04:04,351 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\botocore\\vendored\\requests\\cacert.pem'>

2019-10-01 14:04:04,376 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\certifi\\cacert.pem'>

2019-10-01 14:04:04,962 (MainThread): Parsing model.dbt_test.with_ar_agent
2019-10-01 14:04:04,964 (MainThread): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 14:04:04,965 (MainThread): Re-using an available connection from the pool (formerly v_booking_fact_uk).
2019-10-01 14:04:04,975 (MainThread): Parsing model.dbt_test.with_ar_currency
2019-10-01 14:04:04,977 (MainThread): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 14:04:04,978 (MainThread): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 14:04:04,988 (MainThread): Parsing model.dbt_test.with_ar_market
2019-10-01 14:04:04,991 (MainThread): Acquiring new snowflake connection "with_ar_market".
2019-10-01 14:04:04,991 (MainThread): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 14:04:05,003 (MainThread): Parsing model.dbt_test.with_ar_officename
2019-10-01 14:04:05,005 (MainThread): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 14:04:05,005 (MainThread): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 14:04:05,017 (MainThread): Parsing model.dbt_test.with_ar_point
2019-10-01 14:04:05,019 (MainThread): Acquiring new snowflake connection "with_ar_point".
2019-10-01 14:04:05,020 (MainThread): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 14:04:05,031 (MainThread): Parsing model.dbt_test.with_ar_sellstatic
2019-10-01 14:04:05,034 (MainThread): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 14:04:05,034 (MainThread): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 14:04:05,046 (MainThread): Parsing model.dbt_test.with_ar_sellunit
2019-10-01 14:04:05,048 (MainThread): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 14:04:05,048 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 14:04:05,059 (MainThread): Parsing model.dbt_test.with_ar_staticroom
2019-10-01 14:04:05,062 (MainThread): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 14:04:05,062 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 14:04:05,072 (MainThread): Parsing model.dbt_test.with_ar_staticstock
2019-10-01 14:04:05,074 (MainThread): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 14:04:05,074 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 14:04:05,082 (MainThread): Parsing model.dbt_test.with_ar_transinvroute
2019-10-01 14:04:05,084 (MainThread): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 14:04:05,084 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 14:04:05,091 (MainThread): Parsing model.dbt_test.with_ar_transinvroutesector
2019-10-01 14:04:05,093 (MainThread): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:04:05,093 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 14:04:05,100 (MainThread): Parsing model.dbt_test.with_ar_transinvsector
2019-10-01 14:04:05,102 (MainThread): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 14:04:05,102 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 14:04:05,110 (MainThread): Parsing model.dbt_test.with_ar_transroute
2019-10-01 14:04:05,112 (MainThread): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 14:04:05,112 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 14:04:05,119 (MainThread): Parsing model.dbt_test.with_ar_usercodes
2019-10-01 14:04:05,121 (MainThread): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 14:04:05,121 (MainThread): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 14:04:05,129 (MainThread): Parsing model.dbt_test.with_booking_fact_margin
2019-10-01 14:04:05,130 (MainThread): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 14:04:05,131 (MainThread): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 14:04:05,140 (MainThread): Parsing model.dbt_test.with_dates
2019-10-01 14:04:05,142 (MainThread): Acquiring new snowflake connection "with_dates".
2019-10-01 14:04:05,143 (MainThread): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 14:04:05,152 (MainThread): Parsing model.dbt_test.with_fl_acr_booking
2019-10-01 14:04:05,154 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 14:04:05,154 (MainThread): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 14:04:05,164 (MainThread): Parsing model.dbt_test.with_fl_acr_booking_service
2019-10-01 14:04:05,165 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:04:05,165 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 14:04:05,176 (MainThread): Parsing model.dbt_test.with_fl_acr_service
2019-10-01 14:04:05,179 (MainThread): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 14:04:05,179 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 14:04:05,189 (MainThread): Parsing model.dbt_test.with_fl_acr_service_element
2019-10-01 14:04:05,191 (MainThread): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 14:04:05,191 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 14:04:05,301 (MainThread): Found 21 models, 0 tests, 0 snapshots, 0 analyses, 117 macros, 0 operations, 0 seed files, 0 sources
2019-10-01 14:04:05,305 (MainThread): 
2019-10-01 14:04:05,306 (MainThread): Acquiring new snowflake connection "master".
2019-10-01 14:04:05,307 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 14:04:05,334 (MainThread): Parsing macros\core.sql
2019-10-01 14:04:05,342 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 14:04:05,422 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 14:04:05,447 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 14:04:05,451 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 14:04:05,459 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 14:04:05,468 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 14:04:05,473 (MainThread): Parsing macros\etc\query.sql
2019-10-01 14:04:05,477 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 14:04:05,491 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 14:04:05,502 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 14:04:05,511 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 14:04:05,530 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 14:04:05,568 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 14:04:05,572 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 14:04:05,599 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 14:04:05,615 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 14:04:05,629 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 14:04:05,646 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 14:04:05,651 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 14:04:05,655 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 14:04:05,659 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 14:04:05,666 (MainThread): Parsing macros\adapters.sql
2019-10-01 14:04:05,696 (MainThread): Parsing macros\catalog.sql
2019-10-01 14:04:05,702 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 14:04:05,710 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 14:04:05,713 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 14:04:05,717 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 14:04:05,872 (MainThread): Using snowflake connection "master".
2019-10-01 14:04:05,873 (MainThread): On master: select distinct schema_name
    from OPA_DEV.information_schema.schemata
    where catalog_name ilike 'OPA_DEV'
2019-10-01 14:04:06,472 (MainThread): SQL status: SUCCESS 29 in 0.60 seconds
2019-10-01 14:04:06,524 (MainThread): Using snowflake connection "master".
2019-10-01 14:04:06,525 (MainThread): On master: BEGIN
2019-10-01 14:04:06,642 (MainThread): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:04:06,643 (MainThread): Using snowflake connection "master".
2019-10-01 14:04:06,643 (MainThread): On master: select
      table_catalog as database,
      table_name as name,
      table_schema as schema,
      case when table_type = 'BASE TABLE' then 'table'
           when table_type = 'VIEW' then 'view'
           when table_type = 'MATERIALIZED VIEW' then 'materializedview'
           when table_type = 'EXTERNAL TABLE' then 'externaltable'
           else table_type
      end as table_type
    from OPA_DEV.information_schema.tables
    where table_schema ilike 'dbt_test'
      and table_catalog ilike 'opa_dev'
2019-10-01 14:04:07,873 (MainThread): SQL status: SUCCESS 21 in 1.23 seconds
2019-10-01 14:04:07,883 (MainThread): On master: ROLLBACK
2019-10-01 14:04:08,055 (MainThread): Using snowflake connection "master".
2019-10-01 14:04:08,055 (MainThread): On master: BEGIN
2019-10-01 14:04:08,193 (MainThread): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:04:08,193 (MainThread): On master: COMMIT
2019-10-01 14:04:08,193 (MainThread): Using snowflake connection "master".
2019-10-01 14:04:08,193 (MainThread): On master: COMMIT
2019-10-01 14:04:08,339 (MainThread): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 14:04:08,339 (MainThread): 14:04:08 | Concurrency: 1 threads (target='dev')
2019-10-01 14:04:08,340 (MainThread): 14:04:08 | 
2019-10-01 14:04:08,345 (Thread-1): 14:04:08 | 1 of 21 START view model DBT_TEST.with_ar_agent...................... [RUN]
2019-10-01 14:04:08,346 (Thread-1): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 14:04:08,346 (Thread-1): Opening a new connection, currently in state init
2019-10-01 14:04:08,784 (Thread-1): Compiling model.dbt_test.with_ar_agent
2019-10-01 14:04:08,791 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 14:04:08,843 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 14:04:08,851 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:04:08,851 (Thread-1): On with_ar_agent: BEGIN
2019-10-01 14:04:09,048 (Thread-1): SQL status: SUCCESS 1 in 0.20 seconds
2019-10-01 14:04:09,049 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:04:09,049 (Thread-1): On with_ar_agent: create or replace view OPA_DEV.DBT_TEST.with_ar_agent as (
    

SELECT DISTINCT
  ag_1.agt_id
  ,ag_1.def_mkt_id
  ,ag_1.agt_tp_id
FROM opa_stg_uk.ar_agent ag_1
WHERE ag_1.file_dt = (SELECT MAX(ag_2.file_dt) FROM opa_stg_uk.ar_agent ag_2 WHERE ag_1.agt_id = ag_2.agt_id)
  );
2019-10-01 14:04:09,350 (Thread-1): SQL status: SUCCESS 1 in 0.30 seconds
2019-10-01 14:04:09,351 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 14:04:09,351 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:04:09,351 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 14:04:09,465 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:04:09,469 (Thread-1): 14:04:09 | 1 of 21 OK created view model DBT_TEST.with_ar_agent................. [SUCCESS 1 in 1.12s]
2019-10-01 14:04:09,470 (Thread-1): 14:04:09 | 2 of 21 START view model DBT_TEST.with_ar_market..................... [RUN]
2019-10-01 14:04:09,473 (Thread-1): Acquiring new snowflake connection "with_ar_market".
2019-10-01 14:04:09,473 (Thread-1): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 14:04:09,474 (Thread-1): Compiling model.dbt_test.with_ar_market
2019-10-01 14:04:09,481 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_market"
2019-10-01 14:04:09,495 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_market"
2019-10-01 14:04:09,500 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:04:09,500 (Thread-1): On with_ar_market: BEGIN
2019-10-01 14:04:09,790 (Thread-1): SQL status: SUCCESS 1 in 0.29 seconds
2019-10-01 14:04:09,791 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:04:09,791 (Thread-1): On with_ar_market: create or replace view OPA_DEV.DBT_TEST.with_ar_market as (
    

SELECT DISTINCT
  mk_1.mkt_id
  ,mk_1.off_id
FROM opa_stg_uk.ar_market mk_1
WHERE mk_1.file_dt = (SELECT MAX(mk_2.file_dt) FROM opa_stg_uk.ar_market mk_2 WHERE mk_1.mkt_id = mk_2.mkt_id)
  );
2019-10-01 14:04:10,065 (Thread-1): SQL status: SUCCESS 1 in 0.27 seconds
2019-10-01 14:04:10,067 (Thread-1): On with_ar_market: COMMIT
2019-10-01 14:04:10,067 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:04:10,067 (Thread-1): On with_ar_market: COMMIT
2019-10-01 14:04:10,205 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:04:10,209 (Thread-1): 14:04:10 | 2 of 21 OK created view model DBT_TEST.with_ar_market................ [SUCCESS 1 in 0.74s]
2019-10-01 14:04:10,211 (Thread-1): 14:04:10 | 3 of 21 START view model DBT_TEST.with_ar_officename................. [RUN]
2019-10-01 14:04:10,214 (Thread-1): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 14:04:10,214 (Thread-1): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 14:04:10,214 (Thread-1): Compiling model.dbt_test.with_ar_officename
2019-10-01 14:04:10,219 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 14:04:10,227 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 14:04:10,232 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:04:10,232 (Thread-1): On with_ar_officename: BEGIN
2019-10-01 14:04:10,352 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:04:10,353 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:04:10,353 (Thread-1): On with_ar_officename: create or replace view OPA_DEV.DBT_TEST.with_ar_officename as (
    

SELECT DISTINCT
  ofn_1.off_name_id
  ,ofn_1.cd
  ,ofn_1.name
  -- ,sm.source_market_code
FROM opa_stg_uk.ar_officename ofn_1
-- LEFT OUTER JOIN opa_stg_all.source_market sm ON 'UKATCOM|' || ofn_1.cd = bk_source_market
WHERE ofn_1.file_dt = (SELECT MAX(ofn_2.file_dt) FROM opa_stg_uk.ar_officename ofn_2 WHERE ofn_1.off_name_id = ofn_2.off_name_id)
  );
2019-10-01 14:04:10,639 (Thread-1): SQL status: SUCCESS 1 in 0.29 seconds
2019-10-01 14:04:10,640 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 14:04:10,641 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:04:10,641 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 14:04:10,735 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:04:10,738 (Thread-1): 14:04:10 | 3 of 21 OK created view model DBT_TEST.with_ar_officename............ [SUCCESS 1 in 0.52s]
2019-10-01 14:04:10,739 (Thread-1): 14:04:10 | 4 of 21 START view model DBT_TEST.with_ar_point...................... [RUN]
2019-10-01 14:04:10,741 (Thread-1): Acquiring new snowflake connection "with_ar_point".
2019-10-01 14:04:10,741 (Thread-1): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 14:04:10,742 (Thread-1): Compiling model.dbt_test.with_ar_point
2019-10-01 14:04:10,747 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_point"
2019-10-01 14:04:10,761 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_point"
2019-10-01 14:04:10,767 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:04:10,767 (Thread-1): On with_ar_point: BEGIN
2019-10-01 14:04:10,884 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:04:10,885 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:04:10,885 (Thread-1): On with_ar_point: create or replace view OPA_DEV.DBT_TEST.with_ar_point as (
    

SELECT
  p.pt_id
  ,p.pt_cd
FROM opa_stg_uk.ar_point p
WHERE p.file_dt = (SELECT MAX(p_2.file_dt) FROM opa_stg_uk.ar_point p_2 WHERE p.pt_id = p_2.pt_id)
  );
2019-10-01 14:04:11,115 (Thread-1): SQL status: SUCCESS 1 in 0.23 seconds
2019-10-01 14:04:11,116 (Thread-1): On with_ar_point: COMMIT
2019-10-01 14:04:11,116 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:04:11,116 (Thread-1): On with_ar_point: COMMIT
2019-10-01 14:04:11,237 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:04:11,244 (Thread-1): 14:04:11 | 4 of 21 OK created view model DBT_TEST.with_ar_point................. [SUCCESS 1 in 0.50s]
2019-10-01 14:04:11,245 (Thread-1): 14:04:11 | 5 of 21 START view model DBT_TEST.with_ar_sellstatic................. [RUN]
2019-10-01 14:04:11,246 (Thread-1): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 14:04:11,247 (Thread-1): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 14:04:11,247 (Thread-1): Compiling model.dbt_test.with_ar_sellstatic
2019-10-01 14:04:11,252 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 14:04:11,267 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 14:04:11,273 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:04:11,273 (Thread-1): On with_ar_sellstatic: BEGIN
2019-10-01 14:04:11,386 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:04:11,386 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:04:11,386 (Thread-1): On with_ar_sellstatic: create or replace view OPA_DEV.DBT_TEST.with_ar_sellstatic as (
    

SELECT
  sls_1.sell_stc_id
  ,sls_1.stc_stk_id
FROM opa_stg_uk.ar_sellstatic sls_1
WHERE sls_1.file_dt = (SELECT MAX(sls_2.file_dt) FROM opa_stg_uk.ar_sellstatic sls_2 WHERE sls_1.sell_stc_id = sls_2.sell_stc_id)
  );
2019-10-01 14:04:11,618 (Thread-1): SQL status: SUCCESS 1 in 0.23 seconds
2019-10-01 14:04:11,620 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 14:04:11,621 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:04:11,621 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 14:04:11,781 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:04:11,785 (Thread-1): 14:04:11 | 5 of 21 OK created view model DBT_TEST.with_ar_sellstatic............ [SUCCESS 1 in 0.54s]
2019-10-01 14:04:11,786 (Thread-1): 14:04:11 | 6 of 21 START view model DBT_TEST.with_ar_sellunit................... [RUN]
2019-10-01 14:04:11,789 (Thread-1): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 14:04:11,789 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 14:04:11,790 (Thread-1): Compiling model.dbt_test.with_ar_sellunit
2019-10-01 14:04:11,801 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 14:04:11,815 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 14:04:11,820 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:04:11,820 (Thread-1): On with_ar_sellunit: BEGIN
2019-10-01 14:04:11,939 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:04:11,940 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:04:11,940 (Thread-1): On with_ar_sellunit: create or replace view OPA_DEV.DBT_TEST.with_ar_sellunit as (
    

SELECT
  su.sell_unit_id
  ,su.rm_id
  ,su.bb_cd_id
FROM opa_stg_uk.ar_sellunit su
WHERE su.file_dt = (SELECT MAX(su_2.file_dt) FROM opa_stg_uk.ar_sellunit su_2 WHERE su.sell_unit_id = su_2.sell_unit_id)
  );
2019-10-01 14:04:12,224 (Thread-1): SQL status: SUCCESS 1 in 0.28 seconds
2019-10-01 14:04:12,225 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 14:04:12,225 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:04:12,225 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 14:04:12,320 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:04:12,324 (Thread-1): 14:04:12 | 6 of 21 OK created view model DBT_TEST.with_ar_sellunit.............. [SUCCESS 1 in 0.53s]
2019-10-01 14:04:12,325 (Thread-1): 14:04:12 | 7 of 21 START view model DBT_TEST.with_ar_staticroom................. [RUN]
2019-10-01 14:04:12,328 (Thread-1): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 14:04:12,329 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 14:04:12,330 (Thread-1): Compiling model.dbt_test.with_ar_staticroom
2019-10-01 14:04:12,338 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 14:04:12,353 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 14:04:12,359 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:04:12,359 (Thread-1): On with_ar_staticroom: BEGIN
2019-10-01 14:04:12,492 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:04:12,493 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:04:12,493 (Thread-1): On with_ar_staticroom: create or replace view OPA_DEV.DBT_TEST.with_ar_staticroom as (
    

SELECT
  sr.stc_rm_id
  ,sr.stc_stk_id
  ,sr.rm_id
FROM opa_stg_uk.ar_staticroom sr
WHERE sr.file_dt = (SELECT MAX(sr_2.file_dt) FROM opa_stg_uk.ar_staticroom sr_2 WHERE sr.stc_rm_id = sr_2.stc_rm_id)
  );
2019-10-01 14:04:12,759 (Thread-1): SQL status: SUCCESS 1 in 0.27 seconds
2019-10-01 14:04:12,761 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 14:04:12,761 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:04:12,762 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 14:04:12,868 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:04:12,878 (Thread-1): 14:04:12 | 7 of 21 OK created view model DBT_TEST.with_ar_staticroom............ [SUCCESS 1 in 0.55s]
2019-10-01 14:04:12,879 (Thread-1): 14:04:12 | 8 of 21 START view model DBT_TEST.with_ar_staticstock................ [RUN]
2019-10-01 14:04:12,882 (Thread-1): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 14:04:12,882 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 14:04:12,883 (Thread-1): Compiling model.dbt_test.with_ar_staticstock
2019-10-01 14:04:12,894 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 14:04:12,908 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 14:04:12,915 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:04:12,915 (Thread-1): On with_ar_staticstock: BEGIN
2019-10-01 14:04:13,055 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:04:13,056 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:04:13,056 (Thread-1): On with_ar_staticstock: create or replace view OPA_DEV.DBT_TEST.with_ar_staticstock as (
    

SELECT
  ss.stc_stk_id
  ,ss.cd
FROM opa_stg_uk.ar_staticstock ss
WHERE ss.file_dt = (SELECT MAX(ss_2.file_dt) FROM opa_stg_uk.ar_staticstock ss_2 WHERE ss.stc_stk_id = ss_2.stc_stk_id)
  );
2019-10-01 14:04:13,397 (Thread-1): SQL status: SUCCESS 1 in 0.34 seconds
2019-10-01 14:04:13,398 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 14:04:13,398 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:04:13,398 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 14:04:13,507 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:04:13,515 (Thread-1): 14:04:13 | 8 of 21 OK created view model DBT_TEST.with_ar_staticstock........... [SUCCESS 1 in 0.63s]
2019-10-01 14:04:13,517 (Thread-1): 14:04:13 | 9 of 21 START view model DBT_TEST.with_ar_transinvroute.............. [RUN]
2019-10-01 14:04:13,518 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 14:04:13,518 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 14:04:13,519 (Thread-1): Compiling model.dbt_test.with_ar_transinvroute
2019-10-01 14:04:13,524 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 14:04:13,539 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 14:04:13,545 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:04:13,546 (Thread-1): On with_ar_transinvroute: BEGIN
2019-10-01 14:04:13,670 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:04:13,671 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:04:13,671 (Thread-1): On with_ar_transinvroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroute as (
    

SELECT
  tir.trans_inv_route_id
  ,tir.trans_route_id
FROM opa_stg_uk.ar_transinvroute tir
WHERE tir.file_dt = (SELECT MAX(tir_2.file_dt) FROM opa_stg_uk.ar_transinvroute tir_2 WHERE tir.trans_inv_route_id = tir_2.trans_inv_route_id)
  );
2019-10-01 14:04:14,010 (Thread-1): SQL status: SUCCESS 1 in 0.34 seconds
2019-10-01 14:04:14,011 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 14:04:14,011 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:04:14,011 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 14:04:14,146 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:04:14,149 (Thread-1): 14:04:14 | 9 of 21 OK created view model DBT_TEST.with_ar_transinvroute......... [SUCCESS 1 in 0.63s]
2019-10-01 14:04:14,151 (Thread-1): 14:04:14 | 10 of 21 START view model DBT_TEST.with_ar_transinvroutesector....... [RUN]
2019-10-01 14:04:14,154 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:04:14,154 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 14:04:14,155 (Thread-1): Compiling model.dbt_test.with_ar_transinvroutesector
2019-10-01 14:04:14,160 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 14:04:14,169 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 14:04:14,174 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:04:14,174 (Thread-1): On with_ar_transinvroutesector: BEGIN
2019-10-01 14:04:14,293 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:04:14,294 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:04:14,294 (Thread-1): On with_ar_transinvroutesector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroutesector as (
    

SELECT
  tirs.trans_inv_route_id
  ,tirs.trans_inv_sec_id
  ,tirs.trans_inv_route_sec_id
FROM opa_stg_uk.ar_transinvroutesector tirs
WHERE tirs.file_dt = (SELECT MAX(tirs_2.file_dt) FROM opa_stg_uk.ar_transinvroutesector tirs_2 WHERE tirs.trans_inv_route_sec_id = tirs_2.trans_inv_route_sec_id)
  );
2019-10-01 14:04:15,052 (Thread-1): SQL status: SUCCESS 1 in 0.76 seconds
2019-10-01 14:04:15,054 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 14:04:15,054 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:04:15,054 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 14:04:15,155 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:04:15,164 (Thread-1): 14:04:15 | 10 of 21 OK created view model DBT_TEST.with_ar_transinvroutesector.. [SUCCESS 1 in 1.01s]
2019-10-01 14:04:15,164 (Thread-1): 14:04:15 | 11 of 21 START view model DBT_TEST.with_ar_transinvsector............ [RUN]
2019-10-01 14:04:15,168 (Thread-1): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 14:04:15,168 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 14:04:15,169 (Thread-1): Compiling model.dbt_test.with_ar_transinvsector
2019-10-01 14:04:15,179 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 14:04:15,194 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 14:04:15,200 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:04:15,201 (Thread-1): On with_ar_transinvsector: BEGIN
2019-10-01 14:04:15,328 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:04:15,329 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:04:15,329 (Thread-1): On with_ar_transinvsector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvsector as (
    

SELECT
  tis.trans_inv_sec_id
  ,tis.dep_dt_tm
FROM opa_stg_uk.ar_transinvsector tis
WHERE tis.file_dt = (SELECT MAX(tis_2.file_dt) FROM opa_stg_uk.ar_transinvsector tis_2 WHERE tis.trans_inv_sec_id = tis_2.trans_inv_sec_id)
  );
2019-10-01 14:04:15,624 (Thread-1): SQL status: SUCCESS 1 in 0.30 seconds
2019-10-01 14:04:15,625 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 14:04:15,626 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:04:15,626 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 14:04:15,718 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:04:15,723 (Thread-1): 14:04:15 | 11 of 21 OK created view model DBT_TEST.with_ar_transinvsector....... [SUCCESS 1 in 0.55s]
2019-10-01 14:04:15,724 (Thread-1): 14:04:15 | 12 of 21 START view model DBT_TEST.with_ar_transroute................ [RUN]
2019-10-01 14:04:15,726 (Thread-1): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 14:04:15,726 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 14:04:15,726 (Thread-1): Compiling model.dbt_test.with_ar_transroute
2019-10-01 14:04:15,732 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 14:04:15,746 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 14:04:15,754 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:04:15,754 (Thread-1): On with_ar_transroute: BEGIN
2019-10-01 14:04:15,866 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:04:15,867 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:04:15,867 (Thread-1): On with_ar_transroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transroute as (
    

SELECT
	tr.trans_route_id
	,tr.route_cd
FROM opa_stg_uk.ar_transroute tr
WHERE tr.file_dt = (SELECT MAX(tr_2.file_dt) FROM opa_stg_uk.ar_transroute tr_2 WHERE tr.trans_route_id = tr_2.trans_route_id)
  );
2019-10-01 14:04:16,103 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:04:16,105 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 14:04:16,105 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:04:16,106 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 14:04:16,212 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:04:16,221 (Thread-1): 14:04:16 | 12 of 21 OK created view model DBT_TEST.with_ar_transroute........... [SUCCESS 1 in 0.49s]
2019-10-01 14:04:16,222 (Thread-1): 14:04:16 | 13 of 21 START view model DBT_TEST.with_ar_usercodes................. [RUN]
2019-10-01 14:04:16,225 (Thread-1): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 14:04:16,225 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 14:04:16,226 (Thread-1): Compiling model.dbt_test.with_ar_usercodes
2019-10-01 14:04:16,237 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 14:04:16,251 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 14:04:16,255 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:04:16,255 (Thread-1): On with_ar_usercodes: BEGIN
2019-10-01 14:04:16,376 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:04:16,376 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:04:16,377 (Thread-1): On with_ar_usercodes: create or replace view OPA_DEV.DBT_TEST.with_ar_usercodes as (
    

SELECT DISTINCT
  uc_1.user_cd_id
  ,uc_1.cd
  ,uc_1.name
FROM opa_stg_uk.ar_usercodes uc_1
WHERE uc_1.file_dt = (SELECT MAX(uc_2.file_dt) FROM opa_stg_uk.ar_usercodes uc_2 WHERE uc_1.user_cd_id = uc_2.user_cd_id)
  );
2019-10-01 14:04:16,658 (Thread-1): SQL status: SUCCESS 1 in 0.28 seconds
2019-10-01 14:04:16,660 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 14:04:16,660 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:04:16,660 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 14:04:16,792 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:04:16,800 (Thread-1): 14:04:16 | 13 of 21 OK created view model DBT_TEST.with_ar_usercodes............ [SUCCESS 1 in 0.57s]
2019-10-01 14:04:16,801 (Thread-1): 14:04:16 | 14 of 21 START view model DBT_TEST.with_booking_fact_margin.......... [RUN]
2019-10-01 14:04:16,805 (Thread-1): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 14:04:16,805 (Thread-1): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 14:04:16,806 (Thread-1): Compiling model.dbt_test.with_booking_fact_margin
2019-10-01 14:04:16,818 (Thread-1): Writing injected SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 14:04:16,832 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 14:04:16,841 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:04:16,841 (Thread-1): On with_booking_fact_margin: BEGIN
2019-10-01 14:04:16,972 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:04:16,972 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:04:16,972 (Thread-1): On with_booking_fact_margin: create or replace view OPA_DEV.DBT_TEST.with_booking_fact_margin as (
    

SELECT
  bff_1.bk_booking
  ,bff_1.ffd_flag
  ,bff_1.sm_currency
  ,bff_1.sm_revenue
  ,bff_1.sm_cnx_and_amend_revenue
  ,bff_1.sm_accommodation_costs
  ,bff_1.sm_early_booking_discounts
  ,bff_1.sm_late_booking_discounts
  ,bff_1.sm_flying_costs
  ,bff_1.sm_other_costs
  ,bff_1.sm_distribution_costs
  ,bff_1.sm_non_margin_items
  ,bff_1.sm_margin
  ,bff_1.smg_currency
  ,bff_1.smg_revenue
  ,bff_1.smg_cnx_and_amend_revenue
  ,bff_1.smg_accommodation_costs
  ,bff_1.smg_early_booking_discounts
  ,bff_1.smg_late_booking_discounts
  ,bff_1.smg_flying_costs
  ,bff_1.smg_other_costs
  ,bff_1.smg_distribution_costs
  ,bff_1.smg_non_margin_items
  ,bff_1.smg_margin
  ,bff_1.rep_currency
  ,bff_1.rep_revenue
  ,bff_1.rep_cnx_and_amend_revenue
  ,bff_1.rep_accommodation_costs
  ,bff_1.rep_early_booking_discounts
  ,bff_1.rep_late_booking_discounts
  ,bff_1.rep_flying_costs
  ,bff_1.rep_other_costs
  ,bff_1.rep_distribution_costs
  ,bff_1.rep_non_margin_items
  ,bff_1.rep_margin
FROM opa_fl_uk.v_booking_fact_margin_uk bff_1
  );
2019-10-01 14:04:17,493 (Thread-1): SQL status: SUCCESS 1 in 0.52 seconds
2019-10-01 14:04:17,494 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 14:04:17,494 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:04:17,495 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 14:04:17,596 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:04:17,605 (Thread-1): 14:04:17 | 14 of 21 OK created view model DBT_TEST.with_booking_fact_margin..... [SUCCESS 1 in 0.80s]
2019-10-01 14:04:17,606 (Thread-1): 14:04:17 | 15 of 21 START view model DBT_TEST.with_dates........................ [RUN]
2019-10-01 14:04:17,608 (Thread-1): Acquiring new snowflake connection "with_dates".
2019-10-01 14:04:17,608 (Thread-1): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 14:04:17,608 (Thread-1): Compiling model.dbt_test.with_dates
2019-10-01 14:04:17,615 (Thread-1): Writing injected SQL for node "model.dbt_test.with_dates"
2019-10-01 14:04:17,625 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_dates"
2019-10-01 14:04:17,629 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:04:17,629 (Thread-1): On with_dates: BEGIN
2019-10-01 14:04:17,740 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:04:17,741 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:04:17,741 (Thread-1): On with_dates: create or replace view OPA_DEV.DBT_TEST.with_dates as (
    


SELECT
	dd.bk_date
	,dd.group_season_code
FROM opa_stg_all.date_dim dd
  );
2019-10-01 14:04:17,991 (Thread-1): SQL status: SUCCESS 1 in 0.25 seconds
2019-10-01 14:04:17,992 (Thread-1): On with_dates: COMMIT
2019-10-01 14:04:17,992 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:04:17,992 (Thread-1): On with_dates: COMMIT
2019-10-01 14:04:18,110 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:04:18,115 (Thread-1): 14:04:18 | 15 of 21 OK created view model DBT_TEST.with_dates................... [SUCCESS 1 in 0.51s]
2019-10-01 14:04:18,116 (Thread-1): 14:04:18 | 16 of 21 START view model DBT_TEST.with_fl_acr_booking............... [RUN]
2019-10-01 14:04:18,118 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 14:04:18,118 (Thread-1): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 14:04:18,118 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking
2019-10-01 14:04:18,124 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 14:04:18,138 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 14:04:18,147 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:04:18,147 (Thread-1): On with_fl_acr_booking: BEGIN
2019-10-01 14:04:18,266 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:04:18,266 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:04:18,267 (Thread-1): On with_fl_acr_booking: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking as (
    

SELECT
  bk_1.sk_booking_id
  ,bk_1.booking_version
  ,bk_1.atcom_res_id
  ,bk_1.atcom_res_version
  ,bk_1.atcom_market_id -- CG ADDED in V1.06 for new Source Market Derivation
  ,bk_1.number_of_adults
  ,bk_1.number_of_children
  ,bk_1.number_of_infants
  ,bk_1.number_of_passengers
  ,bk_1.sk_season_id
  ,bk_1.booking_status
  ,bk_1.atcom_agent_id
  ,bk_1.atcom_sell_currency_id
  ,bk_1.season_date
  ,bk_1.confirmed_on
  ,bk_1.cancelled_on
  ,bk_1.source_created_on
  ,bk_1.modified_on
  ,bk_1.dwh_created_on
  ,bk_1.dwh_modified_on

FROM opa_stg_uk.fl_acr_booking bk_1
WHERE bk_1.file_dt = (SELECT MAX(bk_2.file_dt) FROM opa_stg_uk.fl_acr_booking bk_2 WHERE bk_1.sk_booking_id = bk_2.sk_booking_id AND bk_1.booking_version = bk_2.booking_version)
AND bk_1.booking_version = (SELECT MAX(bk_3.booking_version) FROM opa_stg_uk.fl_acr_booking bk_3 WHERE bk_1.sk_booking_id = bk_3.sk_booking_id)
AND (bk_1.sk_season_id > 201701 OR bk_1.sk_booking_id IS NULL)

-- To be removed when running against all bookings
AND bk_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 14:04:18,505 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:04:18,506 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 14:04:18,506 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:04:18,506 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 14:04:18,602 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:04:18,607 (Thread-1): 14:04:18 | 16 of 21 OK created view model DBT_TEST.with_fl_acr_booking.......... [SUCCESS 1 in 0.49s]
2019-10-01 14:04:18,608 (Thread-1): 14:04:18 | 17 of 21 START view model DBT_TEST.with_fl_acr_booking_service....... [RUN]
2019-10-01 14:04:18,610 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:04:18,610 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 14:04:18,611 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking_service
2019-10-01 14:04:18,619 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 14:04:18,635 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 14:04:18,641 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:04:18,641 (Thread-1): On with_fl_acr_booking_service: BEGIN
2019-10-01 14:04:18,779 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:04:18,779 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:04:18,779 (Thread-1): On with_fl_acr_booking_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking_service as (
    

SELECT
  bk_ser_1.sk_booking_service_id
  ,bk_ser_1.sk_booking_id
  ,bk_ser_1.sk_service_id
  ,bk_ser_1.service_version
  ,bk_ser_1.booking_version
FROM opa_stg_uk.fl_acr_booking_service bk_ser_1
WHERE bk_ser_1.file_dt = (SELECT MAX(bk_ser_2.file_dt) FROM opa_stg_uk.fl_acr_booking_service bk_ser_2 WHERE bk_ser_1.sk_booking_service_id = bk_ser_2.sk_booking_service_id)
AND bk_ser_1.booking_version = (SELECT MAX(bk_ser_3.booking_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_3 WHERE bk_ser_1.sk_booking_id = bk_ser_3.sk_booking_id)
AND bk_ser_1.service_version = (SELECT MAX(bk_ser_4.service_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_4 WHERE bk_ser_1.sk_service_id = bk_ser_4.sk_service_id)

-- To be removed when running against all bookings
AND bk_ser_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 14:04:19,080 (Thread-1): SQL status: SUCCESS 1 in 0.30 seconds
2019-10-01 14:04:19,082 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 14:04:19,082 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:04:19,082 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 14:04:19,188 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:04:19,193 (Thread-1): 14:04:19 | 17 of 21 OK created view model DBT_TEST.with_fl_acr_booking_service.. [SUCCESS 1 in 0.58s]
2019-10-01 14:04:19,194 (Thread-1): 14:04:19 | 18 of 21 START view model DBT_TEST.with_fl_acr_service............... [RUN]
2019-10-01 14:04:19,194 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 14:04:19,194 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 14:04:19,195 (Thread-1): Compiling model.dbt_test.with_fl_acr_service
2019-10-01 14:04:19,203 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 14:04:19,222 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 14:04:19,228 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:04:19,229 (Thread-1): On with_fl_acr_service: BEGIN
2019-10-01 14:04:19,363 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:04:19,364 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:04:19,364 (Thread-1): On with_fl_acr_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service as (
    

SELECT
  ser_1.sk_service_id
  ,ser_1.atcom_ser_id
  ,ser_1.atcom_dep_point_id
  ,ser_1.service_version
  ,ser_1.service_status
  ,ser_1.direction
  ,ser_1.sell_type
  ,ser_1.service_type
  ,ser_1.flight_type_code
  ,ser_1.service_start_date1
  ,ser_1.service_end_date1
  ,ser_1.departure_flight_number
  ,ser_1.atcom_arr_point_id
  ,ser_1.source_stock_type_code
FROM opa_stg_uk.fl_acr_service ser_1
WHERE ser_1.file_dt = (SELECT MAX(ser_2.file_dt) FROM opa_stg_uk.fl_acr_service ser_2 WHERE ser_1.sk_service_id = ser_2.sk_service_id AND ser_1.service_version = ser_2.service_version)
  );
2019-10-01 14:04:19,657 (Thread-1): SQL status: SUCCESS 1 in 0.29 seconds
2019-10-01 14:04:19,659 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 14:04:19,659 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:04:19,660 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 14:04:19,789 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:04:19,793 (Thread-1): 14:04:19 | 18 of 21 OK created view model DBT_TEST.with_fl_acr_service.......... [SUCCESS 1 in 0.60s]
2019-10-01 14:04:19,794 (Thread-1): 14:04:19 | 19 of 21 START view model DBT_TEST.with_fl_acr_service_element....... [RUN]
2019-10-01 14:04:19,795 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 14:04:19,795 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 14:04:19,796 (Thread-1): Compiling model.dbt_test.with_fl_acr_service_element
2019-10-01 14:04:19,807 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 14:04:19,816 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 14:04:19,821 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:04:19,821 (Thread-1): On with_fl_acr_service_element: BEGIN
2019-10-01 14:04:19,937 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:04:19,938 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:04:19,938 (Thread-1): On with_fl_acr_service_element: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service_element as (
    

SELECT
  ser_e_1.sk_service_id
  ,ser_e_1.service_version
  ,ser_e_1.atcom_sub_ser_id
FROM opa_stg_uk.fl_acr_service_element ser_e_1
WHERE ser_e_1.file_dt = (SELECT MAX(ser_e_2.file_dt) FROM opa_stg_uk.fl_acr_service_element ser_e_2 WHERE ser_e_1.sk_service_element_id = ser_e_2.sk_service_element_id)
  );
2019-10-01 14:04:20,230 (Thread-1): SQL status: SUCCESS 1 in 0.29 seconds
2019-10-01 14:04:20,231 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 14:04:20,231 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:04:20,232 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 14:04:20,338 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:04:20,342 (Thread-1): 14:04:20 | 19 of 21 OK created view model DBT_TEST.with_fl_acr_service_element.. [SUCCESS 1 in 0.54s]
2019-10-01 14:04:20,343 (Thread-1): 14:04:20 | 20 of 21 START view model DBT_TEST.with_ar_currency.................. [RUN]
2019-10-01 14:04:20,343 (Thread-1): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 14:04:20,343 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 14:04:20,343 (Thread-1): Compiling model.dbt_test.with_ar_currency
2019-10-01 14:04:20,348 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 14:04:20,364 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 14:04:20,368 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:04:20,368 (Thread-1): On with_ar_currency: BEGIN
2019-10-01 14:04:20,490 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:04:20,491 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:04:20,491 (Thread-1): On with_ar_currency: create or replace view OPA_DEV.DBT_TEST.with_ar_currency as (
    

SELECT DISTINCT
  cur_1.cur_id
  ,cur_1.cd
  ,cur_1.name
FROM opa_stg_uk.ar_currency cur_1
WHERE cur_1.file_dt = (SELECT MAX(cur_2.file_dt) FROM opa_stg_uk.ar_currency cur_2 WHERE cur_1.cur_id = cur_2.cur_id)
  );
2019-10-01 14:04:20,908 (Thread-1): SQL status: SUCCESS 1 in 0.42 seconds
2019-10-01 14:04:20,909 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 14:04:20,909 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:04:20,909 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 14:04:21,005 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:04:21,015 (Thread-1): 14:04:21 | 20 of 21 OK created view model DBT_TEST.with_ar_currency............. [SUCCESS 1 in 0.67s]
2019-10-01 14:04:21,017 (Thread-1): 14:04:21 | 21 of 21 START view model DBT_TEST.v_booking_fact_uk................. [RUN]
2019-10-01 14:04:21,022 (Thread-1): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 14:04:21,023 (Thread-1): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 14:04:21,024 (Thread-1): Compiling model.dbt_test.v_booking_fact_uk
2019-10-01 14:04:21,099 (Thread-1): Writing injected SQL for node "model.dbt_test.v_booking_fact_uk"
2019-10-01 14:04:21,143 (Thread-1): Writing runtime SQL for node "model.dbt_test.v_booking_fact_uk"
2019-10-01 14:04:21,306 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:04:21,306 (Thread-1): On v_booking_fact_uk: BEGIN
2019-10-01 14:04:21,416 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:04:21,417 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:04:21,417 (Thread-1): On v_booking_fact_uk: create or replace view OPA_DEV.DBT_TEST.v_booking_fact_uk as (
    

WITH booking_service AS (
	SELECT
		bk_ser.sk_booking_id
		,bk_ser.booking_version
		,bk_ser.sk_service_id
		,bk_ser.service_version
		,bk_ser.sk_booking_service_id
		,ser.service_type
		,ser.source_stock_type_code
		,ser.sell_type
		,ser.service_status
		,ser.flight_type_code
		,ser.service_start_date1
		,ser.service_end_date1
		,tis.dep_dt_tm
		,ser.departure_flight_number
		,ser.direction
		,tr.route_cd
		,dpt.pt_cd
		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN apt.pt_cd
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				AND ser.service_status = 'CON'
				THEN apt.pt_cd
				ELSE NULL
			END
		END AS min_flight_gateway

		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
					AND ser.service_status = 'CON'
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		END	AS min_flight_id

		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MAX(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MAX(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
					AND ser.service_status = 'CON'
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		END AS max_flight_id


		-- MULTICENTRE
		,CASE WHEN
			-- All multicentre services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END	AS min_multi_center_date

		,CASE WHEN
			-- All multicentre services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS max_multi_center_date


		-- ACCOM
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU'))
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_accom_date
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU'))
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS max_accom_date


		-- CRUISE
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_cruise_date
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END max_cruise_date


		-- FLIGHT
		,CASE WHEN
			-- All flight services cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_flight_date
		,CASE WHEN
			-- All flight services cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END	AS max_flight_date

		,sts.cd AS accom
		,su.bb_cd_id AS board_cd
		,uc_3.name AS board_name
		,str.stc_rm_id AS room

		-- Booking type derivation part 1
		,CASE WHEN
				-- No outbound flight services on the booking are third party
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
		THEN 0
		ELSE
			CASE WHEN
				-- All outbound flight services are 3PF
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
					+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				=
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

			OR
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
			THEN 1
			ELSE 0
			END
		END AS tpf_out_count
		,CASE WHEN
				-- No outbound flight services on the booking are third party
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
		THEN 0
		ELSE
			CASE WHEN
				-- All outbound flight services are 3PF
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
					+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				=
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

			OR
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
			THEN 1
			ELSE 0
			END
		END AS tpf_in_count
		,CASE WHEN
				CASE WHEN
						-- No outbound flight services on the booking are third party
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
				THEN 0
				ELSE
					CASE WHEN
						-- All outbound flight services are 3PF
						SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
							+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
						=
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

					OR
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
					THEN 1
					ELSE 0
					END
				END
			+
				CASE WHEN
						-- No outbound flight services on the booking are third party
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
				THEN 0
				ELSE
					CASE WHEN
						-- All outbound flight services are 3PF
						SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
							+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
						=
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

					OR
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
					THEN 1
					ELSE 0
					END
				END
		> 0
			THEN 'Y'
			ELSE 'N'
		END AS tpf_indicator
		,CASE WHEN
				-- All accom cancelled
				SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS accom_count
		,CASE WHEN
				-- All cruise cancelled
				SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS cruise_count
		,CASE WHEN
				-- All flight out cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS flight_out_count
		,CASE WHEN
				-- All flight in cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS flight_ret_count
		,CASE WHEN
				-- All ahoc services cancelled
				SUM(CASE WHEN ser.service_type = 'AHOC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'AHOC' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'AHOC' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS thirdparty_count

		,CASE WHEN
				-- All flight out first date cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN ser.service_start_date1 ELSE NULL END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN ser.service_start_date1 ELSE NULL END
		END AS flight_out_first_date
		,CASE WHEN
				-- All flight in first date cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN ser.service_start_date1 ELSE NULL END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN ser.service_start_date1 ELSE NULL END
		END AS flight_ret_first_date

	-- Service and subservice
	FROM OPA_DEV.DBT_TEST.with_fl_acr_booking_service bk_ser
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_fl_acr_service ser ON bk_ser.sk_service_id = ser.sk_service_id AND bk_ser.service_version = ser.service_version
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_fl_acr_service_element ser_e ON ser.sk_service_id = ser_e.sk_service_id AND ser.service_version = ser_e.service_version

	-- Accom
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_sellstatic sls ON ser.atcom_ser_id = sls.sell_stc_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_staticstock sts ON sls.stc_stk_id = sts.stc_stk_id

	-- Room
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_sellunit su ON ser_e.atcom_sub_ser_id = su.sell_unit_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_staticroom str ON sts.stc_stk_id = str.stc_stk_id AND su.rm_id = str.rm_id

	-- Board
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_usercodes uc_3 ON su.bb_cd_id = uc_3.user_cd_id

	-- Flight
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvroute tir ON ser.atcom_ser_id = tir.trans_inv_route_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transroute tr ON tir.trans_route_id = tr.trans_route_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvroutesector tirs ON tir.trans_inv_route_id = tirs.trans_inv_route_id
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvsector tis ON tirs.trans_inv_sec_id = tis.trans_inv_sec_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_point dpt ON ser.atcom_dep_point_id = dpt.pt_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_point apt ON ser.atcom_arr_point_id = apt.pt_id

	ORDER BY
		bk_ser.sk_booking_id
		,bk_ser.booking_version
		,ser.source_stock_type_code

)
,booking_fact_1 AS (
  SELECT DISTINCT
    CASE WHEN bk.atcom_res_id IS NULL THEN NULL ELSE 'UKATCOM|' || bk.atcom_res_id || '|' || bk.booking_version END AS bk_booking
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS bk_primary_accom
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS bk_primary_room
    ,COALESCE(
      CASE WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
        AND COUNT(DISTINCT bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) > 1
          THEN 'MULTI'
      WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
        AND COUNT(DISTINCT bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = 1
          THEN 'UKATCOM|' || MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      WHEN SUM(bs.flight_out_count) OVER (PARTITION BY bk.atcom_res_id) > 1
        THEN 'MULTI'
        ELSE 'UKATCOM|' || MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      END
    , 'U') AS bk_first_flight
    ,COALESCE(
      CASE WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
          THEN NULL
      WHEN SUM(bs.flight_ret_count) OVER (PARTITION BY bk.atcom_res_id) > 1
        THEN 'MULTI'
        ELSE 'UKATCOM|' || MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      END
    , 'U') AS bk_last_flight
    ,CASE WHEN ofn.cd IS NULL
      THEN 'UKATCOM|U'
      ELSE 'UKATCOM|' || ofn.cd
    END AS bk_source_market
    ,'UKATCOM' AS bk_originating_system
    ,CASE WHEN
        -- Third party flight
        SUM(CASE WHEN bs.tpf_indicator = 'Y' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|3PF'

      WHEN
        -- Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGAF'

      WHEN
        -- Cruise and Flight Package
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) > 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGCF'

      WHEN
        -- Cruise and Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGCAF'

      WHEN
        -- Multi Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMAF'

      WHEN
        -- Multi Cruise and Flight Package
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMCF'

      WHEN
        -- Multi Accommodation and One Cruise and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMACF'

      WHEN
        -- Multi Cruise and One Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMCAF'

      WHEN
        -- Multi Accommodation and Multi Cruise and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMAMCF'

      WHEN
        -- Single Accommodation Only
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCA'

      WHEN
        -- Multi Accommodation Only
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCMA'

      WHEN
        -- Accommodation and Flight Other
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 1
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCOTH'

      WHEN
        -- Flight Only Return Outbound First
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id) < MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTROF'

      WHEN
        -- Flight Only Return Inbound First
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id) < MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTRIF'

      WHEN
        -- Flight only same day return
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id) = MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTSDR'

      WHEN
        -- Flight Only One Way Outbound
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTOBO'

      WHEN
        -- Flight Only One Way Inbound
        SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTIBO'

      WHEN
        -- Single Cruise Only
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|CRU' -- Granular code = 'CRUSGL'

      WHEN
        -- Multi Cruise Only
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|CRU' -- Granular code = 'CRUMLT'

      WHEN
        -- Third party
        SUM(bs.thirdparty_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|TPB' -- Granular code = 'TPB'

      ELSE 'UKATCOM|OTH'
    END AS bk_booking_type
    ,CASE WHEN bk.booking_status IS NULL
      THEN 'U'
      ELSE 'UKATCOM|' || bk.booking_status
    END AS bk_booking_status
    ,bk.atcom_res_id AS source_booking_id
    --,bk.atcom_res_version AS source_booking_version
    ,bk.booking_version AS source_booking_version -- swapped to FL version not Atcom version PiT
    ,COALESCE(CAST(bk.source_created_on AS TIMESTAMP), CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_created_datetime
    ,COALESCE(bk.confirmed_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_confirmed_datetime
    ,COALESCE(bk.cancelled_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_cancelled_datetime
    ,gs.group_season_code AS group_season
    ,CASE WHEN bk.sk_season_id IS NULL OR bk.sk_season_id = -1 OR bk.sk_season_id = -2
      THEN NULL
      ELSE
        CASE WHEN SUBSTRING(bk.sk_season_id, 5, 2) = 01
          THEN 'S' || SUBSTRING(bk.sk_season_id, 3, 2)
          ELSE 'W' || SUBSTRING(bk.sk_season_id, 3, 2)
        END
    END AS sm_season
    ,CASE WHEN uc.cd IS NULL
      THEN NULL
      ELSE 'UKATCOM|' || uc.cd
    END AS channel_code
    ,CASE WHEN uc.name IS NULL
      THEN NULL
      ELSE 'UKATCOM|' || uc.name
    END AS channel_desc
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS booked_board_code
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS booked_board_name
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
      ELSE
        CASE WHEN SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
    END AS multi_room_booking
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      ELSE
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
    END AS number_of_booked_rooms
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
      ELSE
        CASE WHEN COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
    END AS multi_centre_booking
    ,COALESCE(bk.season_date,CAST('2999-12-31 23:59:59.0' AS DATE)) AS departure_date
    ,COALESCE(
      bs.max_multi_center_date,
      bs.max_accom_date,
      bs.max_cruise_date,
      bs.max_flight_date,
      CAST('2999-12-31 23:59:59.0' AS DATE)
    ) AS return_date
    ,CASE WHEN
      COALESCE(bk.season_date, CAST('2999-12-31 23:59:59.0' AS DATE)) = CAST('2999-12-31 23:59:59.0' AS DATE)
    OR
      COALESCE(
        bs.max_multi_center_date,
        bs.max_accom_date,
        bs.max_cruise_date,
        bs.max_flight_date,
        CAST('2999-12-31 23:59:59.0' AS DATE)
      ) = CAST('2999-12-31 23:59:59.0' AS DATE)
    THEN 0
    ELSE
      DATEDIFF('DAY',
        bk.season_date
      ,
        COALESCE(
          bs.max_multi_center_date,
          bs.max_accom_date,
          bs.max_cruise_date,
          bs.max_flight_date)
      )
    END	AS DURATION
    ,COALESCE(bk.number_of_adults, 0) AS std_number_of_booking_adult_pax
    ,COALESCE(bk.number_of_children, 0) AS std_number_of_booking_child_pax
    ,COALESCE(bk.number_of_infants, 0) AS std_number_of_booking_infant_pax
    ,COALESCE(bk.number_of_passengers, 0) AS std_number_of_booking_pax
    ,COALESCE(bk.number_of_adults, 0) AS sm_number_of_booking_adult_pax
    ,0 AS sm_number_of_booking_teenager_pax
    ,COALESCE(bk.number_of_children, 0) AS sm_number_of_booking_child_pax
    ,COALESCE(bk.number_of_infants, 0) AS sm_number_of_booking_infant_pax
    ,COALESCE(bk.number_of_passengers, 0) AS sm_number_of_booking_pax
    ,CASE WHEN COUNT(DISTINCT bs.min_flight_gateway) OVER (PARTITION BY bk.atcom_res_id) > 1
      THEN 'MULTI'
      ELSE MIN(bs.min_flight_gateway) OVER (PARTITION BY bk.atcom_res_id)
    END AS primary_gateway
    -- ,cur.name AS currency
    ,'Insert' AS record_type
    ,COALESCE(bk.effective_from, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS effective_from
    ,COALESCE(
      bk.lead_effective_from
      ,bk.effective_to
      ,CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)
    ) AS effective_to
    ,COALESCE(bk.dwh_created_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS sm_created_datetime
    ,COALESCE(bk.dwh_modified_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS sm_updated_datetime
    ,CAST(CONVERT_TIMEZONE('Europe/London',CURRENT_TIMESTAMP()) AS TIMESTAMP_NTZ) AS dm_created_datetime

  FROM OPA_DEV.DBT_TEST.with_fl_acr_booking bk
  LEFT OUTER JOIN booking_service bs ON bk.sk_booking_id = bs.sk_booking_id AND bk.booking_version = bs.booking_version

  -- Group Season
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_dates gs ON CAST(COALESCE(SUBSTRING(bk.season_date, 1, 4) || SUBSTRING(bk.season_date, 6, 2) || SUBSTRING(bk.season_date, 9, 2), 20991231) AS INTEGER) = gs.bk_date

  -- Market source
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_agent ag ON bk.atcom_agent_id = ag.agt_id

  -- V1.06 Version of source market joins
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_market m   ON bk.atcom_market_id = m.mkt_id
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_officename ofn ON m.off_id = ofn.off_name_id

  -- Channel
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_usercodes uc ON ag.agt_tp_id = uc.user_cd_id

  -- Currency
  -- LEFT OUTER JOIN ar_currency cur ON bk.atcom_sell_currency_id = cur.cur_id

  WHERE bk_booking IS NOT NULL
)

SELECT
  bf_1.bk_booking,
  bf_1.bk_primary_accom,
  bf_1.bk_primary_room,
  bf_1.bk_first_flight,
  bf_1.bk_last_flight,
  bf_1.bk_source_market,
  bf_1.bk_originating_system,
  bf_1.bk_booking_type,
  bf_1.bk_booking_status,
  bf_1.source_booking_id,
  bf_1.source_booking_version,
  bf_1.booking_created_datetime,
  bf_1.booking_confirmed_datetime,
  bf_1.booking_cancelled_datetime,
  bf_1.group_season,
  bf_1.sm_season,
  bf_1.channel_code,
  bf_1.channel_desc,
  bf_1.booked_board_code,
  bf_1.booked_board_name,
  bf_1.multi_room_booking,
  bf_1.number_of_booked_rooms,
  bf_1.multi_centre_booking,
  bf_1.departure_date,
  bf_1.return_date,
  bf_1.duration,
  bf_1.std_number_of_booking_adult_pax,
  bf_1.std_number_of_booking_child_pax,
  bf_1.std_number_of_booking_infant_pax,
  bf_1.std_number_of_booking_pax,
  bf_1.sm_number_of_booking_adult_pax,
  bf_1.sm_number_of_booking_teenager_pax,
  bf_1.sm_number_of_booking_child_pax,
  bf_1.sm_number_of_booking_infant_pax,
  bf_1.sm_number_of_booking_pax,
  bf_1.primary_gateway,
  COALESCE(bfm.sm_currency, fx.bk_sm_ccy, 'U') AS sm_currency,
  COALESCE(bfm.sm_revenue, 0) AS sm_revenue,
  COALESCE(bfm.sm_cnx_and_amend_revenue, 0) AS sm_cnx_and_amend_revenue,
  COALESCE(bfm.sm_accommodation_costs, 0) AS sm_accommodation_costs,
  COALESCE(bfm.sm_early_booking_discounts, 0) AS sm_early_booking_discounts,
  COALESCE(bfm.sm_late_booking_discounts, 0) AS sm_late_booking_discounts,
  COALESCE(bfm.sm_flying_costs, 0) AS sm_flying_costs,
  COALESCE(bfm.sm_other_costs, 0) AS sm_other_costs,
  COALESCE(bfm.sm_distribution_costs, 0) AS sm_distribution_costs,
  COALESCE(bfm.sm_non_margin_items, 0) AS sm_non_margin_items,
  COALESCE(bfm.sm_margin, 0) AS sm_margin,
  COALESCE(bfm.smg_currency, fx.bk_smg_ccy, 'U') AS smg_currency,
  COALESCE(bfm.smg_revenue, 0) AS smg_revenue,
  COALESCE(bfm.smg_cnx_and_amend_revenue, 0) AS smg_cnx_and_amend_revenue,
  COALESCE(bfm.smg_accommodation_costs, 0) AS smg_accommodation_costs,
  COALESCE(bfm.smg_early_booking_discounts, 0) AS smg_early_booking_discounts,
  COALESCE(bfm.smg_late_booking_discounts, 0) AS smg_late_booking_discounts,
  COALESCE(bfm.smg_flying_costs, 0) AS smg_flying_costs,
  COALESCE(bfm.smg_other_costs, 0) AS smg_other_costs,
  COALESCE(bfm.smg_distribution_costs, 0) AS smg_distribution_costs,
  COALESCE(bfm.smg_non_margin_items, 0) AS smg_non_margin_items,
  COALESCE(bfm.smg_margin, 0) AS smg_margin,
  COALESCE(bfm.rep_currency, fx.bk_rep_ccy, 'U') AS rep_currency,
  COALESCE(bfm.rep_revenue, 0) AS rep_revenue,
  COALESCE(bfm.rep_cnx_and_amend_revenue, 0) AS rep_cnx_and_amend_revenue,
  COALESCE(bfm.rep_accommodation_costs, 0) AS rep_accommodation_costs,
  COALESCE(bfm.rep_early_booking_discounts, 0) AS rep_early_booking_discounts,
  COALESCE(bfm.rep_late_booking_discounts, 0) AS rep_late_booking_discounts,
  COALESCE(bfm.rep_flying_costs, 0) AS rep_flying_costs,
  COALESCE(bfm.rep_other_costs, 0) AS rep_other_costs,
  COALESCE(bfm.rep_distribution_costs, 0) AS rep_distribution_costs,
  COALESCE(bfm.rep_non_margin_items, 0) AS rep_non_margin_items,
  COALESCE(bfm.rep_margin, 0) AS rep_margin,
  COALESCE(bfm.ffd_flag, 'N') AS ffd_flag,
  bf_1.record_type,
  bf_1.effective_from,
  bf_1.effective_to,
  bf_1.sm_created_datetime,
  bf_1.sm_updated_datetime,
  bf_1.dm_created_datetime,
  CASE WHEN bf_1.source_booking_version = MAX(bf_1.source_booking_version) OVER (PARTITION BY LEFT(bf_1.bk_booking, LENGTH(bf_1.bk_booking) - REGEXP_INSTR(bf_1.bk_booking, '|', 2)))
    THEN 'Y'
    ELSE 'N'
  END AS latest_record_indicator
FROM booking_fact_1 bf_1
LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_booking_fact_margin bfm ON bf_1.bk_booking = bfm.bk_booking
LEFT OUTER JOIN opa_fl_all.source_market sm ON bf_1.bk_source_market = sm.bk_source_market
LEFT OUTER JOIN opa_fl_uk.fx_rates_dim_uk fx
  ON bf_1.sm_season = fx.bk_season
  AND sm.source_market_code = fx.source_market_code
ORDER BY
  bk_booking
  ,source_booking_version
  ,record_type DESC
);
2019-10-01 14:04:22,343 (Thread-1): Snowflake error: 000904 (42000): 018f4150-00c8-b342-0000-0e29015fbcb2: SQL compilation error: error line 970 at position 14
invalid identifier 'BK.EFFECTIVE_FROM'
2019-10-01 14:04:22,343 (Thread-1): On v_booking_fact_uk: ROLLBACK
2019-10-01 14:04:22,523 (Thread-1): 14:04:22 | 21 of 21 ERROR creating view model DBT_TEST.v_booking_fact_uk........ [ERROR in 1.50s]
2019-10-01 14:04:22,564 (MainThread): Using snowflake connection "master".
2019-10-01 14:04:22,565 (MainThread): On master: BEGIN
2019-10-01 14:04:22,675 (MainThread): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:04:22,676 (MainThread): On master: COMMIT
2019-10-01 14:04:22,676 (MainThread): Using snowflake connection "master".
2019-10-01 14:04:22,676 (MainThread): On master: COMMIT
2019-10-01 14:04:22,829 (MainThread): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 14:04:22,830 (MainThread): 14:04:22 | 
2019-10-01 14:04:22,831 (MainThread): 14:04:22 | Finished running 21 view models in 17.52s.
2019-10-01 14:04:22,831 (MainThread): Connection 'master' was left open.
2019-10-01 14:04:22,832 (MainThread): On master: Close
2019-10-01 14:04:23,001 (MainThread): Connection 'v_booking_fact_uk' was left open.
2019-10-01 14:04:23,001 (MainThread): On v_booking_fact_uk: Close
2019-10-01 14:04:23,186 (MainThread): 
2019-10-01 14:04:23,187 (MainThread): Completed with 1 error and 0 warnings:
2019-10-01 14:04:23,187 (MainThread): 
2019-10-01 14:04:23,187 (MainThread): Database Error in model v_booking_fact_uk (models\v_booking_fact_uk.sql)
2019-10-01 14:04:23,188 (MainThread):   000904 (42000): 018f4150-00c8-b342-0000-0e29015fbcb2: SQL compilation error: error line 970 at position 14
2019-10-01 14:04:23,188 (MainThread):   invalid identifier 'BK.EFFECTIVE_FROM'
2019-10-01 14:04:23,188 (MainThread):   compiled SQL at target\compiled\dbt_test\v_booking_fact_uk.sql
2019-10-01 14:04:23,188 (MainThread): 
Done. PASS=20 WARN=0 ERROR=1 SKIP=0 TOTAL=21
2019-10-01 14:04:23,189 (MainThread): Flushing usage events
2019-10-01 14:10:32,169 (MainThread): Tracking: tracking
2019-10-01 14:10:32,171 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000004972FC8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005CBC688>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C6C108>]}
2019-10-01 14:10:32,509 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 14:10:32,510 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: ResourceWarning: unclosed <socket.socket fd=488, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('10.32.130.75', 58148), raddr=('54.164.98.48', 443)>

2019-10-01 14:10:32,512 (MainThread): Error sending message, disabling tracking
2019-10-01 14:10:32,545 (MainThread): Parsing macros\core.sql
2019-10-01 14:10:32,555 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 14:10:32,592 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 14:10:32,605 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 14:10:32,608 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 14:10:32,611 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 14:10:32,615 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 14:10:32,618 (MainThread): Parsing macros\etc\query.sql
2019-10-01 14:10:32,620 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 14:10:32,629 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 14:10:32,638 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 14:10:32,647 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 14:10:32,665 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 14:10:32,685 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 14:10:32,688 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 14:10:32,704 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 14:10:32,710 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 14:10:32,717 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 14:10:32,723 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 14:10:32,726 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 14:10:32,728 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 14:10:32,731 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 14:10:32,734 (MainThread): Parsing macros\adapters.sql
2019-10-01 14:10:32,748 (MainThread): Parsing macros\catalog.sql
2019-10-01 14:10:32,753 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 14:10:32,762 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 14:10:32,764 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 14:10:32,769 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 14:10:32,796 (MainThread): Parsing model.dbt_test.v_booking_fact_uk
2019-10-01 14:10:32,798 (MainThread): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 14:10:32,798 (MainThread): Opening a new connection, currently in state init
2019-10-01 14:10:32,800 (MainThread): c:\python\python37\lib\site-packages\botocore\vendored\requests\models.py:169: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working

2019-10-01 14:10:33,112 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\botocore\\vendored\\requests\\cacert.pem'>

2019-10-01 14:10:33,128 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\certifi\\cacert.pem'>

2019-10-01 14:10:33,696 (MainThread): Parsing model.dbt_test.with_ar_agent
2019-10-01 14:10:33,697 (MainThread): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 14:10:33,698 (MainThread): Re-using an available connection from the pool (formerly v_booking_fact_uk).
2019-10-01 14:10:33,702 (MainThread): Parsing model.dbt_test.with_ar_currency
2019-10-01 14:10:33,703 (MainThread): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 14:10:33,703 (MainThread): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 14:10:33,708 (MainThread): Parsing model.dbt_test.with_ar_market
2019-10-01 14:10:33,709 (MainThread): Acquiring new snowflake connection "with_ar_market".
2019-10-01 14:10:33,709 (MainThread): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 14:10:33,714 (MainThread): Parsing model.dbt_test.with_ar_officename
2019-10-01 14:10:33,715 (MainThread): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 14:10:33,715 (MainThread): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 14:10:33,720 (MainThread): Parsing model.dbt_test.with_ar_point
2019-10-01 14:10:33,721 (MainThread): Acquiring new snowflake connection "with_ar_point".
2019-10-01 14:10:33,722 (MainThread): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 14:10:33,726 (MainThread): Parsing model.dbt_test.with_ar_sellstatic
2019-10-01 14:10:33,727 (MainThread): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 14:10:33,727 (MainThread): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 14:10:33,732 (MainThread): Parsing model.dbt_test.with_ar_sellunit
2019-10-01 14:10:33,733 (MainThread): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 14:10:33,733 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 14:10:33,738 (MainThread): Parsing model.dbt_test.with_ar_staticroom
2019-10-01 14:10:33,738 (MainThread): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 14:10:33,739 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 14:10:33,744 (MainThread): Parsing model.dbt_test.with_ar_staticstock
2019-10-01 14:10:33,745 (MainThread): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 14:10:33,745 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 14:10:33,750 (MainThread): Parsing model.dbt_test.with_ar_transinvroute
2019-10-01 14:10:33,750 (MainThread): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 14:10:33,751 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 14:10:33,755 (MainThread): Parsing model.dbt_test.with_ar_transinvroutesector
2019-10-01 14:10:33,756 (MainThread): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:10:33,757 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 14:10:33,761 (MainThread): Parsing model.dbt_test.with_ar_transinvsector
2019-10-01 14:10:33,762 (MainThread): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 14:10:33,762 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 14:10:33,769 (MainThread): Parsing model.dbt_test.with_ar_transroute
2019-10-01 14:10:33,770 (MainThread): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 14:10:33,770 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 14:10:33,775 (MainThread): Parsing model.dbt_test.with_ar_usercodes
2019-10-01 14:10:33,776 (MainThread): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 14:10:33,776 (MainThread): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 14:10:33,781 (MainThread): Parsing model.dbt_test.with_booking_fact_margin
2019-10-01 14:10:33,783 (MainThread): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 14:10:33,783 (MainThread): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 14:10:33,788 (MainThread): Parsing model.dbt_test.with_dates
2019-10-01 14:10:33,789 (MainThread): Acquiring new snowflake connection "with_dates".
2019-10-01 14:10:33,789 (MainThread): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 14:10:33,794 (MainThread): Parsing model.dbt_test.with_fl_acr_booking
2019-10-01 14:10:33,795 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 14:10:33,795 (MainThread): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 14:10:33,800 (MainThread): Parsing model.dbt_test.with_fl_acr_booking_service
2019-10-01 14:10:33,801 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:10:33,801 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 14:10:33,806 (MainThread): Parsing model.dbt_test.with_fl_acr_service
2019-10-01 14:10:33,807 (MainThread): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 14:10:33,807 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 14:10:33,812 (MainThread): Parsing model.dbt_test.with_fl_acr_service_element
2019-10-01 14:10:33,813 (MainThread): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 14:10:33,813 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 14:10:33,873 (MainThread): Found 21 models, 0 tests, 0 snapshots, 0 analyses, 117 macros, 0 operations, 0 seed files, 0 sources
2019-10-01 14:10:33,875 (MainThread): 
2019-10-01 14:10:33,877 (MainThread): Acquiring new snowflake connection "master".
2019-10-01 14:10:33,877 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 14:10:33,911 (MainThread): Parsing macros\core.sql
2019-10-01 14:10:33,922 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 14:10:34,024 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 14:10:34,051 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 14:10:34,060 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 14:10:34,073 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 14:10:34,086 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 14:10:34,093 (MainThread): Parsing macros\etc\query.sql
2019-10-01 14:10:34,100 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 14:10:34,126 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 14:10:34,151 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 14:10:34,163 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 14:10:34,198 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 14:10:34,233 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 14:10:34,239 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 14:10:34,280 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 14:10:34,292 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 14:10:34,299 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 14:10:34,312 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 14:10:34,315 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 14:10:34,321 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 14:10:34,326 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 14:10:34,332 (MainThread): Parsing macros\adapters.sql
2019-10-01 14:10:34,359 (MainThread): Parsing macros\catalog.sql
2019-10-01 14:10:34,365 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 14:10:34,387 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 14:10:34,395 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 14:10:34,406 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 14:10:34,591 (MainThread): Using snowflake connection "master".
2019-10-01 14:10:34,591 (MainThread): On master: select distinct schema_name
    from OPA_DEV.information_schema.schemata
    where catalog_name ilike 'OPA_DEV'
2019-10-01 14:10:35,366 (MainThread): SQL status: SUCCESS 28 in 0.77 seconds
2019-10-01 14:10:35,375 (MainThread): Creating schema "OPA_DEV"."DBT_TEST".
2019-10-01 14:10:35,377 (MainThread): Using snowflake connection "master".
2019-10-01 14:10:35,378 (MainThread): On master: BEGIN
2019-10-01 14:10:35,503 (MainThread): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:10:35,504 (MainThread): Using snowflake connection "master".
2019-10-01 14:10:35,505 (MainThread): On master: create schema if not exists OPA_DEV.DBT_TEST
2019-10-01 14:10:35,696 (MainThread): SQL status: SUCCESS 1 in 0.19 seconds
2019-10-01 14:10:35,697 (MainThread): On master: COMMIT
2019-10-01 14:10:35,698 (MainThread): Using snowflake connection "master".
2019-10-01 14:10:35,698 (MainThread): On master: COMMIT
2019-10-01 14:10:35,803 (MainThread): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:10:35,885 (MainThread): Using snowflake connection "master".
2019-10-01 14:10:35,885 (MainThread): On master: BEGIN
2019-10-01 14:10:36,010 (MainThread): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:10:36,010 (MainThread): Using snowflake connection "master".
2019-10-01 14:10:36,010 (MainThread): On master: select
      table_catalog as database,
      table_name as name,
      table_schema as schema,
      case when table_type = 'BASE TABLE' then 'table'
           when table_type = 'VIEW' then 'view'
           when table_type = 'MATERIALIZED VIEW' then 'materializedview'
           when table_type = 'EXTERNAL TABLE' then 'externaltable'
           else table_type
      end as table_type
    from OPA_DEV.information_schema.tables
    where table_schema ilike 'dbt_test'
      and table_catalog ilike 'opa_dev'
2019-10-01 14:10:37,201 (MainThread): SQL status: SUCCESS 0 in 1.19 seconds
2019-10-01 14:10:37,203 (MainThread): On master: ROLLBACK
2019-10-01 14:10:37,493 (MainThread): Using snowflake connection "master".
2019-10-01 14:10:37,494 (MainThread): On master: BEGIN
2019-10-01 14:10:37,626 (MainThread): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:10:37,627 (MainThread): On master: COMMIT
2019-10-01 14:10:37,627 (MainThread): Using snowflake connection "master".
2019-10-01 14:10:37,627 (MainThread): On master: COMMIT
2019-10-01 14:10:37,789 (MainThread): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:10:37,791 (MainThread): 14:10:37 | Concurrency: 1 threads (target='dev')
2019-10-01 14:10:37,792 (MainThread): 14:10:37 | 
2019-10-01 14:10:37,806 (Thread-1): 14:10:37 | 1 of 21 START view model DBT_TEST.with_ar_agent...................... [RUN]
2019-10-01 14:10:37,808 (Thread-1): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 14:10:37,809 (Thread-1): Opening a new connection, currently in state init
2019-10-01 14:10:38,396 (Thread-1): Compiling model.dbt_test.with_ar_agent
2019-10-01 14:10:38,421 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 14:10:38,481 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 14:10:38,485 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:10:38,485 (Thread-1): On with_ar_agent: BEGIN
2019-10-01 14:10:38,617 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:10:38,617 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:10:38,617 (Thread-1): On with_ar_agent: create or replace view OPA_DEV.DBT_TEST.with_ar_agent as (
    

SELECT DISTINCT
  ag_1.agt_id
  ,ag_1.def_mkt_id
  ,ag_1.agt_tp_id
FROM opa_stg_uk.ar_agent ag_1
WHERE ag_1.file_dt = (SELECT MAX(ag_2.file_dt) FROM opa_stg_uk.ar_agent ag_2 WHERE ag_1.agt_id = ag_2.agt_id)
  );
2019-10-01 14:10:38,998 (Thread-1): SQL status: SUCCESS 1 in 0.38 seconds
2019-10-01 14:10:38,999 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 14:10:38,999 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:10:38,999 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 14:10:39,106 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:10:39,111 (Thread-1): 14:10:39 | 1 of 21 OK created view model DBT_TEST.with_ar_agent................. [SUCCESS 1 in 1.30s]
2019-10-01 14:10:39,112 (Thread-1): 14:10:39 | 2 of 21 START view model DBT_TEST.with_ar_market..................... [RUN]
2019-10-01 14:10:39,114 (Thread-1): Acquiring new snowflake connection "with_ar_market".
2019-10-01 14:10:39,115 (Thread-1): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 14:10:39,115 (Thread-1): Compiling model.dbt_test.with_ar_market
2019-10-01 14:10:39,122 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_market"
2019-10-01 14:10:39,130 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_market"
2019-10-01 14:10:39,134 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:10:39,135 (Thread-1): On with_ar_market: BEGIN
2019-10-01 14:10:39,244 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:10:39,245 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:10:39,245 (Thread-1): On with_ar_market: create or replace view OPA_DEV.DBT_TEST.with_ar_market as (
    

SELECT DISTINCT
  mk_1.mkt_id
  ,mk_1.off_id
FROM opa_stg_uk.ar_market mk_1
WHERE mk_1.file_dt = (SELECT MAX(mk_2.file_dt) FROM opa_stg_uk.ar_market mk_2 WHERE mk_1.mkt_id = mk_2.mkt_id)
  );
2019-10-01 14:10:39,503 (Thread-1): SQL status: SUCCESS 1 in 0.26 seconds
2019-10-01 14:10:39,505 (Thread-1): On with_ar_market: COMMIT
2019-10-01 14:10:39,505 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:10:39,506 (Thread-1): On with_ar_market: COMMIT
2019-10-01 14:10:39,596 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:10:39,600 (Thread-1): 14:10:39 | 2 of 21 OK created view model DBT_TEST.with_ar_market................ [SUCCESS 1 in 0.49s]
2019-10-01 14:10:39,601 (Thread-1): 14:10:39 | 3 of 21 START view model DBT_TEST.with_ar_officename................. [RUN]
2019-10-01 14:10:39,604 (Thread-1): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 14:10:39,604 (Thread-1): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 14:10:39,605 (Thread-1): Compiling model.dbt_test.with_ar_officename
2019-10-01 14:10:39,610 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 14:10:39,620 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 14:10:39,624 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:10:39,624 (Thread-1): On with_ar_officename: BEGIN
2019-10-01 14:10:39,746 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:10:39,746 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:10:39,747 (Thread-1): On with_ar_officename: create or replace view OPA_DEV.DBT_TEST.with_ar_officename as (
    

SELECT DISTINCT
  ofn_1.off_name_id
  ,ofn_1.cd
  ,ofn_1.name
  -- ,sm.source_market_code
FROM opa_stg_uk.ar_officename ofn_1
-- LEFT OUTER JOIN opa_stg_all.source_market sm ON 'UKATCOM|' || ofn_1.cd = bk_source_market
WHERE ofn_1.file_dt = (SELECT MAX(ofn_2.file_dt) FROM opa_stg_uk.ar_officename ofn_2 WHERE ofn_1.off_name_id = ofn_2.off_name_id)
  );
2019-10-01 14:10:40,024 (Thread-1): SQL status: SUCCESS 1 in 0.28 seconds
2019-10-01 14:10:40,026 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 14:10:40,027 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:10:40,027 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 14:10:40,126 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:10:40,132 (Thread-1): 14:10:40 | 3 of 21 OK created view model DBT_TEST.with_ar_officename............ [SUCCESS 1 in 0.53s]
2019-10-01 14:10:40,133 (Thread-1): 14:10:40 | 4 of 21 START view model DBT_TEST.with_ar_point...................... [RUN]
2019-10-01 14:10:40,135 (Thread-1): Acquiring new snowflake connection "with_ar_point".
2019-10-01 14:10:40,135 (Thread-1): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 14:10:40,135 (Thread-1): Compiling model.dbt_test.with_ar_point
2019-10-01 14:10:40,141 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_point"
2019-10-01 14:10:40,149 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_point"
2019-10-01 14:10:40,154 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:10:40,155 (Thread-1): On with_ar_point: BEGIN
2019-10-01 14:10:40,259 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:10:40,260 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:10:40,260 (Thread-1): On with_ar_point: create or replace view OPA_DEV.DBT_TEST.with_ar_point as (
    

SELECT
  p.pt_id
  ,p.pt_cd
FROM opa_stg_uk.ar_point p
WHERE p.file_dt = (SELECT MAX(p_2.file_dt) FROM opa_stg_uk.ar_point p_2 WHERE p.pt_id = p_2.pt_id)
  );
2019-10-01 14:10:40,546 (Thread-1): SQL status: SUCCESS 1 in 0.29 seconds
2019-10-01 14:10:40,548 (Thread-1): On with_ar_point: COMMIT
2019-10-01 14:10:40,549 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:10:40,549 (Thread-1): On with_ar_point: COMMIT
2019-10-01 14:10:40,654 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:10:40,661 (Thread-1): 14:10:40 | 4 of 21 OK created view model DBT_TEST.with_ar_point................. [SUCCESS 1 in 0.52s]
2019-10-01 14:10:40,663 (Thread-1): 14:10:40 | 5 of 21 START view model DBT_TEST.with_ar_sellstatic................. [RUN]
2019-10-01 14:10:40,663 (Thread-1): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 14:10:40,663 (Thread-1): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 14:10:40,664 (Thread-1): Compiling model.dbt_test.with_ar_sellstatic
2019-10-01 14:10:40,675 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 14:10:40,732 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 14:10:40,737 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:10:40,737 (Thread-1): On with_ar_sellstatic: BEGIN
2019-10-01 14:10:40,845 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:10:40,845 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:10:40,846 (Thread-1): On with_ar_sellstatic: create or replace view OPA_DEV.DBT_TEST.with_ar_sellstatic as (
    

SELECT
  sls_1.sell_stc_id
  ,sls_1.stc_stk_id
FROM opa_stg_uk.ar_sellstatic sls_1
WHERE sls_1.file_dt = (SELECT MAX(sls_2.file_dt) FROM opa_stg_uk.ar_sellstatic sls_2 WHERE sls_1.sell_stc_id = sls_2.sell_stc_id)
  );
2019-10-01 14:10:41,305 (Thread-1): SQL status: SUCCESS 1 in 0.46 seconds
2019-10-01 14:10:41,306 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 14:10:41,307 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:10:41,307 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 14:10:41,402 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:10:41,408 (Thread-1): 14:10:41 | 5 of 21 OK created view model DBT_TEST.with_ar_sellstatic............ [SUCCESS 1 in 0.74s]
2019-10-01 14:10:41,409 (Thread-1): 14:10:41 | 6 of 21 START view model DBT_TEST.with_ar_sellunit................... [RUN]
2019-10-01 14:10:41,412 (Thread-1): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 14:10:41,412 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 14:10:41,412 (Thread-1): Compiling model.dbt_test.with_ar_sellunit
2019-10-01 14:10:41,417 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 14:10:41,427 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 14:10:41,431 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:10:41,431 (Thread-1): On with_ar_sellunit: BEGIN
2019-10-01 14:10:41,598 (Thread-1): SQL status: SUCCESS 1 in 0.17 seconds
2019-10-01 14:10:41,599 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:10:41,599 (Thread-1): On with_ar_sellunit: create or replace view OPA_DEV.DBT_TEST.with_ar_sellunit as (
    

SELECT
  su.sell_unit_id
  ,su.rm_id
  ,su.bb_cd_id
FROM opa_stg_uk.ar_sellunit su
WHERE su.file_dt = (SELECT MAX(su_2.file_dt) FROM opa_stg_uk.ar_sellunit su_2 WHERE su.sell_unit_id = su_2.sell_unit_id)
  );
2019-10-01 14:10:41,958 (Thread-1): SQL status: SUCCESS 1 in 0.36 seconds
2019-10-01 14:10:41,960 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 14:10:41,960 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:10:41,960 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 14:10:42,065 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:10:42,077 (Thread-1): 14:10:42 | 6 of 21 OK created view model DBT_TEST.with_ar_sellunit.............. [SUCCESS 1 in 0.66s]
2019-10-01 14:10:42,079 (Thread-1): 14:10:42 | 7 of 21 START view model DBT_TEST.with_ar_staticroom................. [RUN]
2019-10-01 14:10:42,089 (Thread-1): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 14:10:42,089 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 14:10:42,091 (Thread-1): Compiling model.dbt_test.with_ar_staticroom
2019-10-01 14:10:42,103 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 14:10:42,113 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 14:10:42,117 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:10:42,118 (Thread-1): On with_ar_staticroom: BEGIN
2019-10-01 14:10:42,245 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:10:42,245 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:10:42,245 (Thread-1): On with_ar_staticroom: create or replace view OPA_DEV.DBT_TEST.with_ar_staticroom as (
    

SELECT
  sr.stc_rm_id
  ,sr.stc_stk_id
  ,sr.rm_id
FROM opa_stg_uk.ar_staticroom sr
WHERE sr.file_dt = (SELECT MAX(sr_2.file_dt) FROM opa_stg_uk.ar_staticroom sr_2 WHERE sr.stc_rm_id = sr_2.stc_rm_id)
  );
2019-10-01 14:10:42,518 (Thread-1): SQL status: SUCCESS 1 in 0.27 seconds
2019-10-01 14:10:42,521 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 14:10:42,522 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:10:42,522 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 14:10:42,618 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:10:42,628 (Thread-1): 14:10:42 | 7 of 21 OK created view model DBT_TEST.with_ar_staticroom............ [SUCCESS 1 in 0.53s]
2019-10-01 14:10:42,630 (Thread-1): 14:10:42 | 8 of 21 START view model DBT_TEST.with_ar_staticstock................ [RUN]
2019-10-01 14:10:42,635 (Thread-1): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 14:10:42,635 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 14:10:42,637 (Thread-1): Compiling model.dbt_test.with_ar_staticstock
2019-10-01 14:10:42,645 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 14:10:42,656 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 14:10:42,661 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:10:42,661 (Thread-1): On with_ar_staticstock: BEGIN
2019-10-01 14:10:42,778 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:10:42,778 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:10:42,778 (Thread-1): On with_ar_staticstock: create or replace view OPA_DEV.DBT_TEST.with_ar_staticstock as (
    

SELECT
  ss.stc_stk_id
  ,ss.cd
FROM opa_stg_uk.ar_staticstock ss
WHERE ss.file_dt = (SELECT MAX(ss_2.file_dt) FROM opa_stg_uk.ar_staticstock ss_2 WHERE ss.stc_stk_id = ss_2.stc_stk_id)
  );
2019-10-01 14:10:43,317 (Thread-1): SQL status: SUCCESS 1 in 0.54 seconds
2019-10-01 14:10:43,320 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 14:10:43,320 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:10:43,321 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 14:10:43,427 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:10:43,433 (Thread-1): 14:10:43 | 8 of 21 OK created view model DBT_TEST.with_ar_staticstock........... [SUCCESS 1 in 0.80s]
2019-10-01 14:10:43,435 (Thread-1): 14:10:43 | 9 of 21 START view model DBT_TEST.with_ar_transinvroute.............. [RUN]
2019-10-01 14:10:43,438 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 14:10:43,439 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 14:10:43,440 (Thread-1): Compiling model.dbt_test.with_ar_transinvroute
2019-10-01 14:10:43,447 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 14:10:43,459 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 14:10:43,463 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:10:43,464 (Thread-1): On with_ar_transinvroute: BEGIN
2019-10-01 14:10:43,650 (Thread-1): SQL status: SUCCESS 1 in 0.19 seconds
2019-10-01 14:10:43,650 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:10:43,650 (Thread-1): On with_ar_transinvroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroute as (
    

SELECT
  tir.trans_inv_route_id
  ,tir.trans_route_id
FROM opa_stg_uk.ar_transinvroute tir
WHERE tir.file_dt = (SELECT MAX(tir_2.file_dt) FROM opa_stg_uk.ar_transinvroute tir_2 WHERE tir.trans_inv_route_id = tir_2.trans_inv_route_id)
  );
2019-10-01 14:10:43,972 (Thread-1): SQL status: SUCCESS 1 in 0.32 seconds
2019-10-01 14:10:43,973 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 14:10:43,974 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:10:43,974 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 14:10:44,091 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:10:44,095 (Thread-1): 14:10:44 | 9 of 21 OK created view model DBT_TEST.with_ar_transinvroute......... [SUCCESS 1 in 0.66s]
2019-10-01 14:10:44,096 (Thread-1): 14:10:44 | 10 of 21 START view model DBT_TEST.with_ar_transinvroutesector....... [RUN]
2019-10-01 14:10:44,098 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:10:44,098 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 14:10:44,099 (Thread-1): Compiling model.dbt_test.with_ar_transinvroutesector
2019-10-01 14:10:44,105 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 14:10:44,116 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 14:10:44,121 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:10:44,121 (Thread-1): On with_ar_transinvroutesector: BEGIN
2019-10-01 14:10:44,233 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:10:44,233 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:10:44,234 (Thread-1): On with_ar_transinvroutesector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroutesector as (
    

SELECT
  tirs.trans_inv_route_id
  ,tirs.trans_inv_sec_id
  ,tirs.trans_inv_route_sec_id
FROM opa_stg_uk.ar_transinvroutesector tirs
WHERE tirs.file_dt = (SELECT MAX(tirs_2.file_dt) FROM opa_stg_uk.ar_transinvroutesector tirs_2 WHERE tirs.trans_inv_route_sec_id = tirs_2.trans_inv_route_sec_id)
  );
2019-10-01 14:10:44,480 (Thread-1): SQL status: SUCCESS 1 in 0.25 seconds
2019-10-01 14:10:44,482 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 14:10:44,482 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:10:44,483 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 14:10:44,590 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:10:44,601 (Thread-1): 14:10:44 | 10 of 21 OK created view model DBT_TEST.with_ar_transinvroutesector.. [SUCCESS 1 in 0.50s]
2019-10-01 14:10:44,602 (Thread-1): 14:10:44 | 11 of 21 START view model DBT_TEST.with_ar_transinvsector............ [RUN]
2019-10-01 14:10:44,605 (Thread-1): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 14:10:44,605 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 14:10:44,607 (Thread-1): Compiling model.dbt_test.with_ar_transinvsector
2019-10-01 14:10:44,615 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 14:10:44,631 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 14:10:44,638 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:10:44,638 (Thread-1): On with_ar_transinvsector: BEGIN
2019-10-01 14:10:44,750 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:10:44,751 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:10:44,751 (Thread-1): On with_ar_transinvsector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvsector as (
    

SELECT
  tis.trans_inv_sec_id
  ,tis.dep_dt_tm
FROM opa_stg_uk.ar_transinvsector tis
WHERE tis.file_dt = (SELECT MAX(tis_2.file_dt) FROM opa_stg_uk.ar_transinvsector tis_2 WHERE tis.trans_inv_sec_id = tis_2.trans_inv_sec_id)
  );
2019-10-01 14:10:45,038 (Thread-1): SQL status: SUCCESS 1 in 0.29 seconds
2019-10-01 14:10:45,039 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 14:10:45,039 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:10:45,039 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 14:10:45,132 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:10:45,137 (Thread-1): 14:10:45 | 11 of 21 OK created view model DBT_TEST.with_ar_transinvsector....... [SUCCESS 1 in 0.53s]
2019-10-01 14:10:45,138 (Thread-1): 14:10:45 | 12 of 21 START view model DBT_TEST.with_ar_transroute................ [RUN]
2019-10-01 14:10:45,139 (Thread-1): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 14:10:45,139 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 14:10:45,139 (Thread-1): Compiling model.dbt_test.with_ar_transroute
2019-10-01 14:10:45,149 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 14:10:45,163 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 14:10:45,168 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:10:45,169 (Thread-1): On with_ar_transroute: BEGIN
2019-10-01 14:10:45,325 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:10:45,325 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:10:45,325 (Thread-1): On with_ar_transroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transroute as (
    

SELECT
	tr.trans_route_id
	,tr.route_cd
FROM opa_stg_uk.ar_transroute tr
WHERE tr.file_dt = (SELECT MAX(tr_2.file_dt) FROM opa_stg_uk.ar_transroute tr_2 WHERE tr.trans_route_id = tr_2.trans_route_id)
  );
2019-10-01 14:10:45,652 (Thread-1): SQL status: SUCCESS 1 in 0.33 seconds
2019-10-01 14:10:45,654 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 14:10:45,655 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:10:45,655 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 14:10:45,753 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:10:45,757 (Thread-1): 14:10:45 | 12 of 21 OK created view model DBT_TEST.with_ar_transroute........... [SUCCESS 1 in 0.62s]
2019-10-01 14:10:45,759 (Thread-1): 14:10:45 | 13 of 21 START view model DBT_TEST.with_ar_usercodes................. [RUN]
2019-10-01 14:10:45,761 (Thread-1): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 14:10:45,761 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 14:10:45,761 (Thread-1): Compiling model.dbt_test.with_ar_usercodes
2019-10-01 14:10:45,768 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 14:10:45,781 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 14:10:45,786 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:10:45,786 (Thread-1): On with_ar_usercodes: BEGIN
2019-10-01 14:10:45,891 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:10:45,892 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:10:45,892 (Thread-1): On with_ar_usercodes: create or replace view OPA_DEV.DBT_TEST.with_ar_usercodes as (
    

SELECT DISTINCT
  uc_1.user_cd_id
  ,uc_1.cd
  ,uc_1.name
FROM opa_stg_uk.ar_usercodes uc_1
WHERE uc_1.file_dt = (SELECT MAX(uc_2.file_dt) FROM opa_stg_uk.ar_usercodes uc_2 WHERE uc_1.user_cd_id = uc_2.user_cd_id)
  );
2019-10-01 14:10:46,106 (Thread-1): SQL status: SUCCESS 1 in 0.21 seconds
2019-10-01 14:10:46,109 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 14:10:46,109 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:10:46,109 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 14:10:46,204 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:10:46,212 (Thread-1): 14:10:46 | 13 of 21 OK created view model DBT_TEST.with_ar_usercodes............ [SUCCESS 1 in 0.45s]
2019-10-01 14:10:46,215 (Thread-1): 14:10:46 | 14 of 21 START view model DBT_TEST.with_booking_fact_margin.......... [RUN]
2019-10-01 14:10:46,218 (Thread-1): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 14:10:46,218 (Thread-1): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 14:10:46,219 (Thread-1): Compiling model.dbt_test.with_booking_fact_margin
2019-10-01 14:10:46,228 (Thread-1): Writing injected SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 14:10:46,242 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 14:10:46,250 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:10:46,250 (Thread-1): On with_booking_fact_margin: BEGIN
2019-10-01 14:10:46,370 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:10:46,371 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:10:46,371 (Thread-1): On with_booking_fact_margin: create or replace view OPA_DEV.DBT_TEST.with_booking_fact_margin as (
    

SELECT
  bff_1.bk_booking
  ,bff_1.ffd_flag
  ,bff_1.sm_currency
  ,bff_1.sm_revenue
  ,bff_1.sm_cnx_and_amend_revenue
  ,bff_1.sm_accommodation_costs
  ,bff_1.sm_early_booking_discounts
  ,bff_1.sm_late_booking_discounts
  ,bff_1.sm_flying_costs
  ,bff_1.sm_other_costs
  ,bff_1.sm_distribution_costs
  ,bff_1.sm_non_margin_items
  ,bff_1.sm_margin
  ,bff_1.smg_currency
  ,bff_1.smg_revenue
  ,bff_1.smg_cnx_and_amend_revenue
  ,bff_1.smg_accommodation_costs
  ,bff_1.smg_early_booking_discounts
  ,bff_1.smg_late_booking_discounts
  ,bff_1.smg_flying_costs
  ,bff_1.smg_other_costs
  ,bff_1.smg_distribution_costs
  ,bff_1.smg_non_margin_items
  ,bff_1.smg_margin
  ,bff_1.rep_currency
  ,bff_1.rep_revenue
  ,bff_1.rep_cnx_and_amend_revenue
  ,bff_1.rep_accommodation_costs
  ,bff_1.rep_early_booking_discounts
  ,bff_1.rep_late_booking_discounts
  ,bff_1.rep_flying_costs
  ,bff_1.rep_other_costs
  ,bff_1.rep_distribution_costs
  ,bff_1.rep_non_margin_items
  ,bff_1.rep_margin
FROM opa_fl_uk.v_booking_fact_margin_uk bff_1
  );
2019-10-01 14:10:46,675 (Thread-1): SQL status: SUCCESS 1 in 0.30 seconds
2019-10-01 14:10:46,678 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 14:10:46,678 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:10:46,678 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 14:10:46,835 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:10:46,842 (Thread-1): 14:10:46 | 14 of 21 OK created view model DBT_TEST.with_booking_fact_margin..... [SUCCESS 1 in 0.62s]
2019-10-01 14:10:46,845 (Thread-1): 14:10:46 | 15 of 21 START view model DBT_TEST.with_dates........................ [RUN]
2019-10-01 14:10:46,847 (Thread-1): Acquiring new snowflake connection "with_dates".
2019-10-01 14:10:46,847 (Thread-1): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 14:10:46,848 (Thread-1): Compiling model.dbt_test.with_dates
2019-10-01 14:10:46,856 (Thread-1): Writing injected SQL for node "model.dbt_test.with_dates"
2019-10-01 14:10:46,869 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_dates"
2019-10-01 14:10:46,875 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:10:46,875 (Thread-1): On with_dates: BEGIN
2019-10-01 14:10:47,088 (Thread-1): SQL status: SUCCESS 1 in 0.21 seconds
2019-10-01 14:10:47,089 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:10:47,089 (Thread-1): On with_dates: create or replace view OPA_DEV.DBT_TEST.with_dates as (
    


SELECT
	dd.bk_date
	,dd.group_season_code
FROM opa_stg_all.date_dim dd
  );
2019-10-01 14:10:47,363 (Thread-1): SQL status: SUCCESS 1 in 0.27 seconds
2019-10-01 14:10:47,365 (Thread-1): On with_dates: COMMIT
2019-10-01 14:10:47,365 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:10:47,365 (Thread-1): On with_dates: COMMIT
2019-10-01 14:10:47,538 (Thread-1): SQL status: SUCCESS 1 in 0.17 seconds
2019-10-01 14:10:47,548 (Thread-1): 14:10:47 | 15 of 21 OK created view model DBT_TEST.with_dates................... [SUCCESS 1 in 0.70s]
2019-10-01 14:10:47,558 (Thread-1): 14:10:47 | 16 of 21 START view model DBT_TEST.with_fl_acr_booking............... [RUN]
2019-10-01 14:10:47,558 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 14:10:47,558 (Thread-1): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 14:10:47,568 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking
2019-10-01 14:10:47,578 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 14:10:47,593 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 14:10:47,601 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:10:47,601 (Thread-1): On with_fl_acr_booking: BEGIN
2019-10-01 14:10:47,826 (Thread-1): SQL status: SUCCESS 1 in 0.22 seconds
2019-10-01 14:10:47,827 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:10:47,827 (Thread-1): On with_fl_acr_booking: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking as (
    

SELECT
  bk_1.sk_booking_id
  ,bk_1.booking_version
  ,bk_1.atcom_res_id
  ,bk_1.atcom_res_version
  ,bk_1.atcom_market_id -- CG ADDED in V1.06 for new Source Market Derivation
  ,bk_1.number_of_adults
  ,bk_1.number_of_children
  ,bk_1.number_of_infants
  ,bk_1.number_of_passengers
  ,bk_1.sk_season_id
  ,bk_1.booking_status
  ,bk_1.atcom_agent_id
  ,bk_1.atcom_sell_currency_id
  ,bk_1.season_date
  ,bk_1.confirmed_on
  ,bk_1.cancelled_on
  ,bk_1.source_created_on
  ,bk_1.modified_on
  ,bk_1.effective_from
  ,DATEADD('second', -1, LEAD(bk_1.effective_from) OVER (PARTITION BY bk_1.sk_booking_id ORDER BY bk_1.booking_version)) AS lead_effective_from
  ,bk_1.effective_to
  ,bk_1.dwh_created_on
  ,bk_1.dwh_modified_on

FROM opa_stg_uk.fl_acr_booking bk_1
WHERE bk_1.file_dt = (SELECT MAX(bk_2.file_dt) FROM opa_stg_uk.fl_acr_booking bk_2 WHERE bk_1.sk_booking_id = bk_2.sk_booking_id AND bk_1.booking_version = bk_2.booking_version)
AND bk_1.booking_version = (SELECT MAX(bk_3.booking_version) FROM opa_stg_uk.fl_acr_booking bk_3 WHERE bk_1.sk_booking_id = bk_3.sk_booking_id)
AND (bk_1.sk_season_id > 201701 OR bk_1.sk_booking_id IS NULL)

-- To be removed when running against all bookings
AND bk_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 14:10:48,149 (Thread-1): SQL status: SUCCESS 1 in 0.32 seconds
2019-10-01 14:10:48,150 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 14:10:48,151 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:10:48,151 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 14:10:48,499 (Thread-1): SQL status: SUCCESS 1 in 0.35 seconds
2019-10-01 14:10:48,517 (Thread-1): 14:10:48 | 16 of 21 OK created view model DBT_TEST.with_fl_acr_booking.......... [SUCCESS 1 in 0.95s]
2019-10-01 14:10:48,521 (Thread-1): 14:10:48 | 17 of 21 START view model DBT_TEST.with_fl_acr_booking_service....... [RUN]
2019-10-01 14:10:48,527 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:10:48,528 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 14:10:48,530 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking_service
2019-10-01 14:10:48,550 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 14:10:48,565 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 14:10:48,574 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:10:48,576 (Thread-1): On with_fl_acr_booking_service: BEGIN
2019-10-01 14:10:48,692 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:10:48,693 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:10:48,693 (Thread-1): On with_fl_acr_booking_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking_service as (
    

SELECT
  bk_ser_1.sk_booking_service_id
  ,bk_ser_1.sk_booking_id
  ,bk_ser_1.sk_service_id
  ,bk_ser_1.service_version
  ,bk_ser_1.booking_version
FROM opa_stg_uk.fl_acr_booking_service bk_ser_1
WHERE bk_ser_1.file_dt = (SELECT MAX(bk_ser_2.file_dt) FROM opa_stg_uk.fl_acr_booking_service bk_ser_2 WHERE bk_ser_1.sk_booking_service_id = bk_ser_2.sk_booking_service_id)
AND bk_ser_1.booking_version = (SELECT MAX(bk_ser_3.booking_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_3 WHERE bk_ser_1.sk_booking_id = bk_ser_3.sk_booking_id)
AND bk_ser_1.service_version = (SELECT MAX(bk_ser_4.service_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_4 WHERE bk_ser_1.sk_service_id = bk_ser_4.sk_service_id)

-- To be removed when running against all bookings
AND bk_ser_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 14:10:49,280 (Thread-1): SQL status: SUCCESS 1 in 0.59 seconds
2019-10-01 14:10:49,280 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 14:10:49,280 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:10:49,280 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 14:10:49,421 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:10:49,441 (Thread-1): 14:10:49 | 17 of 21 OK created view model DBT_TEST.with_fl_acr_booking_service.. [SUCCESS 1 in 0.90s]
2019-10-01 14:10:49,441 (Thread-1): 14:10:49 | 18 of 21 START view model DBT_TEST.with_fl_acr_service............... [RUN]
2019-10-01 14:10:49,442 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 14:10:49,442 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 14:10:49,442 (Thread-1): Compiling model.dbt_test.with_fl_acr_service
2019-10-01 14:10:49,448 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 14:10:49,457 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 14:10:49,462 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:10:49,462 (Thread-1): On with_fl_acr_service: BEGIN
2019-10-01 14:10:49,610 (Thread-1): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 14:10:49,610 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:10:49,610 (Thread-1): On with_fl_acr_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service as (
    

SELECT
  ser_1.sk_service_id
  ,ser_1.atcom_ser_id
  ,ser_1.atcom_dep_point_id
  ,ser_1.service_version
  ,ser_1.service_status
  ,ser_1.direction
  ,ser_1.sell_type
  ,ser_1.service_type
  ,ser_1.flight_type_code
  ,ser_1.service_start_date1
  ,ser_1.service_end_date1
  ,ser_1.departure_flight_number
  ,ser_1.atcom_arr_point_id
  ,ser_1.source_stock_type_code
FROM opa_stg_uk.fl_acr_service ser_1
WHERE ser_1.file_dt = (SELECT MAX(ser_2.file_dt) FROM opa_stg_uk.fl_acr_service ser_2 WHERE ser_1.sk_service_id = ser_2.sk_service_id AND ser_1.service_version = ser_2.service_version)
  );
2019-10-01 14:10:49,958 (Thread-1): SQL status: SUCCESS 1 in 0.35 seconds
2019-10-01 14:10:49,958 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 14:10:49,958 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:10:49,958 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 14:10:50,071 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:10:50,081 (Thread-1): 14:10:50 | 18 of 21 OK created view model DBT_TEST.with_fl_acr_service.......... [SUCCESS 1 in 0.64s]
2019-10-01 14:10:50,091 (Thread-1): 14:10:50 | 19 of 21 START view model DBT_TEST.with_fl_acr_service_element....... [RUN]
2019-10-01 14:10:50,091 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 14:10:50,091 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 14:10:50,091 (Thread-1): Compiling model.dbt_test.with_fl_acr_service_element
2019-10-01 14:10:50,101 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 14:10:50,105 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 14:10:50,111 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:10:50,111 (Thread-1): On with_fl_acr_service_element: BEGIN
2019-10-01 14:10:50,273 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:10:50,273 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:10:50,273 (Thread-1): On with_fl_acr_service_element: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service_element as (
    

SELECT
  ser_e_1.sk_service_id
  ,ser_e_1.service_version
  ,ser_e_1.atcom_sub_ser_id
FROM opa_stg_uk.fl_acr_service_element ser_e_1
WHERE ser_e_1.file_dt = (SELECT MAX(ser_e_2.file_dt) FROM opa_stg_uk.fl_acr_service_element ser_e_2 WHERE ser_e_1.sk_service_element_id = ser_e_2.sk_service_element_id)
  );
2019-10-01 14:10:50,523 (Thread-1): SQL status: SUCCESS 1 in 0.25 seconds
2019-10-01 14:10:50,525 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 14:10:50,526 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:10:50,526 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 14:10:50,682 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:10:50,698 (Thread-1): 14:10:50 | 19 of 21 OK created view model DBT_TEST.with_fl_acr_service_element.. [SUCCESS 1 in 0.60s]
2019-10-01 14:10:50,708 (Thread-1): 14:10:50 | 20 of 21 START view model DBT_TEST.with_ar_currency.................. [RUN]
2019-10-01 14:10:50,708 (Thread-1): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 14:10:50,708 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 14:10:50,708 (Thread-1): Compiling model.dbt_test.with_ar_currency
2019-10-01 14:10:50,718 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 14:10:50,728 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 14:10:50,738 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:10:50,738 (Thread-1): On with_ar_currency: BEGIN
2019-10-01 14:10:50,850 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:10:50,850 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:10:50,850 (Thread-1): On with_ar_currency: create or replace view OPA_DEV.DBT_TEST.with_ar_currency as (
    

SELECT DISTINCT
  cur_1.cur_id
  ,cur_1.cd
  ,cur_1.name
FROM opa_stg_uk.ar_currency cur_1
WHERE cur_1.file_dt = (SELECT MAX(cur_2.file_dt) FROM opa_stg_uk.ar_currency cur_2 WHERE cur_1.cur_id = cur_2.cur_id)
  );
2019-10-01 14:10:51,199 (Thread-1): SQL status: SUCCESS 1 in 0.35 seconds
2019-10-01 14:10:51,199 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 14:10:51,199 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:10:51,199 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 14:10:51,298 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:10:51,306 (Thread-1): 14:10:51 | 20 of 21 OK created view model DBT_TEST.with_ar_currency............. [SUCCESS 1 in 0.59s]
2019-10-01 14:10:51,307 (Thread-1): 14:10:51 | 21 of 21 START view model DBT_TEST.v_booking_fact_uk................. [RUN]
2019-10-01 14:10:51,310 (Thread-1): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 14:10:51,310 (Thread-1): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 14:10:51,311 (Thread-1): Compiling model.dbt_test.v_booking_fact_uk
2019-10-01 14:10:51,366 (Thread-1): Writing injected SQL for node "model.dbt_test.v_booking_fact_uk"
2019-10-01 14:10:51,401 (Thread-1): Writing runtime SQL for node "model.dbt_test.v_booking_fact_uk"
2019-10-01 14:10:51,498 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:10:51,498 (Thread-1): On v_booking_fact_uk: BEGIN
2019-10-01 14:10:51,627 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:10:51,627 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:10:51,627 (Thread-1): On v_booking_fact_uk: create or replace view OPA_DEV.DBT_TEST.v_booking_fact_uk as (
    

WITH booking_service AS (
	SELECT
		bk_ser.sk_booking_id
		,bk_ser.booking_version
		,bk_ser.sk_service_id
		,bk_ser.service_version
		,bk_ser.sk_booking_service_id
		,ser.service_type
		,ser.source_stock_type_code
		,ser.sell_type
		,ser.service_status
		,ser.flight_type_code
		,ser.service_start_date1
		,ser.service_end_date1
		,tis.dep_dt_tm
		,ser.departure_flight_number
		,ser.direction
		,tr.route_cd
		,dpt.pt_cd
		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN apt.pt_cd
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				AND ser.service_status = 'CON'
				THEN apt.pt_cd
				ELSE NULL
			END
		END AS min_flight_gateway

		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
					AND ser.service_status = 'CON'
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		END	AS min_flight_id

		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MAX(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MAX(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
					AND ser.service_status = 'CON'
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		END AS max_flight_id


		-- MULTICENTRE
		,CASE WHEN
			-- All multicentre services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END	AS min_multi_center_date

		,CASE WHEN
			-- All multicentre services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS max_multi_center_date


		-- ACCOM
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU'))
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_accom_date
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU'))
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS max_accom_date


		-- CRUISE
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_cruise_date
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END max_cruise_date


		-- FLIGHT
		,CASE WHEN
			-- All flight services cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_flight_date
		,CASE WHEN
			-- All flight services cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END	AS max_flight_date

		,sts.cd AS accom
		,su.bb_cd_id AS board_cd
		,uc_3.name AS board_name
		,str.stc_rm_id AS room

		-- Booking type derivation part 1
		,CASE WHEN
				-- No outbound flight services on the booking are third party
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
		THEN 0
		ELSE
			CASE WHEN
				-- All outbound flight services are 3PF
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
					+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				=
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

			OR
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
			THEN 1
			ELSE 0
			END
		END AS tpf_out_count
		,CASE WHEN
				-- No outbound flight services on the booking are third party
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
		THEN 0
		ELSE
			CASE WHEN
				-- All outbound flight services are 3PF
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
					+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				=
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

			OR
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
			THEN 1
			ELSE 0
			END
		END AS tpf_in_count
		,CASE WHEN
				CASE WHEN
						-- No outbound flight services on the booking are third party
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
				THEN 0
				ELSE
					CASE WHEN
						-- All outbound flight services are 3PF
						SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
							+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
						=
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

					OR
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
					THEN 1
					ELSE 0
					END
				END
			+
				CASE WHEN
						-- No outbound flight services on the booking are third party
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
				THEN 0
				ELSE
					CASE WHEN
						-- All outbound flight services are 3PF
						SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
							+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
						=
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

					OR
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
					THEN 1
					ELSE 0
					END
				END
		> 0
			THEN 'Y'
			ELSE 'N'
		END AS tpf_indicator
		,CASE WHEN
				-- All accom cancelled
				SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS accom_count
		,CASE WHEN
				-- All cruise cancelled
				SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS cruise_count
		,CASE WHEN
				-- All flight out cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS flight_out_count
		,CASE WHEN
				-- All flight in cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS flight_ret_count
		,CASE WHEN
				-- All ahoc services cancelled
				SUM(CASE WHEN ser.service_type = 'AHOC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'AHOC' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'AHOC' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS thirdparty_count

		,CASE WHEN
				-- All flight out first date cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN ser.service_start_date1 ELSE NULL END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN ser.service_start_date1 ELSE NULL END
		END AS flight_out_first_date
		,CASE WHEN
				-- All flight in first date cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN ser.service_start_date1 ELSE NULL END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN ser.service_start_date1 ELSE NULL END
		END AS flight_ret_first_date

	-- Service and subservice
	FROM OPA_DEV.DBT_TEST.with_fl_acr_booking_service bk_ser
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_fl_acr_service ser ON bk_ser.sk_service_id = ser.sk_service_id AND bk_ser.service_version = ser.service_version
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_fl_acr_service_element ser_e ON ser.sk_service_id = ser_e.sk_service_id AND ser.service_version = ser_e.service_version

	-- Accom
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_sellstatic sls ON ser.atcom_ser_id = sls.sell_stc_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_staticstock sts ON sls.stc_stk_id = sts.stc_stk_id

	-- Room
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_sellunit su ON ser_e.atcom_sub_ser_id = su.sell_unit_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_staticroom str ON sts.stc_stk_id = str.stc_stk_id AND su.rm_id = str.rm_id

	-- Board
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_usercodes uc_3 ON su.bb_cd_id = uc_3.user_cd_id

	-- Flight
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvroute tir ON ser.atcom_ser_id = tir.trans_inv_route_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transroute tr ON tir.trans_route_id = tr.trans_route_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvroutesector tirs ON tir.trans_inv_route_id = tirs.trans_inv_route_id
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvsector tis ON tirs.trans_inv_sec_id = tis.trans_inv_sec_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_point dpt ON ser.atcom_dep_point_id = dpt.pt_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_point apt ON ser.atcom_arr_point_id = apt.pt_id

	ORDER BY
		bk_ser.sk_booking_id
		,bk_ser.booking_version
		,ser.source_stock_type_code

)
,booking_fact_1 AS (
  SELECT DISTINCT
    CASE WHEN bk.atcom_res_id IS NULL THEN NULL ELSE 'UKATCOM|' || bk.atcom_res_id || '|' || bk.booking_version END AS bk_booking
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS bk_primary_accom
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS bk_primary_room
    ,COALESCE(
      CASE WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
        AND COUNT(DISTINCT bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) > 1
          THEN 'MULTI'
      WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
        AND COUNT(DISTINCT bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = 1
          THEN 'UKATCOM|' || MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      WHEN SUM(bs.flight_out_count) OVER (PARTITION BY bk.atcom_res_id) > 1
        THEN 'MULTI'
        ELSE 'UKATCOM|' || MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      END
    , 'U') AS bk_first_flight
    ,COALESCE(
      CASE WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
          THEN NULL
      WHEN SUM(bs.flight_ret_count) OVER (PARTITION BY bk.atcom_res_id) > 1
        THEN 'MULTI'
        ELSE 'UKATCOM|' || MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      END
    , 'U') AS bk_last_flight
    ,CASE WHEN ofn.cd IS NULL
      THEN 'UKATCOM|U'
      ELSE 'UKATCOM|' || ofn.cd
    END AS bk_source_market
    ,'UKATCOM' AS bk_originating_system
    ,CASE WHEN
        -- Third party flight
        SUM(CASE WHEN bs.tpf_indicator = 'Y' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|3PF'

      WHEN
        -- Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGAF'

      WHEN
        -- Cruise and Flight Package
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) > 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGCF'

      WHEN
        -- Cruise and Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGCAF'

      WHEN
        -- Multi Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMAF'

      WHEN
        -- Multi Cruise and Flight Package
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMCF'

      WHEN
        -- Multi Accommodation and One Cruise and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMACF'

      WHEN
        -- Multi Cruise and One Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMCAF'

      WHEN
        -- Multi Accommodation and Multi Cruise and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMAMCF'

      WHEN
        -- Single Accommodation Only
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCA'

      WHEN
        -- Multi Accommodation Only
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCMA'

      WHEN
        -- Accommodation and Flight Other
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 1
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCOTH'

      WHEN
        -- Flight Only Return Outbound First
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id) < MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTROF'

      WHEN
        -- Flight Only Return Inbound First
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id) < MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTRIF'

      WHEN
        -- Flight only same day return
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id) = MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTSDR'

      WHEN
        -- Flight Only One Way Outbound
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTOBO'

      WHEN
        -- Flight Only One Way Inbound
        SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTIBO'

      WHEN
        -- Single Cruise Only
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|CRU' -- Granular code = 'CRUSGL'

      WHEN
        -- Multi Cruise Only
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|CRU' -- Granular code = 'CRUMLT'

      WHEN
        -- Third party
        SUM(bs.thirdparty_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|TPB' -- Granular code = 'TPB'

      ELSE 'UKATCOM|OTH'
    END AS bk_booking_type
    ,CASE WHEN bk.booking_status IS NULL
      THEN 'U'
      ELSE 'UKATCOM|' || bk.booking_status
    END AS bk_booking_status
    ,bk.atcom_res_id AS source_booking_id
    --,bk.atcom_res_version AS source_booking_version
    ,bk.booking_version AS source_booking_version -- swapped to FL version not Atcom version PiT
    ,COALESCE(CAST(bk.source_created_on AS TIMESTAMP), CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_created_datetime
    ,COALESCE(bk.confirmed_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_confirmed_datetime
    ,COALESCE(bk.cancelled_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_cancelled_datetime
    ,gs.group_season_code AS group_season
    ,CASE WHEN bk.sk_season_id IS NULL OR bk.sk_season_id = -1 OR bk.sk_season_id = -2
      THEN NULL
      ELSE
        CASE WHEN SUBSTRING(bk.sk_season_id, 5, 2) = 01
          THEN 'S' || SUBSTRING(bk.sk_season_id, 3, 2)
          ELSE 'W' || SUBSTRING(bk.sk_season_id, 3, 2)
        END
    END AS sm_season
    ,CASE WHEN uc.cd IS NULL
      THEN NULL
      ELSE 'UKATCOM|' || uc.cd
    END AS channel_code
    ,CASE WHEN uc.name IS NULL
      THEN NULL
      ELSE 'UKATCOM|' || uc.name
    END AS channel_desc
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS booked_board_code
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS booked_board_name
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
      ELSE
        CASE WHEN SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
    END AS multi_room_booking
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      ELSE
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
    END AS number_of_booked_rooms
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
      ELSE
        CASE WHEN COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
    END AS multi_centre_booking
    ,COALESCE(bk.season_date,CAST('2999-12-31 23:59:59.0' AS DATE)) AS departure_date
    ,COALESCE(
      bs.max_multi_center_date,
      bs.max_accom_date,
      bs.max_cruise_date,
      bs.max_flight_date,
      CAST('2999-12-31 23:59:59.0' AS DATE)
    ) AS return_date
    ,CASE WHEN
      COALESCE(bk.season_date, CAST('2999-12-31 23:59:59.0' AS DATE)) = CAST('2999-12-31 23:59:59.0' AS DATE)
    OR
      COALESCE(
        bs.max_multi_center_date,
        bs.max_accom_date,
        bs.max_cruise_date,
        bs.max_flight_date,
        CAST('2999-12-31 23:59:59.0' AS DATE)
      ) = CAST('2999-12-31 23:59:59.0' AS DATE)
    THEN 0
    ELSE
      DATEDIFF('DAY',
        bk.season_date
      ,
        COALESCE(
          bs.max_multi_center_date,
          bs.max_accom_date,
          bs.max_cruise_date,
          bs.max_flight_date)
      )
    END	AS DURATION
    ,COALESCE(bk.number_of_adults, 0) AS std_number_of_booking_adult_pax
    ,COALESCE(bk.number_of_children, 0) AS std_number_of_booking_child_pax
    ,COALESCE(bk.number_of_infants, 0) AS std_number_of_booking_infant_pax
    ,COALESCE(bk.number_of_passengers, 0) AS std_number_of_booking_pax
    ,COALESCE(bk.number_of_adults, 0) AS sm_number_of_booking_adult_pax
    ,0 AS sm_number_of_booking_teenager_pax
    ,COALESCE(bk.number_of_children, 0) AS sm_number_of_booking_child_pax
    ,COALESCE(bk.number_of_infants, 0) AS sm_number_of_booking_infant_pax
    ,COALESCE(bk.number_of_passengers, 0) AS sm_number_of_booking_pax
    ,CASE WHEN COUNT(DISTINCT bs.min_flight_gateway) OVER (PARTITION BY bk.atcom_res_id) > 1
      THEN 'MULTI'
      ELSE MIN(bs.min_flight_gateway) OVER (PARTITION BY bk.atcom_res_id)
    END AS primary_gateway
    -- ,cur.name AS currency
    ,'Insert' AS record_type
    ,COALESCE(bk.effective_from, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS effective_from
    ,COALESCE(
      bk.lead_effective_from
      ,bk.effective_to
      ,CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)
    ) AS effective_to
    ,COALESCE(bk.dwh_created_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS sm_created_datetime
    ,COALESCE(bk.dwh_modified_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS sm_updated_datetime
    ,CAST(CONVERT_TIMEZONE('Europe/London',CURRENT_TIMESTAMP()) AS TIMESTAMP_NTZ) AS dm_created_datetime

  FROM OPA_DEV.DBT_TEST.with_fl_acr_booking bk
  LEFT OUTER JOIN booking_service bs ON bk.sk_booking_id = bs.sk_booking_id AND bk.booking_version = bs.booking_version

  -- Group Season
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_dates gs ON CAST(COALESCE(SUBSTRING(bk.season_date, 1, 4) || SUBSTRING(bk.season_date, 6, 2) || SUBSTRING(bk.season_date, 9, 2), 20991231) AS INTEGER) = gs.bk_date

  -- Market source
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_agent ag ON bk.atcom_agent_id = ag.agt_id

  -- V1.06 Version of source market joins
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_market m ON bk.atcom_market_id = m.mkt_id
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_officename ofn ON m.off_id = ofn.off_name_id

  -- Channel
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_usercodes uc ON ag.agt_tp_id = uc.user_cd_id

  -- Currency
  -- LEFT OUTER JOIN ar_currency cur ON bk.atcom_sell_currency_id = cur.cur_id

  WHERE bk_booking IS NOT NULL
)

SELECT
  bf_1.bk_booking,
  bf_1.bk_primary_accom,
  bf_1.bk_primary_room,
  bf_1.bk_first_flight,
  bf_1.bk_last_flight,
  bf_1.bk_source_market,
  bf_1.bk_originating_system,
  bf_1.bk_booking_type,
  bf_1.bk_booking_status,
  bf_1.source_booking_id,
  bf_1.source_booking_version,
  bf_1.booking_created_datetime,
  bf_1.booking_confirmed_datetime,
  bf_1.booking_cancelled_datetime,
  bf_1.group_season,
  bf_1.sm_season,
  bf_1.channel_code,
  bf_1.channel_desc,
  bf_1.booked_board_code,
  bf_1.booked_board_name,
  bf_1.multi_room_booking,
  bf_1.number_of_booked_rooms,
  bf_1.multi_centre_booking,
  bf_1.departure_date,
  bf_1.return_date,
  bf_1.duration,
  bf_1.std_number_of_booking_adult_pax,
  bf_1.std_number_of_booking_child_pax,
  bf_1.std_number_of_booking_infant_pax,
  bf_1.std_number_of_booking_pax,
  bf_1.sm_number_of_booking_adult_pax,
  bf_1.sm_number_of_booking_teenager_pax,
  bf_1.sm_number_of_booking_child_pax,
  bf_1.sm_number_of_booking_infant_pax,
  bf_1.sm_number_of_booking_pax,
  bf_1.primary_gateway,
  COALESCE(bfm.sm_currency, fx.bk_sm_ccy, 'U') AS sm_currency,
  COALESCE(bfm.sm_revenue, 0) AS sm_revenue,
  COALESCE(bfm.sm_cnx_and_amend_revenue, 0) AS sm_cnx_and_amend_revenue,
  COALESCE(bfm.sm_accommodation_costs, 0) AS sm_accommodation_costs,
  COALESCE(bfm.sm_early_booking_discounts, 0) AS sm_early_booking_discounts,
  COALESCE(bfm.sm_late_booking_discounts, 0) AS sm_late_booking_discounts,
  COALESCE(bfm.sm_flying_costs, 0) AS sm_flying_costs,
  COALESCE(bfm.sm_other_costs, 0) AS sm_other_costs,
  COALESCE(bfm.sm_distribution_costs, 0) AS sm_distribution_costs,
  COALESCE(bfm.sm_non_margin_items, 0) AS sm_non_margin_items,
  COALESCE(bfm.sm_margin, 0) AS sm_margin,
  COALESCE(bfm.smg_currency, fx.bk_smg_ccy, 'U') AS smg_currency,
  COALESCE(bfm.smg_revenue, 0) AS smg_revenue,
  COALESCE(bfm.smg_cnx_and_amend_revenue, 0) AS smg_cnx_and_amend_revenue,
  COALESCE(bfm.smg_accommodation_costs, 0) AS smg_accommodation_costs,
  COALESCE(bfm.smg_early_booking_discounts, 0) AS smg_early_booking_discounts,
  COALESCE(bfm.smg_late_booking_discounts, 0) AS smg_late_booking_discounts,
  COALESCE(bfm.smg_flying_costs, 0) AS smg_flying_costs,
  COALESCE(bfm.smg_other_costs, 0) AS smg_other_costs,
  COALESCE(bfm.smg_distribution_costs, 0) AS smg_distribution_costs,
  COALESCE(bfm.smg_non_margin_items, 0) AS smg_non_margin_items,
  COALESCE(bfm.smg_margin, 0) AS smg_margin,
  COALESCE(bfm.rep_currency, fx.bk_rep_ccy, 'U') AS rep_currency,
  COALESCE(bfm.rep_revenue, 0) AS rep_revenue,
  COALESCE(bfm.rep_cnx_and_amend_revenue, 0) AS rep_cnx_and_amend_revenue,
  COALESCE(bfm.rep_accommodation_costs, 0) AS rep_accommodation_costs,
  COALESCE(bfm.rep_early_booking_discounts, 0) AS rep_early_booking_discounts,
  COALESCE(bfm.rep_late_booking_discounts, 0) AS rep_late_booking_discounts,
  COALESCE(bfm.rep_flying_costs, 0) AS rep_flying_costs,
  COALESCE(bfm.rep_other_costs, 0) AS rep_other_costs,
  COALESCE(bfm.rep_distribution_costs, 0) AS rep_distribution_costs,
  COALESCE(bfm.rep_non_margin_items, 0) AS rep_non_margin_items,
  COALESCE(bfm.rep_margin, 0) AS rep_margin,
  COALESCE(bfm.ffd_flag, 'N') AS ffd_flag,
  bf_1.record_type,
  bf_1.effective_from,
  bf_1.effective_to,
  bf_1.sm_created_datetime,
  bf_1.sm_updated_datetime,
  bf_1.dm_created_datetime,
  CASE WHEN bf_1.source_booking_version = MAX(bf_1.source_booking_version) OVER (PARTITION BY LEFT(bf_1.bk_booking, LENGTH(bf_1.bk_booking) - REGEXP_INSTR(bf_1.bk_booking, '|', 2)))
    THEN 'Y'
    ELSE 'N'
  END AS latest_record_indicator
FROM booking_fact_1 bf_1
LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_booking_fact_margin bfm ON bf_1.bk_booking = bfm.bk_booking
LEFT OUTER JOIN opa_fl_all.source_market sm ON bf_1.bk_source_market = sm.bk_source_market
LEFT OUTER JOIN opa_fl_uk.fx_rates_dim_uk fx
  ON bf_1.sm_season = fx.bk_season
  AND sm.source_market_code = fx.source_market_code
ORDER BY
  bk_booking
  ,source_booking_version
  ,record_type DESC
);
2019-10-01 14:10:54,467 (Thread-1): SQL status: SUCCESS 1 in 2.84 seconds
2019-10-01 14:10:54,467 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:10:54,467 (Thread-1): On v_booking_fact_uk: );
2019-10-01 14:10:54,768 (Thread-1): Snowflake error: 001003 (42000): 018f4156-0031-3e69-0000-0e29015fbfea: SQL compilation error:
syntax error line 1 at position 0 unexpected ')'.
2019-10-01 14:10:54,768 (Thread-1): On v_booking_fact_uk: ROLLBACK
2019-10-01 14:10:54,935 (Thread-1): 14:10:54 | 21 of 21 ERROR creating view model DBT_TEST.v_booking_fact_uk........ [ERROR in 3.62s]
2019-10-01 14:10:55,012 (MainThread): Using snowflake connection "master".
2019-10-01 14:10:55,012 (MainThread): On master: BEGIN
2019-10-01 14:10:55,138 (MainThread): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:10:55,138 (MainThread): On master: COMMIT
2019-10-01 14:10:55,138 (MainThread): Using snowflake connection "master".
2019-10-01 14:10:55,138 (MainThread): On master: COMMIT
2019-10-01 14:10:55,301 (MainThread): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:10:55,301 (MainThread): 14:10:55 | 
2019-10-01 14:10:55,301 (MainThread): 14:10:55 | Finished running 21 view models in 21.42s.
2019-10-01 14:10:55,301 (MainThread): Connection 'master' was left open.
2019-10-01 14:10:55,301 (MainThread): On master: Close
2019-10-01 14:10:55,462 (MainThread): Connection 'v_booking_fact_uk' was left open.
2019-10-01 14:10:55,464 (MainThread): On v_booking_fact_uk: Close
2019-10-01 14:10:55,690 (MainThread): 
2019-10-01 14:10:55,690 (MainThread): Completed with 1 error and 0 warnings:
2019-10-01 14:10:55,690 (MainThread): 
2019-10-01 14:10:55,690 (MainThread): Database Error in model v_booking_fact_uk (models\v_booking_fact_uk.sql)
2019-10-01 14:10:55,690 (MainThread):   001003 (42000): 018f4156-0031-3e69-0000-0e29015fbfea: SQL compilation error:
2019-10-01 14:10:55,690 (MainThread):   syntax error line 1 at position 0 unexpected ')'.
2019-10-01 14:10:55,690 (MainThread):   compiled SQL at target\compiled\dbt_test\v_booking_fact_uk.sql
2019-10-01 14:10:55,690 (MainThread): 
Done. PASS=20 WARN=0 ERROR=1 SKIP=0 TOTAL=21
2019-10-01 14:10:55,690 (MainThread): Flushing usage events
2019-10-01 14:28:20,946 (MainThread): Tracking: tracking
2019-10-01 14:28:20,948 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005CBD188>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005CBD1C8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C8C588>]}
2019-10-01 14:28:21,289 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 14:28:21,292 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: ResourceWarning: unclosed <socket.socket fd=488, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('10.32.130.75', 57927), raddr=('54.174.31.151', 443)>

2019-10-01 14:28:21,297 (MainThread): Error sending message, disabling tracking
2019-10-01 14:28:21,364 (MainThread): Parsing macros\core.sql
2019-10-01 14:28:21,377 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 14:28:21,416 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 14:28:21,428 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 14:28:21,431 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 14:28:21,434 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 14:28:21,438 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 14:28:21,441 (MainThread): Parsing macros\etc\query.sql
2019-10-01 14:28:21,443 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 14:28:21,452 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 14:28:21,460 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 14:28:21,470 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 14:28:21,486 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 14:28:21,507 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 14:28:21,510 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 14:28:21,523 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 14:28:21,530 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 14:28:21,536 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 14:28:21,543 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 14:28:21,546 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 14:28:21,548 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 14:28:21,550 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 14:28:21,553 (MainThread): Parsing macros\adapters.sql
2019-10-01 14:28:21,566 (MainThread): Parsing macros\catalog.sql
2019-10-01 14:28:21,570 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 14:28:21,578 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 14:28:21,581 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 14:28:21,586 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 14:28:21,614 (MainThread): Parsing model.dbt_test.v_booking_fact_uk
2019-10-01 14:28:21,616 (MainThread): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 14:28:21,616 (MainThread): Opening a new connection, currently in state init
2019-10-01 14:28:21,618 (MainThread): c:\python\python37\lib\site-packages\botocore\vendored\requests\models.py:169: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working

2019-10-01 14:28:21,974 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\botocore\\vendored\\requests\\cacert.pem'>

2019-10-01 14:28:21,990 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\certifi\\cacert.pem'>

2019-10-01 14:28:22,626 (MainThread): Parsing model.dbt_test.with_ar_agent
2019-10-01 14:28:22,627 (MainThread): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 14:28:22,627 (MainThread): Re-using an available connection from the pool (formerly v_booking_fact_uk).
2019-10-01 14:28:22,632 (MainThread): Parsing model.dbt_test.with_ar_currency
2019-10-01 14:28:22,633 (MainThread): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 14:28:22,633 (MainThread): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 14:28:22,637 (MainThread): Parsing model.dbt_test.with_ar_market
2019-10-01 14:28:22,638 (MainThread): Acquiring new snowflake connection "with_ar_market".
2019-10-01 14:28:22,639 (MainThread): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 14:28:22,643 (MainThread): Parsing model.dbt_test.with_ar_officename
2019-10-01 14:28:22,644 (MainThread): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 14:28:22,644 (MainThread): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 14:28:22,651 (MainThread): Parsing model.dbt_test.with_ar_point
2019-10-01 14:28:22,654 (MainThread): Acquiring new snowflake connection "with_ar_point".
2019-10-01 14:28:22,654 (MainThread): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 14:28:22,663 (MainThread): Parsing model.dbt_test.with_ar_sellstatic
2019-10-01 14:28:22,665 (MainThread): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 14:28:22,666 (MainThread): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 14:28:22,674 (MainThread): Parsing model.dbt_test.with_ar_sellunit
2019-10-01 14:28:22,676 (MainThread): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 14:28:22,676 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 14:28:22,683 (MainThread): Parsing model.dbt_test.with_ar_staticroom
2019-10-01 14:28:22,684 (MainThread): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 14:28:22,684 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 14:28:22,690 (MainThread): Parsing model.dbt_test.with_ar_staticstock
2019-10-01 14:28:22,691 (MainThread): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 14:28:22,691 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 14:28:22,695 (MainThread): Parsing model.dbt_test.with_ar_transinvroute
2019-10-01 14:28:22,696 (MainThread): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 14:28:22,696 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 14:28:22,701 (MainThread): Parsing model.dbt_test.with_ar_transinvroutesector
2019-10-01 14:28:22,702 (MainThread): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:28:22,702 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 14:28:22,707 (MainThread): Parsing model.dbt_test.with_ar_transinvsector
2019-10-01 14:28:22,708 (MainThread): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 14:28:22,708 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 14:28:22,713 (MainThread): Parsing model.dbt_test.with_ar_transroute
2019-10-01 14:28:22,714 (MainThread): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 14:28:22,714 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 14:28:22,718 (MainThread): Parsing model.dbt_test.with_ar_usercodes
2019-10-01 14:28:22,719 (MainThread): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 14:28:22,719 (MainThread): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 14:28:22,724 (MainThread): Parsing model.dbt_test.with_booking_fact_margin
2019-10-01 14:28:22,725 (MainThread): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 14:28:22,725 (MainThread): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 14:28:22,730 (MainThread): Parsing model.dbt_test.with_dates
2019-10-01 14:28:22,731 (MainThread): Acquiring new snowflake connection "with_dates".
2019-10-01 14:28:22,731 (MainThread): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 14:28:22,736 (MainThread): Parsing model.dbt_test.with_fl_acr_booking
2019-10-01 14:28:22,737 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 14:28:22,737 (MainThread): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 14:28:22,741 (MainThread): Parsing model.dbt_test.with_fl_acr_booking_service
2019-10-01 14:28:22,742 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:28:22,742 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 14:28:22,747 (MainThread): Parsing model.dbt_test.with_fl_acr_service
2019-10-01 14:28:22,748 (MainThread): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 14:28:22,749 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 14:28:22,754 (MainThread): Parsing model.dbt_test.with_fl_acr_service_element
2019-10-01 14:28:22,755 (MainThread): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 14:28:22,755 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 14:28:22,817 (MainThread): Found 21 models, 0 tests, 0 snapshots, 0 analyses, 117 macros, 0 operations, 0 seed files, 0 sources
2019-10-01 14:28:22,820 (MainThread): 
2019-10-01 14:28:22,820 (MainThread): Acquiring new snowflake connection "master".
2019-10-01 14:28:22,821 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 14:28:22,857 (MainThread): Parsing macros\core.sql
2019-10-01 14:28:22,869 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 14:28:22,941 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 14:28:22,954 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 14:28:22,956 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 14:28:22,959 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 14:28:22,963 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 14:28:22,966 (MainThread): Parsing macros\etc\query.sql
2019-10-01 14:28:22,968 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 14:28:22,977 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 14:28:22,986 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 14:28:22,995 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 14:28:23,017 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 14:28:23,037 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 14:28:23,042 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 14:28:23,068 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 14:28:23,082 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 14:28:23,090 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 14:28:23,098 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 14:28:23,102 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 14:28:23,104 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 14:28:23,107 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 14:28:23,110 (MainThread): Parsing macros\adapters.sql
2019-10-01 14:28:23,125 (MainThread): Parsing macros\catalog.sql
2019-10-01 14:28:23,131 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 14:28:23,143 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 14:28:23,148 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 14:28:23,153 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 14:28:23,267 (MainThread): Using snowflake connection "master".
2019-10-01 14:28:23,267 (MainThread): On master: select distinct schema_name
    from OPA_DEV.information_schema.schemata
    where catalog_name ilike 'OPA_DEV'
2019-10-01 14:28:23,771 (MainThread): SQL status: SUCCESS 29 in 0.50 seconds
2019-10-01 14:28:23,858 (MainThread): Using snowflake connection "master".
2019-10-01 14:28:23,858 (MainThread): On master: BEGIN
2019-10-01 14:28:23,989 (MainThread): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:28:23,991 (MainThread): Using snowflake connection "master".
2019-10-01 14:28:23,991 (MainThread): On master: select
      table_catalog as database,
      table_name as name,
      table_schema as schema,
      case when table_type = 'BASE TABLE' then 'table'
           when table_type = 'VIEW' then 'view'
           when table_type = 'MATERIALIZED VIEW' then 'materializedview'
           when table_type = 'EXTERNAL TABLE' then 'externaltable'
           else table_type
      end as table_type
    from OPA_DEV.information_schema.tables
    where table_schema ilike 'dbt_test'
      and table_catalog ilike 'opa_dev'
2019-10-01 14:28:25,064 (MainThread): SQL status: SUCCESS 21 in 1.07 seconds
2019-10-01 14:28:25,117 (MainThread): On master: ROLLBACK
2019-10-01 14:28:25,288 (MainThread): Using snowflake connection "master".
2019-10-01 14:28:25,289 (MainThread): On master: BEGIN
2019-10-01 14:28:25,432 (MainThread): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:28:25,434 (MainThread): On master: COMMIT
2019-10-01 14:28:25,435 (MainThread): Using snowflake connection "master".
2019-10-01 14:28:25,435 (MainThread): On master: COMMIT
2019-10-01 14:28:25,590 (MainThread): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 14:28:25,592 (MainThread): 14:28:25 | Concurrency: 1 threads (target='dev')
2019-10-01 14:28:25,594 (MainThread): 14:28:25 | 
2019-10-01 14:28:25,607 (Thread-1): 14:28:25 | 1 of 21 START view model DBT_TEST.with_ar_agent...................... [RUN]
2019-10-01 14:28:25,609 (Thread-1): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 14:28:25,610 (Thread-1): Opening a new connection, currently in state init
2019-10-01 14:28:25,922 (Thread-1): Compiling model.dbt_test.with_ar_agent
2019-10-01 14:28:25,938 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 14:28:25,987 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 14:28:25,991 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:28:25,991 (Thread-1): On with_ar_agent: BEGIN
2019-10-01 14:28:26,096 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:26,097 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:28:26,097 (Thread-1): On with_ar_agent: create or replace view OPA_DEV.DBT_TEST.with_ar_agent as (
    

SELECT DISTINCT
  ag_1.agt_id
  ,ag_1.def_mkt_id
  ,ag_1.agt_tp_id
FROM opa_stg_uk.ar_agent ag_1
WHERE ag_1.file_dt = (SELECT MAX(ag_2.file_dt) FROM opa_stg_uk.ar_agent ag_2 WHERE ag_1.agt_id = ag_2.agt_id)
  );
2019-10-01 14:28:26,330 (Thread-1): SQL status: SUCCESS 1 in 0.23 seconds
2019-10-01 14:28:26,332 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 14:28:26,333 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:28:26,333 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 14:28:26,432 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:28:26,439 (Thread-1): 14:28:26 | 1 of 21 OK created view model DBT_TEST.with_ar_agent................. [SUCCESS 1 in 0.83s]
2019-10-01 14:28:26,440 (Thread-1): 14:28:26 | 2 of 21 START view model DBT_TEST.with_ar_market..................... [RUN]
2019-10-01 14:28:26,442 (Thread-1): Acquiring new snowflake connection "with_ar_market".
2019-10-01 14:28:26,442 (Thread-1): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 14:28:26,442 (Thread-1): Compiling model.dbt_test.with_ar_market
2019-10-01 14:28:26,447 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_market"
2019-10-01 14:28:26,462 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_market"
2019-10-01 14:28:26,467 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:28:26,467 (Thread-1): On with_ar_market: BEGIN
2019-10-01 14:28:26,567 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:28:26,567 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:28:26,568 (Thread-1): On with_ar_market: create or replace view OPA_DEV.DBT_TEST.with_ar_market as (
    

SELECT DISTINCT
  mk_1.mkt_id
  ,mk_1.off_id
FROM opa_stg_uk.ar_market mk_1
WHERE mk_1.file_dt = (SELECT MAX(mk_2.file_dt) FROM opa_stg_uk.ar_market mk_2 WHERE mk_1.mkt_id = mk_2.mkt_id)
  );
2019-10-01 14:28:26,825 (Thread-1): SQL status: SUCCESS 1 in 0.26 seconds
2019-10-01 14:28:26,828 (Thread-1): On with_ar_market: COMMIT
2019-10-01 14:28:26,828 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:28:26,828 (Thread-1): On with_ar_market: COMMIT
2019-10-01 14:28:26,912 (Thread-1): SQL status: SUCCESS 1 in 0.08 seconds
2019-10-01 14:28:26,917 (Thread-1): 14:28:26 | 2 of 21 OK created view model DBT_TEST.with_ar_market................ [SUCCESS 1 in 0.47s]
2019-10-01 14:28:26,918 (Thread-1): 14:28:26 | 3 of 21 START view model DBT_TEST.with_ar_officename................. [RUN]
2019-10-01 14:28:26,920 (Thread-1): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 14:28:26,920 (Thread-1): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 14:28:26,921 (Thread-1): Compiling model.dbt_test.with_ar_officename
2019-10-01 14:28:26,925 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 14:28:26,939 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 14:28:26,945 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:28:26,945 (Thread-1): On with_ar_officename: BEGIN
2019-10-01 14:28:27,055 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:27,055 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:28:27,055 (Thread-1): On with_ar_officename: create or replace view OPA_DEV.DBT_TEST.with_ar_officename as (
    

SELECT DISTINCT
  ofn_1.off_name_id
  ,ofn_1.cd
  ,ofn_1.name
  -- ,sm.source_market_code
FROM opa_stg_uk.ar_officename ofn_1
-- LEFT OUTER JOIN opa_stg_all.source_market sm ON 'UKATCOM|' || ofn_1.cd = bk_source_market
WHERE ofn_1.file_dt = (SELECT MAX(ofn_2.file_dt) FROM opa_stg_uk.ar_officename ofn_2 WHERE ofn_1.off_name_id = ofn_2.off_name_id)
  );
2019-10-01 14:28:27,275 (Thread-1): SQL status: SUCCESS 1 in 0.22 seconds
2019-10-01 14:28:27,277 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 14:28:27,278 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:28:27,278 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 14:28:27,379 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:28:27,386 (Thread-1): 14:28:27 | 3 of 21 OK created view model DBT_TEST.with_ar_officename............ [SUCCESS 1 in 0.46s]
2019-10-01 14:28:27,387 (Thread-1): 14:28:27 | 4 of 21 START view model DBT_TEST.with_ar_point...................... [RUN]
2019-10-01 14:28:27,390 (Thread-1): Acquiring new snowflake connection "with_ar_point".
2019-10-01 14:28:27,390 (Thread-1): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 14:28:27,391 (Thread-1): Compiling model.dbt_test.with_ar_point
2019-10-01 14:28:27,396 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_point"
2019-10-01 14:28:27,407 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_point"
2019-10-01 14:28:27,411 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:28:27,411 (Thread-1): On with_ar_point: BEGIN
2019-10-01 14:28:27,528 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:28:27,528 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:28:27,528 (Thread-1): On with_ar_point: create or replace view OPA_DEV.DBT_TEST.with_ar_point as (
    

SELECT
  p.pt_id
  ,p.pt_cd
FROM opa_stg_uk.ar_point p
WHERE p.file_dt = (SELECT MAX(p_2.file_dt) FROM opa_stg_uk.ar_point p_2 WHERE p.pt_id = p_2.pt_id)
  );
2019-10-01 14:28:27,786 (Thread-1): SQL status: SUCCESS 1 in 0.26 seconds
2019-10-01 14:28:27,788 (Thread-1): On with_ar_point: COMMIT
2019-10-01 14:28:27,788 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:28:27,789 (Thread-1): On with_ar_point: COMMIT
2019-10-01 14:28:27,905 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:28:27,911 (Thread-1): 14:28:27 | 4 of 21 OK created view model DBT_TEST.with_ar_point................. [SUCCESS 1 in 0.52s]
2019-10-01 14:28:27,912 (Thread-1): 14:28:27 | 5 of 21 START view model DBT_TEST.with_ar_sellstatic................. [RUN]
2019-10-01 14:28:27,912 (Thread-1): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 14:28:27,912 (Thread-1): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 14:28:27,913 (Thread-1): Compiling model.dbt_test.with_ar_sellstatic
2019-10-01 14:28:27,921 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 14:28:27,930 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 14:28:27,934 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:28:27,935 (Thread-1): On with_ar_sellstatic: BEGIN
2019-10-01 14:28:28,042 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:28,043 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:28:28,043 (Thread-1): On with_ar_sellstatic: create or replace view OPA_DEV.DBT_TEST.with_ar_sellstatic as (
    

SELECT
  sls_1.sell_stc_id
  ,sls_1.stc_stk_id
FROM opa_stg_uk.ar_sellstatic sls_1
WHERE sls_1.file_dt = (SELECT MAX(sls_2.file_dt) FROM opa_stg_uk.ar_sellstatic sls_2 WHERE sls_1.sell_stc_id = sls_2.sell_stc_id)
  );
2019-10-01 14:28:28,306 (Thread-1): SQL status: SUCCESS 1 in 0.26 seconds
2019-10-01 14:28:28,310 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 14:28:28,310 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:28:28,311 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 14:28:28,448 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:28:28,464 (Thread-1): 14:28:28 | 5 of 21 OK created view model DBT_TEST.with_ar_sellstatic............ [SUCCESS 1 in 0.55s]
2019-10-01 14:28:28,466 (Thread-1): 14:28:28 | 6 of 21 START view model DBT_TEST.with_ar_sellunit................... [RUN]
2019-10-01 14:28:28,473 (Thread-1): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 14:28:28,473 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 14:28:28,474 (Thread-1): Compiling model.dbt_test.with_ar_sellunit
2019-10-01 14:28:28,483 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 14:28:28,497 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 14:28:28,502 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:28:28,502 (Thread-1): On with_ar_sellunit: BEGIN
2019-10-01 14:28:28,607 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:28,608 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:28:28,608 (Thread-1): On with_ar_sellunit: create or replace view OPA_DEV.DBT_TEST.with_ar_sellunit as (
    

SELECT
  su.sell_unit_id
  ,su.rm_id
  ,su.bb_cd_id
FROM opa_stg_uk.ar_sellunit su
WHERE su.file_dt = (SELECT MAX(su_2.file_dt) FROM opa_stg_uk.ar_sellunit su_2 WHERE su.sell_unit_id = su_2.sell_unit_id)
  );
2019-10-01 14:28:28,862 (Thread-1): SQL status: SUCCESS 1 in 0.25 seconds
2019-10-01 14:28:28,864 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 14:28:28,864 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:28:28,864 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 14:28:28,951 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:28:28,966 (Thread-1): 14:28:28 | 6 of 21 OK created view model DBT_TEST.with_ar_sellunit.............. [SUCCESS 1 in 0.49s]
2019-10-01 14:28:28,970 (Thread-1): 14:28:28 | 7 of 21 START view model DBT_TEST.with_ar_staticroom................. [RUN]
2019-10-01 14:28:28,976 (Thread-1): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 14:28:28,976 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 14:28:28,978 (Thread-1): Compiling model.dbt_test.with_ar_staticroom
2019-10-01 14:28:28,993 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 14:28:29,009 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 14:28:29,014 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:28:29,015 (Thread-1): On with_ar_staticroom: BEGIN
2019-10-01 14:28:29,121 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:29,122 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:28:29,122 (Thread-1): On with_ar_staticroom: create or replace view OPA_DEV.DBT_TEST.with_ar_staticroom as (
    

SELECT
  sr.stc_rm_id
  ,sr.stc_stk_id
  ,sr.rm_id
FROM opa_stg_uk.ar_staticroom sr
WHERE sr.file_dt = (SELECT MAX(sr_2.file_dt) FROM opa_stg_uk.ar_staticroom sr_2 WHERE sr.stc_rm_id = sr_2.stc_rm_id)
  );
2019-10-01 14:28:29,356 (Thread-1): SQL status: SUCCESS 1 in 0.23 seconds
2019-10-01 14:28:29,360 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 14:28:29,361 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:28:29,361 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 14:28:29,454 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:28:29,473 (Thread-1): 14:28:29 | 7 of 21 OK created view model DBT_TEST.with_ar_staticroom............ [SUCCESS 1 in 0.49s]
2019-10-01 14:28:29,476 (Thread-1): 14:28:29 | 8 of 21 START view model DBT_TEST.with_ar_staticstock................ [RUN]
2019-10-01 14:28:29,482 (Thread-1): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 14:28:29,482 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 14:28:29,484 (Thread-1): Compiling model.dbt_test.with_ar_staticstock
2019-10-01 14:28:29,501 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 14:28:29,518 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 14:28:29,524 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:28:29,525 (Thread-1): On with_ar_staticstock: BEGIN
2019-10-01 14:28:29,631 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:29,632 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:28:29,632 (Thread-1): On with_ar_staticstock: create or replace view OPA_DEV.DBT_TEST.with_ar_staticstock as (
    

SELECT
  ss.stc_stk_id
  ,ss.cd
FROM opa_stg_uk.ar_staticstock ss
WHERE ss.file_dt = (SELECT MAX(ss_2.file_dt) FROM opa_stg_uk.ar_staticstock ss_2 WHERE ss.stc_stk_id = ss_2.stc_stk_id)
  );
2019-10-01 14:28:29,898 (Thread-1): SQL status: SUCCESS 1 in 0.27 seconds
2019-10-01 14:28:29,903 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 14:28:29,903 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:28:29,904 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 14:28:30,013 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:30,025 (Thread-1): 14:28:30 | 8 of 21 OK created view model DBT_TEST.with_ar_staticstock........... [SUCCESS 1 in 0.54s]
2019-10-01 14:28:30,026 (Thread-1): 14:28:30 | 9 of 21 START view model DBT_TEST.with_ar_transinvroute.............. [RUN]
2019-10-01 14:28:30,027 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 14:28:30,028 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 14:28:30,029 (Thread-1): Compiling model.dbt_test.with_ar_transinvroute
2019-10-01 14:28:30,044 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 14:28:30,057 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 14:28:30,061 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:28:30,061 (Thread-1): On with_ar_transinvroute: BEGIN
2019-10-01 14:28:30,166 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:28:30,167 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:28:30,168 (Thread-1): On with_ar_transinvroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroute as (
    

SELECT
  tir.trans_inv_route_id
  ,tir.trans_route_id
FROM opa_stg_uk.ar_transinvroute tir
WHERE tir.file_dt = (SELECT MAX(tir_2.file_dt) FROM opa_stg_uk.ar_transinvroute tir_2 WHERE tir.trans_inv_route_id = tir_2.trans_inv_route_id)
  );
2019-10-01 14:28:30,382 (Thread-1): SQL status: SUCCESS 1 in 0.21 seconds
2019-10-01 14:28:30,384 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 14:28:30,384 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:28:30,384 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 14:28:30,493 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:30,508 (Thread-1): 14:28:30 | 9 of 21 OK created view model DBT_TEST.with_ar_transinvroute......... [SUCCESS 1 in 0.48s]
2019-10-01 14:28:30,512 (Thread-1): 14:28:30 | 10 of 21 START view model DBT_TEST.with_ar_transinvroutesector....... [RUN]
2019-10-01 14:28:30,518 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:28:30,519 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 14:28:30,520 (Thread-1): Compiling model.dbt_test.with_ar_transinvroutesector
2019-10-01 14:28:30,528 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 14:28:30,539 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 14:28:30,544 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:28:30,545 (Thread-1): On with_ar_transinvroutesector: BEGIN
2019-10-01 14:28:30,659 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:30,659 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:28:30,659 (Thread-1): On with_ar_transinvroutesector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroutesector as (
    

SELECT
  tirs.trans_inv_route_id
  ,tirs.trans_inv_sec_id
  ,tirs.trans_inv_route_sec_id
FROM opa_stg_uk.ar_transinvroutesector tirs
WHERE tirs.file_dt = (SELECT MAX(tirs_2.file_dt) FROM opa_stg_uk.ar_transinvroutesector tirs_2 WHERE tirs.trans_inv_route_sec_id = tirs_2.trans_inv_route_sec_id)
  );
2019-10-01 14:28:30,934 (Thread-1): SQL status: SUCCESS 1 in 0.27 seconds
2019-10-01 14:28:30,935 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 14:28:30,935 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:28:30,935 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 14:28:31,054 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:28:31,058 (Thread-1): 14:28:31 | 10 of 21 OK created view model DBT_TEST.with_ar_transinvroutesector.. [SUCCESS 1 in 0.54s]
2019-10-01 14:28:31,059 (Thread-1): 14:28:31 | 11 of 21 START view model DBT_TEST.with_ar_transinvsector............ [RUN]
2019-10-01 14:28:31,060 (Thread-1): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 14:28:31,060 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 14:28:31,060 (Thread-1): Compiling model.dbt_test.with_ar_transinvsector
2019-10-01 14:28:31,070 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 14:28:31,083 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 14:28:31,088 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:28:31,088 (Thread-1): On with_ar_transinvsector: BEGIN
2019-10-01 14:28:31,197 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:31,197 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:28:31,198 (Thread-1): On with_ar_transinvsector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvsector as (
    

SELECT
  tis.trans_inv_sec_id
  ,tis.dep_dt_tm
FROM opa_stg_uk.ar_transinvsector tis
WHERE tis.file_dt = (SELECT MAX(tis_2.file_dt) FROM opa_stg_uk.ar_transinvsector tis_2 WHERE tis.trans_inv_sec_id = tis_2.trans_inv_sec_id)
  );
2019-10-01 14:28:31,415 (Thread-1): SQL status: SUCCESS 1 in 0.22 seconds
2019-10-01 14:28:31,417 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 14:28:31,417 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:28:31,417 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 14:28:31,527 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:31,532 (Thread-1): 14:28:31 | 11 of 21 OK created view model DBT_TEST.with_ar_transinvsector....... [SUCCESS 1 in 0.47s]
2019-10-01 14:28:31,533 (Thread-1): 14:28:31 | 12 of 21 START view model DBT_TEST.with_ar_transroute................ [RUN]
2019-10-01 14:28:31,535 (Thread-1): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 14:28:31,535 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 14:28:31,535 (Thread-1): Compiling model.dbt_test.with_ar_transroute
2019-10-01 14:28:31,542 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 14:28:31,551 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 14:28:31,557 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:28:31,557 (Thread-1): On with_ar_transroute: BEGIN
2019-10-01 14:28:31,694 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:28:31,695 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:28:31,695 (Thread-1): On with_ar_transroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transroute as (
    

SELECT
	tr.trans_route_id
	,tr.route_cd
FROM opa_stg_uk.ar_transroute tr
WHERE tr.file_dt = (SELECT MAX(tr_2.file_dt) FROM opa_stg_uk.ar_transroute tr_2 WHERE tr.trans_route_id = tr_2.trans_route_id)
  );
2019-10-01 14:28:31,944 (Thread-1): SQL status: SUCCESS 1 in 0.25 seconds
2019-10-01 14:28:31,948 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 14:28:31,948 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:28:31,949 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 14:28:32,044 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:28:32,053 (Thread-1): 14:28:32 | 12 of 21 OK created view model DBT_TEST.with_ar_transroute........... [SUCCESS 1 in 0.51s]
2019-10-01 14:28:32,054 (Thread-1): 14:28:32 | 13 of 21 START view model DBT_TEST.with_ar_usercodes................. [RUN]
2019-10-01 14:28:32,056 (Thread-1): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 14:28:32,056 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 14:28:32,057 (Thread-1): Compiling model.dbt_test.with_ar_usercodes
2019-10-01 14:28:32,070 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 14:28:32,083 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 14:28:32,088 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:28:32,088 (Thread-1): On with_ar_usercodes: BEGIN
2019-10-01 14:28:32,195 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:32,195 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:28:32,195 (Thread-1): On with_ar_usercodes: create or replace view OPA_DEV.DBT_TEST.with_ar_usercodes as (
    

SELECT DISTINCT
  uc_1.user_cd_id
  ,uc_1.cd
  ,uc_1.name
FROM opa_stg_uk.ar_usercodes uc_1
WHERE uc_1.file_dt = (SELECT MAX(uc_2.file_dt) FROM opa_stg_uk.ar_usercodes uc_2 WHERE uc_1.user_cd_id = uc_2.user_cd_id)
  );
2019-10-01 14:28:32,420 (Thread-1): SQL status: SUCCESS 1 in 0.22 seconds
2019-10-01 14:28:32,424 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 14:28:32,424 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:28:32,425 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 14:28:32,536 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:32,543 (Thread-1): 14:28:32 | 13 of 21 OK created view model DBT_TEST.with_ar_usercodes............ [SUCCESS 1 in 0.48s]
2019-10-01 14:28:32,545 (Thread-1): 14:28:32 | 14 of 21 START view model DBT_TEST.with_booking_fact_margin.......... [RUN]
2019-10-01 14:28:32,548 (Thread-1): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 14:28:32,548 (Thread-1): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 14:28:32,549 (Thread-1): Compiling model.dbt_test.with_booking_fact_margin
2019-10-01 14:28:32,560 (Thread-1): Writing injected SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 14:28:32,568 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 14:28:32,574 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:28:32,574 (Thread-1): On with_booking_fact_margin: BEGIN
2019-10-01 14:28:32,691 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:28:32,692 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:28:32,692 (Thread-1): On with_booking_fact_margin: create or replace view OPA_DEV.DBT_TEST.with_booking_fact_margin as (
    

SELECT
  bff_1.bk_booking
  ,bff_1.ffd_flag
  ,bff_1.sm_currency
  ,bff_1.sm_revenue
  ,bff_1.sm_cnx_and_amend_revenue
  ,bff_1.sm_accommodation_costs
  ,bff_1.sm_early_booking_discounts
  ,bff_1.sm_late_booking_discounts
  ,bff_1.sm_flying_costs
  ,bff_1.sm_other_costs
  ,bff_1.sm_distribution_costs
  ,bff_1.sm_non_margin_items
  ,bff_1.sm_margin
  ,bff_1.smg_currency
  ,bff_1.smg_revenue
  ,bff_1.smg_cnx_and_amend_revenue
  ,bff_1.smg_accommodation_costs
  ,bff_1.smg_early_booking_discounts
  ,bff_1.smg_late_booking_discounts
  ,bff_1.smg_flying_costs
  ,bff_1.smg_other_costs
  ,bff_1.smg_distribution_costs
  ,bff_1.smg_non_margin_items
  ,bff_1.smg_margin
  ,bff_1.rep_currency
  ,bff_1.rep_revenue
  ,bff_1.rep_cnx_and_amend_revenue
  ,bff_1.rep_accommodation_costs
  ,bff_1.rep_early_booking_discounts
  ,bff_1.rep_late_booking_discounts
  ,bff_1.rep_flying_costs
  ,bff_1.rep_other_costs
  ,bff_1.rep_distribution_costs
  ,bff_1.rep_non_margin_items
  ,bff_1.rep_margin
FROM opa_fl_uk.v_booking_fact_margin_uk bff_1
  );
2019-10-01 14:28:33,181 (Thread-1): SQL status: SUCCESS 1 in 0.49 seconds
2019-10-01 14:28:33,187 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 14:28:33,188 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:28:33,188 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 14:28:33,339 (Thread-1): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 14:28:33,348 (Thread-1): 14:28:33 | 14 of 21 OK created view model DBT_TEST.with_booking_fact_margin..... [SUCCESS 1 in 0.80s]
2019-10-01 14:28:33,350 (Thread-1): 14:28:33 | 15 of 21 START view model DBT_TEST.with_dates........................ [RUN]
2019-10-01 14:28:33,352 (Thread-1): Acquiring new snowflake connection "with_dates".
2019-10-01 14:28:33,353 (Thread-1): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 14:28:33,354 (Thread-1): Compiling model.dbt_test.with_dates
2019-10-01 14:28:33,366 (Thread-1): Writing injected SQL for node "model.dbt_test.with_dates"
2019-10-01 14:28:33,380 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_dates"
2019-10-01 14:28:33,385 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:28:33,385 (Thread-1): On with_dates: BEGIN
2019-10-01 14:28:33,508 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:28:33,509 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:28:33,509 (Thread-1): On with_dates: create or replace view OPA_DEV.DBT_TEST.with_dates as (
    


SELECT
	dd.bk_date
	,dd.group_season_code
FROM opa_stg_all.date_dim dd
  );
2019-10-01 14:28:33,874 (Thread-1): SQL status: SUCCESS 1 in 0.37 seconds
2019-10-01 14:28:33,875 (Thread-1): On with_dates: COMMIT
2019-10-01 14:28:33,876 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:28:33,876 (Thread-1): On with_dates: COMMIT
2019-10-01 14:28:33,958 (Thread-1): SQL status: SUCCESS 1 in 0.08 seconds
2019-10-01 14:28:33,963 (Thread-1): 14:28:33 | 15 of 21 OK created view model DBT_TEST.with_dates................... [SUCCESS 1 in 0.61s]
2019-10-01 14:28:33,964 (Thread-1): 14:28:33 | 16 of 21 START view model DBT_TEST.with_fl_acr_booking............... [RUN]
2019-10-01 14:28:33,965 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 14:28:33,966 (Thread-1): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 14:28:33,966 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking
2019-10-01 14:28:33,973 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 14:28:33,985 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 14:28:33,992 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:28:33,992 (Thread-1): On with_fl_acr_booking: BEGIN
2019-10-01 14:28:34,112 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:28:34,113 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:28:34,113 (Thread-1): On with_fl_acr_booking: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking as (
    

SELECT
  bk_1.sk_booking_id
  ,bk_1.booking_version
  ,bk_1.atcom_res_id
  ,bk_1.atcom_res_version
  ,bk_1.atcom_market_id -- CG ADDED in V1.06 for new Source Market Derivation
  ,bk_1.number_of_adults
  ,bk_1.number_of_children
  ,bk_1.number_of_infants
  ,bk_1.number_of_passengers
  ,bk_1.sk_season_id
  ,bk_1.booking_status
  ,bk_1.atcom_agent_id
  ,bk_1.atcom_sell_currency_id
  ,bk_1.season_date
  ,bk_1.confirmed_on
  ,bk_1.cancelled_on
  ,bk_1.source_created_on
  ,bk_1.modified_on
  ,bk_1.effective_from
  ,DATEADD('second', -1, LEAD(bk_1.effective_from) OVER (PARTITION BY bk_1.sk_booking_id ORDER BY bk_1.booking_version)) AS lead_effective_from
  ,bk_1.effective_to
  ,bk_1.dwh_created_on
  ,bk_1.dwh_modified_on

FROM opa_stg_uk.fl_acr_booking bk_1
WHERE bk_1.file_dt = (SELECT MAX(bk_2.file_dt) FROM opa_stg_uk.fl_acr_booking bk_2 WHERE bk_1.sk_booking_id = bk_2.sk_booking_id AND bk_1.booking_version = bk_2.booking_version)
AND bk_1.booking_version = (SELECT MAX(bk_3.booking_version) FROM opa_stg_uk.fl_acr_booking bk_3 WHERE bk_1.sk_booking_id = bk_3.sk_booking_id)
AND (bk_1.sk_season_id > 201701 OR bk_1.sk_booking_id IS NULL)

-- To be removed when running against all bookings
AND bk_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 14:28:34,366 (Thread-1): SQL status: SUCCESS 1 in 0.25 seconds
2019-10-01 14:28:34,369 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 14:28:34,370 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:28:34,370 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 14:28:34,520 (Thread-1): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 14:28:34,530 (Thread-1): 14:28:34 | 16 of 21 OK created view model DBT_TEST.with_fl_acr_booking.......... [SUCCESS 1 in 0.56s]
2019-10-01 14:28:34,533 (Thread-1): 14:28:34 | 17 of 21 START view model DBT_TEST.with_fl_acr_booking_service....... [RUN]
2019-10-01 14:28:34,536 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:28:34,536 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 14:28:34,537 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking_service
2019-10-01 14:28:34,545 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 14:28:34,553 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 14:28:34,558 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:28:34,559 (Thread-1): On with_fl_acr_booking_service: BEGIN
2019-10-01 14:28:34,678 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:28:34,678 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:28:34,678 (Thread-1): On with_fl_acr_booking_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking_service as (
    

SELECT
  bk_ser_1.sk_booking_service_id
  ,bk_ser_1.sk_booking_id
  ,bk_ser_1.sk_service_id
  ,bk_ser_1.service_version
  ,bk_ser_1.booking_version
FROM opa_stg_uk.fl_acr_booking_service bk_ser_1
WHERE bk_ser_1.file_dt = (SELECT MAX(bk_ser_2.file_dt) FROM opa_stg_uk.fl_acr_booking_service bk_ser_2 WHERE bk_ser_1.sk_booking_service_id = bk_ser_2.sk_booking_service_id)
AND bk_ser_1.booking_version = (SELECT MAX(bk_ser_3.booking_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_3 WHERE bk_ser_1.sk_booking_id = bk_ser_3.sk_booking_id)
AND bk_ser_1.service_version = (SELECT MAX(bk_ser_4.service_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_4 WHERE bk_ser_1.sk_service_id = bk_ser_4.sk_service_id)

-- To be removed when running against all bookings
AND bk_ser_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 14:28:34,939 (Thread-1): SQL status: SUCCESS 1 in 0.26 seconds
2019-10-01 14:28:34,946 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 14:28:34,948 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:28:34,948 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 14:28:35,052 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:28:35,075 (Thread-1): 14:28:35 | 17 of 21 OK created view model DBT_TEST.with_fl_acr_booking_service.. [SUCCESS 1 in 0.53s]
2019-10-01 14:28:35,078 (Thread-1): 14:28:35 | 18 of 21 START view model DBT_TEST.with_fl_acr_service............... [RUN]
2019-10-01 14:28:35,082 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 14:28:35,083 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 14:28:35,084 (Thread-1): Compiling model.dbt_test.with_fl_acr_service
2019-10-01 14:28:35,095 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 14:28:35,113 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 14:28:35,117 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:28:35,118 (Thread-1): On with_fl_acr_service: BEGIN
2019-10-01 14:28:35,228 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:35,229 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:28:35,229 (Thread-1): On with_fl_acr_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service as (
    

SELECT
  ser_1.sk_service_id
  ,ser_1.atcom_ser_id
  ,ser_1.atcom_dep_point_id
  ,ser_1.service_version
  ,ser_1.service_status
  ,ser_1.direction
  ,ser_1.sell_type
  ,ser_1.service_type
  ,ser_1.flight_type_code
  ,ser_1.service_start_date1
  ,ser_1.service_end_date1
  ,ser_1.departure_flight_number
  ,ser_1.atcom_arr_point_id
  ,ser_1.source_stock_type_code
FROM opa_stg_uk.fl_acr_service ser_1
WHERE ser_1.file_dt = (SELECT MAX(ser_2.file_dt) FROM opa_stg_uk.fl_acr_service ser_2 WHERE ser_1.sk_service_id = ser_2.sk_service_id AND ser_1.service_version = ser_2.service_version)
  );
2019-10-01 14:28:35,483 (Thread-1): SQL status: SUCCESS 1 in 0.25 seconds
2019-10-01 14:28:35,486 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 14:28:35,487 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:28:35,487 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 14:28:35,602 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:35,610 (Thread-1): 14:28:35 | 18 of 21 OK created view model DBT_TEST.with_fl_acr_service.......... [SUCCESS 1 in 0.53s]
2019-10-01 14:28:35,611 (Thread-1): 14:28:35 | 19 of 21 START view model DBT_TEST.with_fl_acr_service_element....... [RUN]
2019-10-01 14:28:35,614 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 14:28:35,615 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 14:28:35,615 (Thread-1): Compiling model.dbt_test.with_fl_acr_service_element
2019-10-01 14:28:35,622 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 14:28:35,631 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 14:28:35,635 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:28:35,635 (Thread-1): On with_fl_acr_service_element: BEGIN
2019-10-01 14:28:35,796 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:28:35,796 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:28:35,796 (Thread-1): On with_fl_acr_service_element: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service_element as (
    

SELECT
  ser_e_1.sk_service_id
  ,ser_e_1.service_version
  ,ser_e_1.atcom_sub_ser_id
FROM opa_stg_uk.fl_acr_service_element ser_e_1
WHERE ser_e_1.file_dt = (SELECT MAX(ser_e_2.file_dt) FROM opa_stg_uk.fl_acr_service_element ser_e_2 WHERE ser_e_1.sk_service_element_id = ser_e_2.sk_service_element_id)
  );
2019-10-01 14:28:36,052 (Thread-1): SQL status: SUCCESS 1 in 0.26 seconds
2019-10-01 14:28:36,054 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 14:28:36,055 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:28:36,055 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 14:28:36,150 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:28:36,159 (Thread-1): 14:28:36 | 19 of 21 OK created view model DBT_TEST.with_fl_acr_service_element.. [SUCCESS 1 in 0.54s]
2019-10-01 14:28:36,160 (Thread-1): 14:28:36 | 20 of 21 START view model DBT_TEST.with_ar_currency.................. [RUN]
2019-10-01 14:28:36,162 (Thread-1): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 14:28:36,162 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 14:28:36,162 (Thread-1): Compiling model.dbt_test.with_ar_currency
2019-10-01 14:28:36,169 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 14:28:36,179 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 14:28:36,182 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:28:36,183 (Thread-1): On with_ar_currency: BEGIN
2019-10-01 14:28:36,295 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:36,296 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:28:36,296 (Thread-1): On with_ar_currency: create or replace view OPA_DEV.DBT_TEST.with_ar_currency as (
    

SELECT DISTINCT
  cur_1.cur_id
  ,cur_1.cd
  ,cur_1.name
FROM opa_stg_uk.ar_currency cur_1
WHERE cur_1.file_dt = (SELECT MAX(cur_2.file_dt) FROM opa_stg_uk.ar_currency cur_2 WHERE cur_1.cur_id = cur_2.cur_id)
  );
2019-10-01 14:28:36,506 (Thread-1): SQL status: SUCCESS 1 in 0.21 seconds
2019-10-01 14:28:36,508 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 14:28:36,508 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:28:36,508 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 14:28:36,615 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:36,619 (Thread-1): 14:28:36 | 20 of 21 OK created view model DBT_TEST.with_ar_currency............. [SUCCESS 1 in 0.46s]
2019-10-01 14:28:36,620 (Thread-1): 14:28:36 | 21 of 21 START view model DBT_TEST.v_booking_fact_uk................. [RUN]
2019-10-01 14:28:36,623 (Thread-1): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 14:28:36,623 (Thread-1): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 14:28:36,624 (Thread-1): Compiling model.dbt_test.v_booking_fact_uk
2019-10-01 14:28:36,668 (Thread-1): Writing injected SQL for node "model.dbt_test.v_booking_fact_uk"
2019-10-01 14:28:36,703 (Thread-1): Writing runtime SQL for node "model.dbt_test.v_booking_fact_uk"
2019-10-01 14:28:36,830 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:28:36,830 (Thread-1): On v_booking_fact_uk: BEGIN
2019-10-01 14:28:36,939 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:36,939 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:28:36,940 (Thread-1): On v_booking_fact_uk: create or replace view OPA_DEV.DBT_TEST.v_booking_fact_uk as (
    

WITH booking_service AS (
	SELECT
		bk_ser.sk_booking_id
		,bk_ser.booking_version
		,bk_ser.sk_service_id
		,bk_ser.service_version
		,bk_ser.sk_booking_service_id
		,ser.service_type
		,ser.source_stock_type_code
		,ser.sell_type
		,ser.service_status
		,ser.flight_type_code
		,ser.service_start_date1
		,ser.service_end_date1
		,tis.dep_dt_tm
		,ser.departure_flight_number
		,ser.direction
		,tr.route_cd
		,dpt.pt_cd
		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN apt.pt_cd
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				AND ser.service_status = 'CON'
				THEN apt.pt_cd
				ELSE NULL
			END
		END AS min_flight_gateway

		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
					AND ser.service_status = 'CON'
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		END	AS min_flight_id

		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MAX(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MAX(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
					AND ser.service_status = 'CON'
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		END AS max_flight_id


		-- MULTICENTRE
		,CASE WHEN
			-- All multicentre services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END	AS min_multi_center_date

		,CASE WHEN
			-- All multicentre services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS max_multi_center_date


		-- ACCOM
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU'))
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_accom_date
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU'))
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS max_accom_date


		-- CRUISE
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_cruise_date
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END max_cruise_date


		-- FLIGHT
		,CASE WHEN
			-- All flight services cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_flight_date
		,CASE WHEN
			-- All flight services cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END	AS max_flight_date

		,sts.cd AS accom
		,su.bb_cd_id AS board_cd
		,uc_3.name AS board_name
		,str.stc_rm_id AS room

		-- Booking type derivation part 1
		,CASE WHEN
				-- No outbound flight services on the booking are third party
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
		THEN 0
		ELSE
			CASE WHEN
				-- All outbound flight services are 3PF
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
					+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				=
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

			OR
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
			THEN 1
			ELSE 0
			END
		END AS tpf_out_count
		,CASE WHEN
				-- No outbound flight services on the booking are third party
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
		THEN 0
		ELSE
			CASE WHEN
				-- All outbound flight services are 3PF
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
					+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				=
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

			OR
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
			THEN 1
			ELSE 0
			END
		END AS tpf_in_count
		,CASE WHEN
				CASE WHEN
						-- No outbound flight services on the booking are third party
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
				THEN 0
				ELSE
					CASE WHEN
						-- All outbound flight services are 3PF
						SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
							+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
						=
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

					OR
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
					THEN 1
					ELSE 0
					END
				END
			+
				CASE WHEN
						-- No outbound flight services on the booking are third party
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
				THEN 0
				ELSE
					CASE WHEN
						-- All outbound flight services are 3PF
						SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
							+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
						=
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

					OR
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
					THEN 1
					ELSE 0
					END
				END
		> 0
			THEN 'Y'
			ELSE 'N'
		END AS tpf_indicator
		,CASE WHEN
				-- All accom cancelled
				SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS accom_count
		,CASE WHEN
				-- All cruise cancelled
				SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS cruise_count
		,CASE WHEN
				-- All flight out cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS flight_out_count
		,CASE WHEN
				-- All flight in cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS flight_ret_count
		,CASE WHEN
				-- All ahoc services cancelled
				SUM(CASE WHEN ser.service_type = 'AHOC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'AHOC' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'AHOC' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS thirdparty_count

		,CASE WHEN
				-- All flight out first date cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN ser.service_start_date1 ELSE NULL END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN ser.service_start_date1 ELSE NULL END
		END AS flight_out_first_date
		,CASE WHEN
				-- All flight in first date cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN ser.service_start_date1 ELSE NULL END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN ser.service_start_date1 ELSE NULL END
		END AS flight_ret_first_date

	-- Service and subservice
	FROM OPA_DEV.DBT_TEST.with_fl_acr_booking_service bk_ser
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_fl_acr_service ser ON bk_ser.sk_service_id = ser.sk_service_id AND bk_ser.service_version = ser.service_version
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_fl_acr_service_element ser_e ON ser.sk_service_id = ser_e.sk_service_id AND ser.service_version = ser_e.service_version

	-- Accom
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_sellstatic sls ON ser.atcom_ser_id = sls.sell_stc_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_staticstock sts ON sls.stc_stk_id = sts.stc_stk_id

	-- Room
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_sellunit su ON ser_e.atcom_sub_ser_id = su.sell_unit_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_staticroom str ON sts.stc_stk_id = str.stc_stk_id AND su.rm_id = str.rm_id

	-- Board
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_usercodes uc_3 ON su.bb_cd_id = uc_3.user_cd_id

	-- Flight
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvroute tir ON ser.atcom_ser_id = tir.trans_inv_route_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transroute tr ON tir.trans_route_id = tr.trans_route_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvroutesector tirs ON tir.trans_inv_route_id = tirs.trans_inv_route_id
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvsector tis ON tirs.trans_inv_sec_id = tis.trans_inv_sec_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_point dpt ON ser.atcom_dep_point_id = dpt.pt_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_point apt ON ser.atcom_arr_point_id = apt.pt_id

	ORDER BY
		bk_ser.sk_booking_id
		,bk_ser.booking_version
		,ser.source_stock_type_code

)
,booking_fact_1 AS (
  SELECT DISTINCT
    CASE WHEN bk.atcom_res_id IS NULL THEN NULL ELSE 'UKATCOM|' || bk.atcom_res_id || '|' || bk.booking_version END AS bk_booking
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS bk_primary_accom
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS bk_primary_room
    ,COALESCE(
      CASE WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
        AND COUNT(DISTINCT bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) > 1
          THEN 'MULTI'
      WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
        AND COUNT(DISTINCT bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = 1
          THEN 'UKATCOM|' || MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      WHEN SUM(bs.flight_out_count) OVER (PARTITION BY bk.atcom_res_id) > 1
        THEN 'MULTI'
        ELSE 'UKATCOM|' || MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      END
    , 'U') AS bk_first_flight
    ,COALESCE(
      CASE WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
          THEN NULL
      WHEN SUM(bs.flight_ret_count) OVER (PARTITION BY bk.atcom_res_id) > 1
        THEN 'MULTI'
        ELSE 'UKATCOM|' || MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      END
    , 'U') AS bk_last_flight
    ,CASE WHEN ofn.cd IS NULL
      THEN 'UKATCOM|U'
      ELSE 'UKATCOM|' || ofn.cd
    END AS bk_source_market
    ,'UKATCOM' AS bk_originating_system
    ,CASE WHEN
        -- Third party flight
        SUM(CASE WHEN bs.tpf_indicator = 'Y' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|3PF'

      WHEN
        -- Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGAF'

      WHEN
        -- Cruise and Flight Package
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) > 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGCF'

      WHEN
        -- Cruise and Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGCAF'

      WHEN
        -- Multi Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMAF'

      WHEN
        -- Multi Cruise and Flight Package
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMCF'

      WHEN
        -- Multi Accommodation and One Cruise and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMACF'

      WHEN
        -- Multi Cruise and One Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMCAF'

      WHEN
        -- Multi Accommodation and Multi Cruise and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMAMCF'

      WHEN
        -- Single Accommodation Only
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCA'

      WHEN
        -- Multi Accommodation Only
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCMA'

      WHEN
        -- Accommodation and Flight Other
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 1
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCOTH'

      WHEN
        -- Flight Only Return Outbound First
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id) < MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTROF'

      WHEN
        -- Flight Only Return Inbound First
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id) < MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTRIF'

      WHEN
        -- Flight only same day return
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id) = MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTSDR'

      WHEN
        -- Flight Only One Way Outbound
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTOBO'

      WHEN
        -- Flight Only One Way Inbound
        SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTIBO'

      WHEN
        -- Single Cruise Only
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|CRU' -- Granular code = 'CRUSGL'

      WHEN
        -- Multi Cruise Only
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|CRU' -- Granular code = 'CRUMLT'

      WHEN
        -- Third party
        SUM(bs.thirdparty_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|TPB' -- Granular code = 'TPB'

      ELSE 'UKATCOM|OTH'
    END AS bk_booking_type
    ,CASE WHEN bk.booking_status IS NULL
      THEN 'U'
      ELSE 'UKATCOM|' || bk.booking_status
    END AS bk_booking_status
    ,bk.atcom_res_id AS source_booking_id
    --,bk.atcom_res_version AS source_booking_version
    ,bk.booking_version AS source_booking_version -- swapped to FL version not Atcom version PiT
    ,COALESCE(CAST(bk.source_created_on AS TIMESTAMP), CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_created_datetime
    ,COALESCE(bk.confirmed_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_confirmed_datetime
    ,COALESCE(bk.cancelled_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_cancelled_datetime
    ,gs.group_season_code AS group_season
    ,CASE WHEN bk.sk_season_id IS NULL OR bk.sk_season_id = -1 OR bk.sk_season_id = -2
      THEN NULL
      ELSE
        CASE WHEN SUBSTRING(bk.sk_season_id, 5, 2) = 01
          THEN 'S' || SUBSTRING(bk.sk_season_id, 3, 2)
          ELSE 'W' || SUBSTRING(bk.sk_season_id, 3, 2)
        END
    END AS sm_season
    ,CASE WHEN uc.cd IS NULL
      THEN NULL
      ELSE 'UKATCOM|' || uc.cd
    END AS channel_code
    ,CASE WHEN uc.name IS NULL
      THEN NULL
      ELSE 'UKATCOM|' || uc.name
    END AS channel_desc
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS booked_board_code
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS booked_board_name
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
      ELSE
        CASE WHEN SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
    END AS multi_room_booking
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      ELSE
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
    END AS number_of_booked_rooms
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
      ELSE
        CASE WHEN COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
    END AS multi_centre_booking
    ,COALESCE(bk.season_date,CAST('2999-12-31 23:59:59.0' AS DATE)) AS departure_date
    ,COALESCE(
      bs.max_multi_center_date,
      bs.max_accom_date,
      bs.max_cruise_date,
      bs.max_flight_date,
      CAST('2999-12-31 23:59:59.0' AS DATE)
    ) AS return_date
    ,CASE WHEN
      COALESCE(bk.season_date, CAST('2999-12-31 23:59:59.0' AS DATE)) = CAST('2999-12-31 23:59:59.0' AS DATE)
    OR
      COALESCE(
        bs.max_multi_center_date,
        bs.max_accom_date,
        bs.max_cruise_date,
        bs.max_flight_date,
        CAST('2999-12-31 23:59:59.0' AS DATE)
      ) = CAST('2999-12-31 23:59:59.0' AS DATE)
    THEN 0
    ELSE
      DATEDIFF('DAY',
        bk.season_date
      ,
        COALESCE(
          bs.max_multi_center_date,
          bs.max_accom_date,
          bs.max_cruise_date,
          bs.max_flight_date)
      )
    END	AS DURATION
    ,COALESCE(bk.number_of_adults, 0) AS std_number_of_booking_adult_pax
    ,COALESCE(bk.number_of_children, 0) AS std_number_of_booking_child_pax
    ,COALESCE(bk.number_of_infants, 0) AS std_number_of_booking_infant_pax
    ,COALESCE(bk.number_of_passengers, 0) AS std_number_of_booking_pax
    ,COALESCE(bk.number_of_adults, 0) AS sm_number_of_booking_adult_pax
    ,0 AS sm_number_of_booking_teenager_pax
    ,COALESCE(bk.number_of_children, 0) AS sm_number_of_booking_child_pax
    ,COALESCE(bk.number_of_infants, 0) AS sm_number_of_booking_infant_pax
    ,COALESCE(bk.number_of_passengers, 0) AS sm_number_of_booking_pax
    ,CASE WHEN COUNT(DISTINCT bs.min_flight_gateway) OVER (PARTITION BY bk.atcom_res_id) > 1
      THEN 'MULTI'
      ELSE MIN(bs.min_flight_gateway) OVER (PARTITION BY bk.atcom_res_id)
    END AS primary_gateway
    -- ,cur.name AS currency
    ,'Insert' AS record_type
    ,COALESCE(bk.effective_from, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS effective_from
    ,COALESCE(
      bk.lead_effective_from
      ,bk.effective_to
      ,CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)
    ) AS effective_to
    ,COALESCE(bk.dwh_created_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS sm_created_datetime
    ,COALESCE(bk.dwh_modified_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS sm_updated_datetime
    ,CAST(CONVERT_TIMEZONE('Europe/London',CURRENT_TIMESTAMP()) AS TIMESTAMP_NTZ) AS dm_created_datetime

  FROM OPA_DEV.DBT_TEST.with_fl_acr_booking bk
  LEFT OUTER JOIN booking_service bs ON bk.sk_booking_id = bs.sk_booking_id AND bk.booking_version = bs.booking_version

  -- Group Season
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_dates gs ON CAST(COALESCE(SUBSTRING(bk.season_date, 1, 4) || SUBSTRING(bk.season_date, 6, 2) || SUBSTRING(bk.season_date, 9, 2), 20991231) AS INTEGER) = gs.bk_date

  -- Market source
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_agent ag ON bk.atcom_agent_id = ag.agt_id

  -- V1.06 Version of source market joins
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_market m ON bk.atcom_market_id = m.mkt_id
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_officename ofn ON m.off_id = ofn.off_name_id

  -- Channel
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_usercodes uc ON ag.agt_tp_id = uc.user_cd_id

  -- Currency
  -- LEFT OUTER JOIN ar_currency cur ON bk.atcom_sell_currency_id = cur.cur_id

  WHERE bk_booking IS NOT NULL
)

SELECT
  bf_1.bk_booking,
  bf_1.bk_primary_accom,
  bf_1.bk_primary_room,
  bf_1.bk_first_flight,
  bf_1.bk_last_flight,
  bf_1.bk_source_market,
  bf_1.bk_originating_system,
  bf_1.bk_booking_type,
  bf_1.bk_booking_status,
  bf_1.source_booking_id,
  bf_1.source_booking_version,
  bf_1.booking_created_datetime,
  bf_1.booking_confirmed_datetime,
  bf_1.booking_cancelled_datetime,
  bf_1.group_season,
  bf_1.sm_season,
  bf_1.channel_code,
  bf_1.channel_desc,
  bf_1.booked_board_code,
  bf_1.booked_board_name,
  bf_1.multi_room_booking,
  bf_1.number_of_booked_rooms,
  bf_1.multi_centre_booking,
  bf_1.departure_date,
  bf_1.return_date,
  bf_1.duration,
  bf_1.std_number_of_booking_adult_pax,
  bf_1.std_number_of_booking_child_pax,
  bf_1.std_number_of_booking_infant_pax,
  bf_1.std_number_of_booking_pax,
  bf_1.sm_number_of_booking_adult_pax,
  bf_1.sm_number_of_booking_teenager_pax,
  bf_1.sm_number_of_booking_child_pax,
  bf_1.sm_number_of_booking_infant_pax,
  bf_1.sm_number_of_booking_pax,
  bf_1.primary_gateway,
  COALESCE(bfm.sm_currency, fx.bk_sm_ccy, 'U') AS sm_currency,
  COALESCE(bfm.sm_revenue, 0) AS sm_revenue,
  COALESCE(bfm.sm_cnx_and_amend_revenue, 0) AS sm_cnx_and_amend_revenue,
  COALESCE(bfm.sm_accommodation_costs, 0) AS sm_accommodation_costs,
  COALESCE(bfm.sm_early_booking_discounts, 0) AS sm_early_booking_discounts,
  COALESCE(bfm.sm_late_booking_discounts, 0) AS sm_late_booking_discounts,
  COALESCE(bfm.sm_flying_costs, 0) AS sm_flying_costs,
  COALESCE(bfm.sm_other_costs, 0) AS sm_other_costs,
  COALESCE(bfm.sm_distribution_costs, 0) AS sm_distribution_costs,
  COALESCE(bfm.sm_non_margin_items, 0) AS sm_non_margin_items,
  COALESCE(bfm.sm_margin, 0) AS sm_margin,
  COALESCE(bfm.smg_currency, fx.bk_smg_ccy, 'U') AS smg_currency,
  COALESCE(bfm.smg_revenue, 0) AS smg_revenue,
  COALESCE(bfm.smg_cnx_and_amend_revenue, 0) AS smg_cnx_and_amend_revenue,
  COALESCE(bfm.smg_accommodation_costs, 0) AS smg_accommodation_costs,
  COALESCE(bfm.smg_early_booking_discounts, 0) AS smg_early_booking_discounts,
  COALESCE(bfm.smg_late_booking_discounts, 0) AS smg_late_booking_discounts,
  COALESCE(bfm.smg_flying_costs, 0) AS smg_flying_costs,
  COALESCE(bfm.smg_other_costs, 0) AS smg_other_costs,
  COALESCE(bfm.smg_distribution_costs, 0) AS smg_distribution_costs,
  COALESCE(bfm.smg_non_margin_items, 0) AS smg_non_margin_items,
  COALESCE(bfm.smg_margin, 0) AS smg_margin,
  COALESCE(bfm.rep_currency, fx.bk_rep_ccy, 'U') AS rep_currency,
  COALESCE(bfm.rep_revenue, 0) AS rep_revenue,
  COALESCE(bfm.rep_cnx_and_amend_revenue, 0) AS rep_cnx_and_amend_revenue,
  COALESCE(bfm.rep_accommodation_costs, 0) AS rep_accommodation_costs,
  COALESCE(bfm.rep_early_booking_discounts, 0) AS rep_early_booking_discounts,
  COALESCE(bfm.rep_late_booking_discounts, 0) AS rep_late_booking_discounts,
  COALESCE(bfm.rep_flying_costs, 0) AS rep_flying_costs,
  COALESCE(bfm.rep_other_costs, 0) AS rep_other_costs,
  COALESCE(bfm.rep_distribution_costs, 0) AS rep_distribution_costs,
  COALESCE(bfm.rep_non_margin_items, 0) AS rep_non_margin_items,
  COALESCE(bfm.rep_margin, 0) AS rep_margin,
  COALESCE(bfm.ffd_flag, 'N') AS ffd_flag,
  bf_1.record_type,
  bf_1.effective_from,
  bf_1.effective_to,
  bf_1.sm_created_datetime,
  bf_1.sm_updated_datetime,
  bf_1.dm_created_datetime,
  CASE WHEN bf_1.source_booking_version = MAX(bf_1.source_booking_version) OVER (PARTITION BY LEFT(bf_1.bk_booking, LENGTH(bf_1.bk_booking) - REGEXP_INSTR(bf_1.bk_booking, '|', 2)))
    THEN 'Y'
    ELSE 'N'
  END AS latest_record_indicator
FROM booking_fact_1 bf_1
LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_booking_fact_margin bfm ON bf_1.bk_booking = bfm.bk_booking
LEFT OUTER JOIN opa_fl_all.source_market sm ON bf_1.bk_source_market = sm.bk_source_market
LEFT OUTER JOIN opa_fl_uk.fx_rates_dim_uk fx
  ON bf_1.sm_season = fx.bk_season
  AND sm.source_market_code = fx.source_market_code
ORDER BY
  bk_booking
  ,source_booking_version
  ,record_type DESC
;
2019-10-01 14:28:37,169 (Thread-1): Snowflake error: 001003 (42000): 018f4168-00fb-6626-0000-0e29015fe866: SQL compilation error:
syntax error line 1,093 at position 0 unexpected ';'.
2019-10-01 14:28:37,169 (Thread-1): On v_booking_fact_uk: ROLLBACK
2019-10-01 14:28:37,306 (Thread-1): 14:28:37 | 21 of 21 ERROR creating view model DBT_TEST.v_booking_fact_uk........ [ERROR in 0.68s]
2019-10-01 14:28:37,314 (MainThread): Using snowflake connection "master".
2019-10-01 14:28:37,314 (MainThread): On master: BEGIN
2019-10-01 14:28:37,427 (MainThread): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:28:37,428 (MainThread): On master: COMMIT
2019-10-01 14:28:37,428 (MainThread): Using snowflake connection "master".
2019-10-01 14:28:37,428 (MainThread): On master: COMMIT
2019-10-01 14:28:37,652 (MainThread): SQL status: SUCCESS 1 in 0.22 seconds
2019-10-01 14:28:37,652 (MainThread): 14:28:37 | 
2019-10-01 14:28:37,653 (MainThread): 14:28:37 | Finished running 21 view models in 14.83s.
2019-10-01 14:28:37,653 (MainThread): Connection 'master' was left open.
2019-10-01 14:28:37,653 (MainThread): On master: Close
2019-10-01 14:28:37,782 (MainThread): Connection 'v_booking_fact_uk' was left open.
2019-10-01 14:28:37,782 (MainThread): On v_booking_fact_uk: Close
2019-10-01 14:28:38,025 (MainThread): 
2019-10-01 14:28:38,026 (MainThread): Completed with 1 error and 0 warnings:
2019-10-01 14:28:38,027 (MainThread): 
2019-10-01 14:28:38,027 (MainThread): Database Error in model v_booking_fact_uk (models\v_booking_fact_uk.sql)
2019-10-01 14:28:38,029 (MainThread):   001003 (42000): 018f4168-00fb-6626-0000-0e29015fe866: SQL compilation error:
2019-10-01 14:28:38,030 (MainThread):   syntax error line 1,093 at position 0 unexpected ';'.
2019-10-01 14:28:38,030 (MainThread):   compiled SQL at target\compiled\dbt_test\v_booking_fact_uk.sql
2019-10-01 14:28:38,031 (MainThread): 
Done. PASS=20 WARN=0 ERROR=1 SKIP=0 TOTAL=21
2019-10-01 14:28:38,032 (MainThread): Flushing usage events
2019-10-01 14:29:03,111 (MainThread): Tracking: tracking
2019-10-01 14:29:03,113 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005B85708>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C92888>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C6C7C8>]}
2019-10-01 14:29:03,378 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 14:29:03,379 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: ResourceWarning: unclosed <socket.socket fd=488, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('10.32.130.75', 57939), raddr=('54.174.31.151', 443)>

2019-10-01 14:29:03,381 (MainThread): Error sending message, disabling tracking
2019-10-01 14:29:03,420 (MainThread): Parsing macros\core.sql
2019-10-01 14:29:03,433 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 14:29:03,496 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 14:29:03,506 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 14:29:03,508 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 14:29:03,512 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 14:29:03,515 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 14:29:03,518 (MainThread): Parsing macros\etc\query.sql
2019-10-01 14:29:03,521 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 14:29:03,530 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 14:29:03,539 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 14:29:03,556 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 14:29:03,576 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 14:29:03,598 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 14:29:03,602 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 14:29:03,616 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 14:29:03,624 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 14:29:03,632 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 14:29:03,639 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 14:29:03,642 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 14:29:03,645 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 14:29:03,647 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 14:29:03,650 (MainThread): Parsing macros\adapters.sql
2019-10-01 14:29:03,665 (MainThread): Parsing macros\catalog.sql
2019-10-01 14:29:03,669 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 14:29:03,685 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 14:29:03,690 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 14:29:03,699 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 14:29:03,743 (MainThread): Parsing model.dbt_test.v_booking_fact_uk
2019-10-01 14:29:03,745 (MainThread): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 14:29:03,745 (MainThread): Opening a new connection, currently in state init
2019-10-01 14:29:03,747 (MainThread): c:\python\python37\lib\site-packages\botocore\vendored\requests\models.py:169: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working

2019-10-01 14:29:04,003 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\botocore\\vendored\\requests\\cacert.pem'>

2019-10-01 14:29:04,023 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\certifi\\cacert.pem'>

2019-10-01 14:29:04,577 (MainThread): Parsing model.dbt_test.with_ar_agent
2019-10-01 14:29:04,578 (MainThread): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 14:29:04,578 (MainThread): Re-using an available connection from the pool (formerly v_booking_fact_uk).
2019-10-01 14:29:04,582 (MainThread): Parsing model.dbt_test.with_ar_currency
2019-10-01 14:29:04,583 (MainThread): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 14:29:04,583 (MainThread): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 14:29:04,588 (MainThread): Parsing model.dbt_test.with_ar_market
2019-10-01 14:29:04,589 (MainThread): Acquiring new snowflake connection "with_ar_market".
2019-10-01 14:29:04,589 (MainThread): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 14:29:04,593 (MainThread): Parsing model.dbt_test.with_ar_officename
2019-10-01 14:29:04,594 (MainThread): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 14:29:04,595 (MainThread): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 14:29:04,599 (MainThread): Parsing model.dbt_test.with_ar_point
2019-10-01 14:29:04,600 (MainThread): Acquiring new snowflake connection "with_ar_point".
2019-10-01 14:29:04,600 (MainThread): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 14:29:04,607 (MainThread): Parsing model.dbt_test.with_ar_sellstatic
2019-10-01 14:29:04,609 (MainThread): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 14:29:04,609 (MainThread): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 14:29:04,613 (MainThread): Parsing model.dbt_test.with_ar_sellunit
2019-10-01 14:29:04,614 (MainThread): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 14:29:04,615 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 14:29:04,619 (MainThread): Parsing model.dbt_test.with_ar_staticroom
2019-10-01 14:29:04,620 (MainThread): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 14:29:04,620 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 14:29:04,628 (MainThread): Parsing model.dbt_test.with_ar_staticstock
2019-10-01 14:29:04,629 (MainThread): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 14:29:04,629 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 14:29:04,634 (MainThread): Parsing model.dbt_test.with_ar_transinvroute
2019-10-01 14:29:04,635 (MainThread): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 14:29:04,635 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 14:29:04,640 (MainThread): Parsing model.dbt_test.with_ar_transinvroutesector
2019-10-01 14:29:04,641 (MainThread): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:29:04,641 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 14:29:04,645 (MainThread): Parsing model.dbt_test.with_ar_transinvsector
2019-10-01 14:29:04,646 (MainThread): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 14:29:04,646 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 14:29:04,651 (MainThread): Parsing model.dbt_test.with_ar_transroute
2019-10-01 14:29:04,652 (MainThread): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 14:29:04,652 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 14:29:04,660 (MainThread): Parsing model.dbt_test.with_ar_usercodes
2019-10-01 14:29:04,662 (MainThread): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 14:29:04,662 (MainThread): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 14:29:04,667 (MainThread): Parsing model.dbt_test.with_booking_fact_margin
2019-10-01 14:29:04,668 (MainThread): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 14:29:04,668 (MainThread): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 14:29:04,673 (MainThread): Parsing model.dbt_test.with_dates
2019-10-01 14:29:04,674 (MainThread): Acquiring new snowflake connection "with_dates".
2019-10-01 14:29:04,674 (MainThread): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 14:29:04,680 (MainThread): Parsing model.dbt_test.with_fl_acr_booking
2019-10-01 14:29:04,682 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 14:29:04,682 (MainThread): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 14:29:04,689 (MainThread): Parsing model.dbt_test.with_fl_acr_booking_service
2019-10-01 14:29:04,691 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:29:04,691 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 14:29:04,700 (MainThread): Parsing model.dbt_test.with_fl_acr_service
2019-10-01 14:29:04,702 (MainThread): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 14:29:04,702 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 14:29:04,710 (MainThread): Parsing model.dbt_test.with_fl_acr_service_element
2019-10-01 14:29:04,711 (MainThread): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 14:29:04,711 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 14:29:04,805 (MainThread): Found 21 models, 0 tests, 0 snapshots, 0 analyses, 117 macros, 0 operations, 0 seed files, 0 sources
2019-10-01 14:29:04,808 (MainThread): 
2019-10-01 14:29:04,809 (MainThread): Acquiring new snowflake connection "master".
2019-10-01 14:29:04,809 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 14:29:04,848 (MainThread): Parsing macros\core.sql
2019-10-01 14:29:04,861 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 14:29:04,966 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 14:29:04,982 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 14:29:04,986 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 14:29:04,992 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 14:29:04,997 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 14:29:05,001 (MainThread): Parsing macros\etc\query.sql
2019-10-01 14:29:05,006 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 14:29:05,020 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 14:29:05,035 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 14:29:05,050 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 14:29:05,077 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 14:29:05,129 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 14:29:05,135 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 14:29:05,164 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 14:29:05,179 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 14:29:05,193 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 14:29:05,215 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 14:29:05,222 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 14:29:05,227 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 14:29:05,232 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 14:29:05,239 (MainThread): Parsing macros\adapters.sql
2019-10-01 14:29:05,272 (MainThread): Parsing macros\catalog.sql
2019-10-01 14:29:05,279 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 14:29:05,298 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 14:29:05,303 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 14:29:05,313 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 14:29:05,540 (MainThread): Using snowflake connection "master".
2019-10-01 14:29:05,540 (MainThread): On master: select distinct schema_name
    from OPA_DEV.information_schema.schemata
    where catalog_name ilike 'OPA_DEV'
2019-10-01 14:29:06,060 (MainThread): SQL status: SUCCESS 29 in 0.52 seconds
2019-10-01 14:29:06,118 (MainThread): Using snowflake connection "master".
2019-10-01 14:29:06,118 (MainThread): On master: BEGIN
2019-10-01 14:29:06,226 (MainThread): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:29:06,227 (MainThread): Using snowflake connection "master".
2019-10-01 14:29:06,227 (MainThread): On master: select
      table_catalog as database,
      table_name as name,
      table_schema as schema,
      case when table_type = 'BASE TABLE' then 'table'
           when table_type = 'VIEW' then 'view'
           when table_type = 'MATERIALIZED VIEW' then 'materializedview'
           when table_type = 'EXTERNAL TABLE' then 'externaltable'
           else table_type
      end as table_type
    from OPA_DEV.information_schema.tables
    where table_schema ilike 'dbt_test'
      and table_catalog ilike 'opa_dev'
2019-10-01 14:29:07,298 (MainThread): SQL status: SUCCESS 21 in 1.07 seconds
2019-10-01 14:29:07,311 (MainThread): On master: ROLLBACK
2019-10-01 14:29:07,467 (MainThread): Using snowflake connection "master".
2019-10-01 14:29:07,467 (MainThread): On master: BEGIN
2019-10-01 14:29:07,572 (MainThread): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:29:07,572 (MainThread): On master: COMMIT
2019-10-01 14:29:07,573 (MainThread): Using snowflake connection "master".
2019-10-01 14:29:07,573 (MainThread): On master: COMMIT
2019-10-01 14:29:07,713 (MainThread): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:29:07,714 (MainThread): 14:29:07 | Concurrency: 1 threads (target='dev')
2019-10-01 14:29:07,714 (MainThread): 14:29:07 | 
2019-10-01 14:29:07,718 (Thread-1): 14:29:07 | 1 of 21 START view model DBT_TEST.with_ar_agent...................... [RUN]
2019-10-01 14:29:07,719 (Thread-1): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 14:29:07,720 (Thread-1): Opening a new connection, currently in state init
2019-10-01 14:29:08,038 (Thread-1): Compiling model.dbt_test.with_ar_agent
2019-10-01 14:29:08,046 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 14:29:08,110 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 14:29:08,119 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:29:08,121 (Thread-1): On with_ar_agent: BEGIN
2019-10-01 14:29:08,234 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:29:08,235 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:29:08,235 (Thread-1): On with_ar_agent: create or replace view OPA_DEV.DBT_TEST.with_ar_agent as (
    

SELECT DISTINCT
  ag_1.agt_id
  ,ag_1.def_mkt_id
  ,ag_1.agt_tp_id
FROM opa_stg_uk.ar_agent ag_1
WHERE ag_1.file_dt = (SELECT MAX(ag_2.file_dt) FROM opa_stg_uk.ar_agent ag_2 WHERE ag_1.agt_id = ag_2.agt_id)
  );
2019-10-01 14:29:08,459 (Thread-1): SQL status: SUCCESS 1 in 0.22 seconds
2019-10-01 14:29:08,461 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 14:29:08,461 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:29:08,462 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 14:29:08,626 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:29:08,633 (Thread-1): 14:29:08 | 1 of 21 OK created view model DBT_TEST.with_ar_agent................. [SUCCESS 1 in 0.91s]
2019-10-01 14:29:08,634 (Thread-1): 14:29:08 | 2 of 21 START view model DBT_TEST.with_ar_market..................... [RUN]
2019-10-01 14:29:08,636 (Thread-1): Acquiring new snowflake connection "with_ar_market".
2019-10-01 14:29:08,636 (Thread-1): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 14:29:08,636 (Thread-1): Compiling model.dbt_test.with_ar_market
2019-10-01 14:29:08,645 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_market"
2019-10-01 14:29:08,661 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_market"
2019-10-01 14:29:08,667 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:29:08,667 (Thread-1): On with_ar_market: BEGIN
2019-10-01 14:29:08,794 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:29:08,794 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:29:08,795 (Thread-1): On with_ar_market: create or replace view OPA_DEV.DBT_TEST.with_ar_market as (
    

SELECT DISTINCT
  mk_1.mkt_id
  ,mk_1.off_id
FROM opa_stg_uk.ar_market mk_1
WHERE mk_1.file_dt = (SELECT MAX(mk_2.file_dt) FROM opa_stg_uk.ar_market mk_2 WHERE mk_1.mkt_id = mk_2.mkt_id)
  );
2019-10-01 14:29:09,016 (Thread-1): SQL status: SUCCESS 1 in 0.22 seconds
2019-10-01 14:29:09,018 (Thread-1): On with_ar_market: COMMIT
2019-10-01 14:29:09,019 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:29:09,019 (Thread-1): On with_ar_market: COMMIT
2019-10-01 14:29:09,128 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:29:09,136 (Thread-1): 14:29:09 | 2 of 21 OK created view model DBT_TEST.with_ar_market................ [SUCCESS 1 in 0.50s]
2019-10-01 14:29:09,137 (Thread-1): 14:29:09 | 3 of 21 START view model DBT_TEST.with_ar_officename................. [RUN]
2019-10-01 14:29:09,140 (Thread-1): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 14:29:09,140 (Thread-1): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 14:29:09,141 (Thread-1): Compiling model.dbt_test.with_ar_officename
2019-10-01 14:29:09,151 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 14:29:09,166 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 14:29:09,172 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:29:09,172 (Thread-1): On with_ar_officename: BEGIN
2019-10-01 14:29:09,477 (Thread-1): SQL status: SUCCESS 1 in 0.30 seconds
2019-10-01 14:29:09,477 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:29:09,478 (Thread-1): On with_ar_officename: create or replace view OPA_DEV.DBT_TEST.with_ar_officename as (
    

SELECT DISTINCT
  ofn_1.off_name_id
  ,ofn_1.cd
  ,ofn_1.name
  -- ,sm.source_market_code
FROM opa_stg_uk.ar_officename ofn_1
-- LEFT OUTER JOIN opa_stg_all.source_market sm ON 'UKATCOM|' || ofn_1.cd = bk_source_market
WHERE ofn_1.file_dt = (SELECT MAX(ofn_2.file_dt) FROM opa_stg_uk.ar_officename ofn_2 WHERE ofn_1.off_name_id = ofn_2.off_name_id)
  );
2019-10-01 14:29:09,717 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:29:09,718 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 14:29:09,718 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:29:09,718 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 14:29:09,930 (Thread-1): SQL status: SUCCESS 1 in 0.21 seconds
2019-10-01 14:29:09,934 (Thread-1): 14:29:09 | 3 of 21 OK created view model DBT_TEST.with_ar_officename............ [SUCCESS 1 in 0.79s]
2019-10-01 14:29:09,934 (Thread-1): 14:29:09 | 4 of 21 START view model DBT_TEST.with_ar_point...................... [RUN]
2019-10-01 14:29:09,935 (Thread-1): Acquiring new snowflake connection "with_ar_point".
2019-10-01 14:29:09,935 (Thread-1): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 14:29:09,935 (Thread-1): Compiling model.dbt_test.with_ar_point
2019-10-01 14:29:09,941 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_point"
2019-10-01 14:29:09,951 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_point"
2019-10-01 14:29:09,954 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:29:09,954 (Thread-1): On with_ar_point: BEGIN
2019-10-01 14:29:10,113 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:29:10,113 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:29:10,113 (Thread-1): On with_ar_point: create or replace view OPA_DEV.DBT_TEST.with_ar_point as (
    

SELECT
  p.pt_id
  ,p.pt_cd
FROM opa_stg_uk.ar_point p
WHERE p.file_dt = (SELECT MAX(p_2.file_dt) FROM opa_stg_uk.ar_point p_2 WHERE p.pt_id = p_2.pt_id)
  );
2019-10-01 14:29:10,355 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:29:10,356 (Thread-1): On with_ar_point: COMMIT
2019-10-01 14:29:10,356 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:29:10,356 (Thread-1): On with_ar_point: COMMIT
2019-10-01 14:29:10,449 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:29:10,456 (Thread-1): 14:29:10 | 4 of 21 OK created view model DBT_TEST.with_ar_point................. [SUCCESS 1 in 0.52s]
2019-10-01 14:29:10,457 (Thread-1): 14:29:10 | 5 of 21 START view model DBT_TEST.with_ar_sellstatic................. [RUN]
2019-10-01 14:29:10,458 (Thread-1): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 14:29:10,458 (Thread-1): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 14:29:10,459 (Thread-1): Compiling model.dbt_test.with_ar_sellstatic
2019-10-01 14:29:10,469 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 14:29:10,480 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 14:29:10,484 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:29:10,485 (Thread-1): On with_ar_sellstatic: BEGIN
2019-10-01 14:29:10,590 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:29:10,591 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:29:10,591 (Thread-1): On with_ar_sellstatic: create or replace view OPA_DEV.DBT_TEST.with_ar_sellstatic as (
    

SELECT
  sls_1.sell_stc_id
  ,sls_1.stc_stk_id
FROM opa_stg_uk.ar_sellstatic sls_1
WHERE sls_1.file_dt = (SELECT MAX(sls_2.file_dt) FROM opa_stg_uk.ar_sellstatic sls_2 WHERE sls_1.sell_stc_id = sls_2.sell_stc_id)
  );
2019-10-01 14:29:10,831 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:29:10,832 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 14:29:10,832 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:29:10,832 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 14:29:10,952 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:29:10,961 (Thread-1): 14:29:10 | 5 of 21 OK created view model DBT_TEST.with_ar_sellstatic............ [SUCCESS 1 in 0.50s]
2019-10-01 14:29:10,962 (Thread-1): 14:29:10 | 6 of 21 START view model DBT_TEST.with_ar_sellunit................... [RUN]
2019-10-01 14:29:10,966 (Thread-1): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 14:29:10,966 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 14:29:10,967 (Thread-1): Compiling model.dbt_test.with_ar_sellunit
2019-10-01 14:29:10,980 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 14:29:11,001 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 14:29:11,005 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:29:11,006 (Thread-1): On with_ar_sellunit: BEGIN
2019-10-01 14:29:11,138 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:29:11,139 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:29:11,139 (Thread-1): On with_ar_sellunit: create or replace view OPA_DEV.DBT_TEST.with_ar_sellunit as (
    

SELECT
  su.sell_unit_id
  ,su.rm_id
  ,su.bb_cd_id
FROM opa_stg_uk.ar_sellunit su
WHERE su.file_dt = (SELECT MAX(su_2.file_dt) FROM opa_stg_uk.ar_sellunit su_2 WHERE su.sell_unit_id = su_2.sell_unit_id)
  );
2019-10-01 14:29:11,376 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:29:11,378 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 14:29:11,378 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:29:11,378 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 14:29:11,462 (Thread-1): SQL status: SUCCESS 1 in 0.08 seconds
2019-10-01 14:29:11,470 (Thread-1): 14:29:11 | 6 of 21 OK created view model DBT_TEST.with_ar_sellunit.............. [SUCCESS 1 in 0.50s]
2019-10-01 14:29:11,471 (Thread-1): 14:29:11 | 7 of 21 START view model DBT_TEST.with_ar_staticroom................. [RUN]
2019-10-01 14:29:11,474 (Thread-1): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 14:29:11,474 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 14:29:11,476 (Thread-1): Compiling model.dbt_test.with_ar_staticroom
2019-10-01 14:29:11,489 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 14:29:11,507 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 14:29:11,515 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:29:11,516 (Thread-1): On with_ar_staticroom: BEGIN
2019-10-01 14:29:11,664 (Thread-1): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 14:29:11,665 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:29:11,665 (Thread-1): On with_ar_staticroom: create or replace view OPA_DEV.DBT_TEST.with_ar_staticroom as (
    

SELECT
  sr.stc_rm_id
  ,sr.stc_stk_id
  ,sr.rm_id
FROM opa_stg_uk.ar_staticroom sr
WHERE sr.file_dt = (SELECT MAX(sr_2.file_dt) FROM opa_stg_uk.ar_staticroom sr_2 WHERE sr.stc_rm_id = sr_2.stc_rm_id)
  );
2019-10-01 14:29:11,964 (Thread-1): SQL status: SUCCESS 1 in 0.30 seconds
2019-10-01 14:29:11,965 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 14:29:11,965 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:29:11,965 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 14:29:12,060 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:29:12,065 (Thread-1): 14:29:12 | 7 of 21 OK created view model DBT_TEST.with_ar_staticroom............ [SUCCESS 1 in 0.59s]
2019-10-01 14:29:12,066 (Thread-1): 14:29:12 | 8 of 21 START view model DBT_TEST.with_ar_staticstock................ [RUN]
2019-10-01 14:29:12,068 (Thread-1): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 14:29:12,068 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 14:29:12,068 (Thread-1): Compiling model.dbt_test.with_ar_staticstock
2019-10-01 14:29:12,074 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 14:29:12,087 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 14:29:12,091 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:29:12,091 (Thread-1): On with_ar_staticstock: BEGIN
2019-10-01 14:29:12,213 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:29:12,214 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:29:12,214 (Thread-1): On with_ar_staticstock: create or replace view OPA_DEV.DBT_TEST.with_ar_staticstock as (
    

SELECT
  ss.stc_stk_id
  ,ss.cd
FROM opa_stg_uk.ar_staticstock ss
WHERE ss.file_dt = (SELECT MAX(ss_2.file_dt) FROM opa_stg_uk.ar_staticstock ss_2 WHERE ss.stc_stk_id = ss_2.stc_stk_id)
  );
2019-10-01 14:29:12,454 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:29:12,455 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 14:29:12,455 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:29:12,455 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 14:29:12,550 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:29:12,554 (Thread-1): 14:29:12 | 8 of 21 OK created view model DBT_TEST.with_ar_staticstock........... [SUCCESS 1 in 0.48s]
2019-10-01 14:29:12,555 (Thread-1): 14:29:12 | 9 of 21 START view model DBT_TEST.with_ar_transinvroute.............. [RUN]
2019-10-01 14:29:12,556 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 14:29:12,556 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 14:29:12,557 (Thread-1): Compiling model.dbt_test.with_ar_transinvroute
2019-10-01 14:29:12,563 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 14:29:12,574 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 14:29:12,578 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:29:12,578 (Thread-1): On with_ar_transinvroute: BEGIN
2019-10-01 14:29:12,687 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:29:12,688 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:29:12,688 (Thread-1): On with_ar_transinvroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroute as (
    

SELECT
  tir.trans_inv_route_id
  ,tir.trans_route_id
FROM opa_stg_uk.ar_transinvroute tir
WHERE tir.file_dt = (SELECT MAX(tir_2.file_dt) FROM opa_stg_uk.ar_transinvroute tir_2 WHERE tir.trans_inv_route_id = tir_2.trans_inv_route_id)
  );
2019-10-01 14:29:12,904 (Thread-1): SQL status: SUCCESS 1 in 0.22 seconds
2019-10-01 14:29:12,905 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 14:29:12,905 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:29:12,905 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 14:29:13,009 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:29:13,019 (Thread-1): 14:29:13 | 9 of 21 OK created view model DBT_TEST.with_ar_transinvroute......... [SUCCESS 1 in 0.46s]
2019-10-01 14:29:13,021 (Thread-1): 14:29:13 | 10 of 21 START view model DBT_TEST.with_ar_transinvroutesector....... [RUN]
2019-10-01 14:29:13,025 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:29:13,025 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 14:29:13,026 (Thread-1): Compiling model.dbt_test.with_ar_transinvroutesector
2019-10-01 14:29:13,038 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 14:29:13,053 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 14:29:13,059 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:29:13,059 (Thread-1): On with_ar_transinvroutesector: BEGIN
2019-10-01 14:29:13,207 (Thread-1): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 14:29:13,208 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:29:13,208 (Thread-1): On with_ar_transinvroutesector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroutesector as (
    

SELECT
  tirs.trans_inv_route_id
  ,tirs.trans_inv_sec_id
  ,tirs.trans_inv_route_sec_id
FROM opa_stg_uk.ar_transinvroutesector tirs
WHERE tirs.file_dt = (SELECT MAX(tirs_2.file_dt) FROM opa_stg_uk.ar_transinvroutesector tirs_2 WHERE tirs.trans_inv_route_sec_id = tirs_2.trans_inv_route_sec_id)
  );
2019-10-01 14:29:13,435 (Thread-1): SQL status: SUCCESS 1 in 0.23 seconds
2019-10-01 14:29:13,438 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 14:29:13,438 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:29:13,438 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 14:29:13,543 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:29:13,547 (Thread-1): 14:29:13 | 10 of 21 OK created view model DBT_TEST.with_ar_transinvroutesector.. [SUCCESS 1 in 0.52s]
2019-10-01 14:29:13,548 (Thread-1): 14:29:13 | 11 of 21 START view model DBT_TEST.with_ar_transinvsector............ [RUN]
2019-10-01 14:29:13,548 (Thread-1): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 14:29:13,548 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 14:29:13,549 (Thread-1): Compiling model.dbt_test.with_ar_transinvsector
2019-10-01 14:29:13,554 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 14:29:13,564 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 14:29:13,568 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:29:13,568 (Thread-1): On with_ar_transinvsector: BEGIN
2019-10-01 14:29:13,708 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:29:13,708 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:29:13,709 (Thread-1): On with_ar_transinvsector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvsector as (
    

SELECT
  tis.trans_inv_sec_id
  ,tis.dep_dt_tm
FROM opa_stg_uk.ar_transinvsector tis
WHERE tis.file_dt = (SELECT MAX(tis_2.file_dt) FROM opa_stg_uk.ar_transinvsector tis_2 WHERE tis.trans_inv_sec_id = tis_2.trans_inv_sec_id)
  );
2019-10-01 14:29:14,017 (Thread-1): SQL status: SUCCESS 1 in 0.31 seconds
2019-10-01 14:29:14,019 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 14:29:14,020 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:29:14,020 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 14:29:14,121 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:29:14,126 (Thread-1): 14:29:14 | 11 of 21 OK created view model DBT_TEST.with_ar_transinvsector....... [SUCCESS 1 in 0.58s]
2019-10-01 14:29:14,127 (Thread-1): 14:29:14 | 12 of 21 START view model DBT_TEST.with_ar_transroute................ [RUN]
2019-10-01 14:29:14,129 (Thread-1): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 14:29:14,130 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 14:29:14,130 (Thread-1): Compiling model.dbt_test.with_ar_transroute
2019-10-01 14:29:14,141 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 14:29:14,152 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 14:29:14,156 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:29:14,156 (Thread-1): On with_ar_transroute: BEGIN
2019-10-01 14:29:14,271 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:29:14,272 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:29:14,272 (Thread-1): On with_ar_transroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transroute as (
    

SELECT
	tr.trans_route_id
	,tr.route_cd
FROM opa_stg_uk.ar_transroute tr
WHERE tr.file_dt = (SELECT MAX(tr_2.file_dt) FROM opa_stg_uk.ar_transroute tr_2 WHERE tr.trans_route_id = tr_2.trans_route_id)
  );
2019-10-01 14:29:14,480 (Thread-1): SQL status: SUCCESS 1 in 0.21 seconds
2019-10-01 14:29:14,482 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 14:29:14,482 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:29:14,483 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 14:29:14,620 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:29:14,625 (Thread-1): 14:29:14 | 12 of 21 OK created view model DBT_TEST.with_ar_transroute........... [SUCCESS 1 in 0.49s]
2019-10-01 14:29:14,626 (Thread-1): 14:29:14 | 13 of 21 START view model DBT_TEST.with_ar_usercodes................. [RUN]
2019-10-01 14:29:14,628 (Thread-1): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 14:29:14,628 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 14:29:14,629 (Thread-1): Compiling model.dbt_test.with_ar_usercodes
2019-10-01 14:29:14,638 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 14:29:14,652 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 14:29:14,658 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:29:14,658 (Thread-1): On with_ar_usercodes: BEGIN
2019-10-01 14:29:14,791 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:29:14,792 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:29:14,792 (Thread-1): On with_ar_usercodes: create or replace view OPA_DEV.DBT_TEST.with_ar_usercodes as (
    

SELECT DISTINCT
  uc_1.user_cd_id
  ,uc_1.cd
  ,uc_1.name
FROM opa_stg_uk.ar_usercodes uc_1
WHERE uc_1.file_dt = (SELECT MAX(uc_2.file_dt) FROM opa_stg_uk.ar_usercodes uc_2 WHERE uc_1.user_cd_id = uc_2.user_cd_id)
  );
2019-10-01 14:29:15,376 (Thread-1): SQL status: SUCCESS 1 in 0.58 seconds
2019-10-01 14:29:15,378 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 14:29:15,379 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:29:15,379 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 14:29:15,483 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:29:15,493 (Thread-1): 14:29:15 | 13 of 21 OK created view model DBT_TEST.with_ar_usercodes............ [SUCCESS 1 in 0.86s]
2019-10-01 14:29:15,495 (Thread-1): 14:29:15 | 14 of 21 START view model DBT_TEST.with_booking_fact_margin.......... [RUN]
2019-10-01 14:29:15,499 (Thread-1): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 14:29:15,500 (Thread-1): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 14:29:15,501 (Thread-1): Compiling model.dbt_test.with_booking_fact_margin
2019-10-01 14:29:15,510 (Thread-1): Writing injected SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 14:29:15,528 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 14:29:15,534 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:29:15,535 (Thread-1): On with_booking_fact_margin: BEGIN
2019-10-01 14:29:15,646 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:29:15,647 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:29:15,647 (Thread-1): On with_booking_fact_margin: create or replace view OPA_DEV.DBT_TEST.with_booking_fact_margin as (
    

SELECT
  bff_1.bk_booking
  ,bff_1.ffd_flag
  ,bff_1.sm_currency
  ,bff_1.sm_revenue
  ,bff_1.sm_cnx_and_amend_revenue
  ,bff_1.sm_accommodation_costs
  ,bff_1.sm_early_booking_discounts
  ,bff_1.sm_late_booking_discounts
  ,bff_1.sm_flying_costs
  ,bff_1.sm_other_costs
  ,bff_1.sm_distribution_costs
  ,bff_1.sm_non_margin_items
  ,bff_1.sm_margin
  ,bff_1.smg_currency
  ,bff_1.smg_revenue
  ,bff_1.smg_cnx_and_amend_revenue
  ,bff_1.smg_accommodation_costs
  ,bff_1.smg_early_booking_discounts
  ,bff_1.smg_late_booking_discounts
  ,bff_1.smg_flying_costs
  ,bff_1.smg_other_costs
  ,bff_1.smg_distribution_costs
  ,bff_1.smg_non_margin_items
  ,bff_1.smg_margin
  ,bff_1.rep_currency
  ,bff_1.rep_revenue
  ,bff_1.rep_cnx_and_amend_revenue
  ,bff_1.rep_accommodation_costs
  ,bff_1.rep_early_booking_discounts
  ,bff_1.rep_late_booking_discounts
  ,bff_1.rep_flying_costs
  ,bff_1.rep_other_costs
  ,bff_1.rep_distribution_costs
  ,bff_1.rep_non_margin_items
  ,bff_1.rep_margin
FROM opa_fl_uk.v_booking_fact_margin_uk bff_1
  );
2019-10-01 14:29:15,987 (Thread-1): SQL status: SUCCESS 1 in 0.34 seconds
2019-10-01 14:29:15,988 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 14:29:15,988 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:29:15,988 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 14:29:16,080 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:29:16,087 (Thread-1): 14:29:16 | 14 of 21 OK created view model DBT_TEST.with_booking_fact_margin..... [SUCCESS 1 in 0.59s]
2019-10-01 14:29:16,088 (Thread-1): 14:29:16 | 15 of 21 START view model DBT_TEST.with_dates........................ [RUN]
2019-10-01 14:29:16,090 (Thread-1): Acquiring new snowflake connection "with_dates".
2019-10-01 14:29:16,090 (Thread-1): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 14:29:16,091 (Thread-1): Compiling model.dbt_test.with_dates
2019-10-01 14:29:16,099 (Thread-1): Writing injected SQL for node "model.dbt_test.with_dates"
2019-10-01 14:29:16,116 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_dates"
2019-10-01 14:29:16,123 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:29:16,123 (Thread-1): On with_dates: BEGIN
2019-10-01 14:29:16,238 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:29:16,239 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:29:16,239 (Thread-1): On with_dates: create or replace view OPA_DEV.DBT_TEST.with_dates as (
    


SELECT
	dd.bk_date
	,dd.group_season_code
FROM opa_stg_all.date_dim dd
  );
2019-10-01 14:29:16,446 (Thread-1): SQL status: SUCCESS 1 in 0.21 seconds
2019-10-01 14:29:16,448 (Thread-1): On with_dates: COMMIT
2019-10-01 14:29:16,448 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:29:16,448 (Thread-1): On with_dates: COMMIT
2019-10-01 14:29:16,544 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:29:16,551 (Thread-1): 14:29:16 | 15 of 21 OK created view model DBT_TEST.with_dates................... [SUCCESS 1 in 0.46s]
2019-10-01 14:29:16,552 (Thread-1): 14:29:16 | 16 of 21 START view model DBT_TEST.with_fl_acr_booking............... [RUN]
2019-10-01 14:29:16,554 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 14:29:16,554 (Thread-1): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 14:29:16,555 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking
2019-10-01 14:29:16,565 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 14:29:16,580 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 14:29:16,590 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:29:16,590 (Thread-1): On with_fl_acr_booking: BEGIN
2019-10-01 14:29:16,703 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:29:16,704 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:29:16,704 (Thread-1): On with_fl_acr_booking: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking as (
    

SELECT
  bk_1.sk_booking_id
  ,bk_1.booking_version
  ,bk_1.atcom_res_id
  ,bk_1.atcom_res_version
  ,bk_1.atcom_market_id -- CG ADDED in V1.06 for new Source Market Derivation
  ,bk_1.number_of_adults
  ,bk_1.number_of_children
  ,bk_1.number_of_infants
  ,bk_1.number_of_passengers
  ,bk_1.sk_season_id
  ,bk_1.booking_status
  ,bk_1.atcom_agent_id
  ,bk_1.atcom_sell_currency_id
  ,bk_1.season_date
  ,bk_1.confirmed_on
  ,bk_1.cancelled_on
  ,bk_1.source_created_on
  ,bk_1.modified_on
  ,bk_1.effective_from
  ,DATEADD('second', -1, LEAD(bk_1.effective_from) OVER (PARTITION BY bk_1.sk_booking_id ORDER BY bk_1.booking_version)) AS lead_effective_from
  ,bk_1.effective_to
  ,bk_1.dwh_created_on
  ,bk_1.dwh_modified_on

FROM opa_stg_uk.fl_acr_booking bk_1
WHERE bk_1.file_dt = (SELECT MAX(bk_2.file_dt) FROM opa_stg_uk.fl_acr_booking bk_2 WHERE bk_1.sk_booking_id = bk_2.sk_booking_id AND bk_1.booking_version = bk_2.booking_version)
AND bk_1.booking_version = (SELECT MAX(bk_3.booking_version) FROM opa_stg_uk.fl_acr_booking bk_3 WHERE bk_1.sk_booking_id = bk_3.sk_booking_id)
AND (bk_1.sk_season_id > 201701 OR bk_1.sk_booking_id IS NULL)

-- To be removed when running against all bookings
AND bk_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 14:29:17,050 (Thread-1): SQL status: SUCCESS 1 in 0.35 seconds
2019-10-01 14:29:17,052 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 14:29:17,052 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:29:17,052 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 14:29:17,146 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:29:17,155 (Thread-1): 14:29:17 | 16 of 21 OK created view model DBT_TEST.with_fl_acr_booking.......... [SUCCESS 1 in 0.60s]
2019-10-01 14:29:17,156 (Thread-1): 14:29:17 | 17 of 21 START view model DBT_TEST.with_fl_acr_booking_service....... [RUN]
2019-10-01 14:29:17,159 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:29:17,159 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 14:29:17,160 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking_service
2019-10-01 14:29:17,171 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 14:29:17,186 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 14:29:17,193 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:29:17,193 (Thread-1): On with_fl_acr_booking_service: BEGIN
2019-10-01 14:29:17,306 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:29:17,307 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:29:17,307 (Thread-1): On with_fl_acr_booking_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking_service as (
    

SELECT
  bk_ser_1.sk_booking_service_id
  ,bk_ser_1.sk_booking_id
  ,bk_ser_1.sk_service_id
  ,bk_ser_1.service_version
  ,bk_ser_1.booking_version
FROM opa_stg_uk.fl_acr_booking_service bk_ser_1
WHERE bk_ser_1.file_dt = (SELECT MAX(bk_ser_2.file_dt) FROM opa_stg_uk.fl_acr_booking_service bk_ser_2 WHERE bk_ser_1.sk_booking_service_id = bk_ser_2.sk_booking_service_id)
AND bk_ser_1.booking_version = (SELECT MAX(bk_ser_3.booking_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_3 WHERE bk_ser_1.sk_booking_id = bk_ser_3.sk_booking_id)
AND bk_ser_1.service_version = (SELECT MAX(bk_ser_4.service_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_4 WHERE bk_ser_1.sk_service_id = bk_ser_4.sk_service_id)

-- To be removed when running against all bookings
AND bk_ser_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 14:29:17,536 (Thread-1): SQL status: SUCCESS 1 in 0.23 seconds
2019-10-01 14:29:17,538 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 14:29:17,539 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:29:17,539 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 14:29:17,658 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:29:17,664 (Thread-1): 14:29:17 | 17 of 21 OK created view model DBT_TEST.with_fl_acr_booking_service.. [SUCCESS 1 in 0.50s]
2019-10-01 14:29:17,665 (Thread-1): 14:29:17 | 18 of 21 START view model DBT_TEST.with_fl_acr_service............... [RUN]
2019-10-01 14:29:17,669 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 14:29:17,669 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 14:29:17,670 (Thread-1): Compiling model.dbt_test.with_fl_acr_service
2019-10-01 14:29:17,679 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 14:29:17,711 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 14:29:17,717 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:29:17,717 (Thread-1): On with_fl_acr_service: BEGIN
2019-10-01 14:29:17,835 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:29:17,835 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:29:17,836 (Thread-1): On with_fl_acr_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service as (
    

SELECT
  ser_1.sk_service_id
  ,ser_1.atcom_ser_id
  ,ser_1.atcom_dep_point_id
  ,ser_1.service_version
  ,ser_1.service_status
  ,ser_1.direction
  ,ser_1.sell_type
  ,ser_1.service_type
  ,ser_1.flight_type_code
  ,ser_1.service_start_date1
  ,ser_1.service_end_date1
  ,ser_1.departure_flight_number
  ,ser_1.atcom_arr_point_id
  ,ser_1.source_stock_type_code
FROM opa_stg_uk.fl_acr_service ser_1
WHERE ser_1.file_dt = (SELECT MAX(ser_2.file_dt) FROM opa_stg_uk.fl_acr_service ser_2 WHERE ser_1.sk_service_id = ser_2.sk_service_id AND ser_1.service_version = ser_2.service_version)
  );
2019-10-01 14:29:18,120 (Thread-1): SQL status: SUCCESS 1 in 0.28 seconds
2019-10-01 14:29:18,122 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 14:29:18,122 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:29:18,122 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 14:29:18,244 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:29:18,255 (Thread-1): 14:29:18 | 18 of 21 OK created view model DBT_TEST.with_fl_acr_service.......... [SUCCESS 1 in 0.58s]
2019-10-01 14:29:18,257 (Thread-1): 14:29:18 | 19 of 21 START view model DBT_TEST.with_fl_acr_service_element....... [RUN]
2019-10-01 14:29:18,260 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 14:29:18,260 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 14:29:18,261 (Thread-1): Compiling model.dbt_test.with_fl_acr_service_element
2019-10-01 14:29:18,273 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 14:29:18,291 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 14:29:18,296 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:29:18,296 (Thread-1): On with_fl_acr_service_element: BEGIN
2019-10-01 14:29:18,402 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:29:18,403 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:29:18,403 (Thread-1): On with_fl_acr_service_element: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service_element as (
    

SELECT
  ser_e_1.sk_service_id
  ,ser_e_1.service_version
  ,ser_e_1.atcom_sub_ser_id
FROM opa_stg_uk.fl_acr_service_element ser_e_1
WHERE ser_e_1.file_dt = (SELECT MAX(ser_e_2.file_dt) FROM opa_stg_uk.fl_acr_service_element ser_e_2 WHERE ser_e_1.sk_service_element_id = ser_e_2.sk_service_element_id)
  );
2019-10-01 14:29:18,694 (Thread-1): SQL status: SUCCESS 1 in 0.29 seconds
2019-10-01 14:29:18,695 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 14:29:18,695 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:29:18,695 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 14:29:18,790 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:29:18,797 (Thread-1): 14:29:18 | 19 of 21 OK created view model DBT_TEST.with_fl_acr_service_element.. [SUCCESS 1 in 0.54s]
2019-10-01 14:29:18,798 (Thread-1): 14:29:18 | 20 of 21 START view model DBT_TEST.with_ar_currency.................. [RUN]
2019-10-01 14:29:18,801 (Thread-1): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 14:29:18,801 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 14:29:18,802 (Thread-1): Compiling model.dbt_test.with_ar_currency
2019-10-01 14:29:18,811 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 14:29:18,826 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 14:29:18,831 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:29:18,831 (Thread-1): On with_ar_currency: BEGIN
2019-10-01 14:29:18,948 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:29:18,948 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:29:18,949 (Thread-1): On with_ar_currency: create or replace view OPA_DEV.DBT_TEST.with_ar_currency as (
    

SELECT DISTINCT
  cur_1.cur_id
  ,cur_1.cd
  ,cur_1.name
FROM opa_stg_uk.ar_currency cur_1
WHERE cur_1.file_dt = (SELECT MAX(cur_2.file_dt) FROM opa_stg_uk.ar_currency cur_2 WHERE cur_1.cur_id = cur_2.cur_id)
  );
2019-10-01 14:29:19,162 (Thread-1): SQL status: SUCCESS 1 in 0.21 seconds
2019-10-01 14:29:19,165 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 14:29:19,165 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:29:19,165 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 14:29:19,256 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:29:19,262 (Thread-1): 14:29:19 | 20 of 21 OK created view model DBT_TEST.with_ar_currency............. [SUCCESS 1 in 0.46s]
2019-10-01 14:29:19,263 (Thread-1): 14:29:19 | 21 of 21 START view model DBT_TEST.v_booking_fact_uk................. [RUN]
2019-10-01 14:29:19,265 (Thread-1): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 14:29:19,265 (Thread-1): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 14:29:19,265 (Thread-1): Compiling model.dbt_test.v_booking_fact_uk
2019-10-01 14:29:19,319 (Thread-1): Writing injected SQL for node "model.dbt_test.v_booking_fact_uk"
2019-10-01 14:29:19,363 (Thread-1): Writing runtime SQL for node "model.dbt_test.v_booking_fact_uk"
2019-10-01 14:29:19,511 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:29:19,511 (Thread-1): On v_booking_fact_uk: BEGIN
2019-10-01 14:29:19,628 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:29:19,629 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:29:19,629 (Thread-1): On v_booking_fact_uk: create or replace view OPA_DEV.DBT_TEST.v_booking_fact_uk as (
    

WITH booking_service AS (
	SELECT
		bk_ser.sk_booking_id
		,bk_ser.booking_version
		,bk_ser.sk_service_id
		,bk_ser.service_version
		,bk_ser.sk_booking_service_id
		,ser.service_type
		,ser.source_stock_type_code
		,ser.sell_type
		,ser.service_status
		,ser.flight_type_code
		,ser.service_start_date1
		,ser.service_end_date1
		,tis.dep_dt_tm
		,ser.departure_flight_number
		,ser.direction
		,tr.route_cd
		,dpt.pt_cd
		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN apt.pt_cd
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				AND ser.service_status = 'CON'
				THEN apt.pt_cd
				ELSE NULL
			END
		END AS min_flight_gateway

		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
					AND ser.service_status = 'CON'
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		END	AS min_flight_id

		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MAX(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MAX(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
					AND ser.service_status = 'CON'
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		END AS max_flight_id


		-- MULTICENTRE
		,CASE WHEN
			-- All multicentre services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END	AS min_multi_center_date

		,CASE WHEN
			-- All multicentre services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS max_multi_center_date


		-- ACCOM
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU'))
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_accom_date
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU'))
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS max_accom_date


		-- CRUISE
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_cruise_date
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END max_cruise_date


		-- FLIGHT
		,CASE WHEN
			-- All flight services cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_flight_date
		,CASE WHEN
			-- All flight services cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END	AS max_flight_date

		,sts.cd AS accom
		,su.bb_cd_id AS board_cd
		,uc_3.name AS board_name
		,str.stc_rm_id AS room

		-- Booking type derivation part 1
		,CASE WHEN
				-- No outbound flight services on the booking are third party
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
		THEN 0
		ELSE
			CASE WHEN
				-- All outbound flight services are 3PF
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
					+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				=
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

			OR
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
			THEN 1
			ELSE 0
			END
		END AS tpf_out_count
		,CASE WHEN
				-- No outbound flight services on the booking are third party
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
		THEN 0
		ELSE
			CASE WHEN
				-- All outbound flight services are 3PF
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
					+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				=
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

			OR
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
			THEN 1
			ELSE 0
			END
		END AS tpf_in_count
		,CASE WHEN
				CASE WHEN
						-- No outbound flight services on the booking are third party
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
				THEN 0
				ELSE
					CASE WHEN
						-- All outbound flight services are 3PF
						SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
							+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
						=
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

					OR
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
					THEN 1
					ELSE 0
					END
				END
			+
				CASE WHEN
						-- No outbound flight services on the booking are third party
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
				THEN 0
				ELSE
					CASE WHEN
						-- All outbound flight services are 3PF
						SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
							+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
						=
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

					OR
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
					THEN 1
					ELSE 0
					END
				END
		> 0
			THEN 'Y'
			ELSE 'N'
		END AS tpf_indicator
		,CASE WHEN
				-- All accom cancelled
				SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS accom_count
		,CASE WHEN
				-- All cruise cancelled
				SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS cruise_count
		,CASE WHEN
				-- All flight out cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS flight_out_count
		,CASE WHEN
				-- All flight in cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS flight_ret_count
		,CASE WHEN
				-- All ahoc services cancelled
				SUM(CASE WHEN ser.service_type = 'AHOC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'AHOC' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'AHOC' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS thirdparty_count

		,CASE WHEN
				-- All flight out first date cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN ser.service_start_date1 ELSE NULL END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN ser.service_start_date1 ELSE NULL END
		END AS flight_out_first_date
		,CASE WHEN
				-- All flight in first date cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN ser.service_start_date1 ELSE NULL END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN ser.service_start_date1 ELSE NULL END
		END AS flight_ret_first_date

	-- Service and subservice
	FROM OPA_DEV.DBT_TEST.with_fl_acr_booking_service bk_ser
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_fl_acr_service ser ON bk_ser.sk_service_id = ser.sk_service_id AND bk_ser.service_version = ser.service_version
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_fl_acr_service_element ser_e ON ser.sk_service_id = ser_e.sk_service_id AND ser.service_version = ser_e.service_version

	-- Accom
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_sellstatic sls ON ser.atcom_ser_id = sls.sell_stc_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_staticstock sts ON sls.stc_stk_id = sts.stc_stk_id

	-- Room
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_sellunit su ON ser_e.atcom_sub_ser_id = su.sell_unit_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_staticroom str ON sts.stc_stk_id = str.stc_stk_id AND su.rm_id = str.rm_id

	-- Board
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_usercodes uc_3 ON su.bb_cd_id = uc_3.user_cd_id

	-- Flight
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvroute tir ON ser.atcom_ser_id = tir.trans_inv_route_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transroute tr ON tir.trans_route_id = tr.trans_route_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvroutesector tirs ON tir.trans_inv_route_id = tirs.trans_inv_route_id
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvsector tis ON tirs.trans_inv_sec_id = tis.trans_inv_sec_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_point dpt ON ser.atcom_dep_point_id = dpt.pt_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_point apt ON ser.atcom_arr_point_id = apt.pt_id

	ORDER BY
		bk_ser.sk_booking_id
		,bk_ser.booking_version
		,ser.source_stock_type_code

)
,booking_fact_1 AS (
  SELECT DISTINCT
    CASE WHEN bk.atcom_res_id IS NULL THEN NULL ELSE 'UKATCOM|' || bk.atcom_res_id || '|' || bk.booking_version END AS bk_booking
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS bk_primary_accom
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS bk_primary_room
    ,COALESCE(
      CASE WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
        AND COUNT(DISTINCT bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) > 1
          THEN 'MULTI'
      WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
        AND COUNT(DISTINCT bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = 1
          THEN 'UKATCOM|' || MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      WHEN SUM(bs.flight_out_count) OVER (PARTITION BY bk.atcom_res_id) > 1
        THEN 'MULTI'
        ELSE 'UKATCOM|' || MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      END
    , 'U') AS bk_first_flight
    ,COALESCE(
      CASE WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
          THEN NULL
      WHEN SUM(bs.flight_ret_count) OVER (PARTITION BY bk.atcom_res_id) > 1
        THEN 'MULTI'
        ELSE 'UKATCOM|' || MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      END
    , 'U') AS bk_last_flight
    ,CASE WHEN ofn.cd IS NULL
      THEN 'UKATCOM|U'
      ELSE 'UKATCOM|' || ofn.cd
    END AS bk_source_market
    ,'UKATCOM' AS bk_originating_system
    ,CASE WHEN
        -- Third party flight
        SUM(CASE WHEN bs.tpf_indicator = 'Y' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|3PF'

      WHEN
        -- Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGAF'

      WHEN
        -- Cruise and Flight Package
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) > 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGCF'

      WHEN
        -- Cruise and Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGCAF'

      WHEN
        -- Multi Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMAF'

      WHEN
        -- Multi Cruise and Flight Package
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMCF'

      WHEN
        -- Multi Accommodation and One Cruise and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMACF'

      WHEN
        -- Multi Cruise and One Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMCAF'

      WHEN
        -- Multi Accommodation and Multi Cruise and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMAMCF'

      WHEN
        -- Single Accommodation Only
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCA'

      WHEN
        -- Multi Accommodation Only
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCMA'

      WHEN
        -- Accommodation and Flight Other
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 1
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCOTH'

      WHEN
        -- Flight Only Return Outbound First
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id) < MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTROF'

      WHEN
        -- Flight Only Return Inbound First
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id) < MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTRIF'

      WHEN
        -- Flight only same day return
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id) = MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTSDR'

      WHEN
        -- Flight Only One Way Outbound
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTOBO'

      WHEN
        -- Flight Only One Way Inbound
        SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTIBO'

      WHEN
        -- Single Cruise Only
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|CRU' -- Granular code = 'CRUSGL'

      WHEN
        -- Multi Cruise Only
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|CRU' -- Granular code = 'CRUMLT'

      WHEN
        -- Third party
        SUM(bs.thirdparty_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|TPB' -- Granular code = 'TPB'

      ELSE 'UKATCOM|OTH'
    END AS bk_booking_type
    ,CASE WHEN bk.booking_status IS NULL
      THEN 'U'
      ELSE 'UKATCOM|' || bk.booking_status
    END AS bk_booking_status
    ,bk.atcom_res_id AS source_booking_id
    --,bk.atcom_res_version AS source_booking_version
    ,bk.booking_version AS source_booking_version -- swapped to FL version not Atcom version PiT
    ,COALESCE(CAST(bk.source_created_on AS TIMESTAMP), CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_created_datetime
    ,COALESCE(bk.confirmed_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_confirmed_datetime
    ,COALESCE(bk.cancelled_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_cancelled_datetime
    ,gs.group_season_code AS group_season
    ,CASE WHEN bk.sk_season_id IS NULL OR bk.sk_season_id = -1 OR bk.sk_season_id = -2
      THEN NULL
      ELSE
        CASE WHEN SUBSTRING(bk.sk_season_id, 5, 2) = 01
          THEN 'S' || SUBSTRING(bk.sk_season_id, 3, 2)
          ELSE 'W' || SUBSTRING(bk.sk_season_id, 3, 2)
        END
    END AS sm_season
    ,CASE WHEN uc.cd IS NULL
      THEN NULL
      ELSE 'UKATCOM|' || uc.cd
    END AS channel_code
    ,CASE WHEN uc.name IS NULL
      THEN NULL
      ELSE 'UKATCOM|' || uc.name
    END AS channel_desc
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS booked_board_code
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS booked_board_name
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
      ELSE
        CASE WHEN SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
    END AS multi_room_booking
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      ELSE
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
    END AS number_of_booked_rooms
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
      ELSE
        CASE WHEN COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
    END AS multi_centre_booking
    ,COALESCE(bk.season_date,CAST('2999-12-31 23:59:59.0' AS DATE)) AS departure_date
    ,COALESCE(
      bs.max_multi_center_date,
      bs.max_accom_date,
      bs.max_cruise_date,
      bs.max_flight_date,
      CAST('2999-12-31 23:59:59.0' AS DATE)
    ) AS return_date
    ,CASE WHEN
      COALESCE(bk.season_date, CAST('2999-12-31 23:59:59.0' AS DATE)) = CAST('2999-12-31 23:59:59.0' AS DATE)
    OR
      COALESCE(
        bs.max_multi_center_date,
        bs.max_accom_date,
        bs.max_cruise_date,
        bs.max_flight_date,
        CAST('2999-12-31 23:59:59.0' AS DATE)
      ) = CAST('2999-12-31 23:59:59.0' AS DATE)
    THEN 0
    ELSE
      DATEDIFF('DAY',
        bk.season_date
      ,
        COALESCE(
          bs.max_multi_center_date,
          bs.max_accom_date,
          bs.max_cruise_date,
          bs.max_flight_date)
      )
    END	AS DURATION
    ,COALESCE(bk.number_of_adults, 0) AS std_number_of_booking_adult_pax
    ,COALESCE(bk.number_of_children, 0) AS std_number_of_booking_child_pax
    ,COALESCE(bk.number_of_infants, 0) AS std_number_of_booking_infant_pax
    ,COALESCE(bk.number_of_passengers, 0) AS std_number_of_booking_pax
    ,COALESCE(bk.number_of_adults, 0) AS sm_number_of_booking_adult_pax
    ,0 AS sm_number_of_booking_teenager_pax
    ,COALESCE(bk.number_of_children, 0) AS sm_number_of_booking_child_pax
    ,COALESCE(bk.number_of_infants, 0) AS sm_number_of_booking_infant_pax
    ,COALESCE(bk.number_of_passengers, 0) AS sm_number_of_booking_pax
    ,CASE WHEN COUNT(DISTINCT bs.min_flight_gateway) OVER (PARTITION BY bk.atcom_res_id) > 1
      THEN 'MULTI'
      ELSE MIN(bs.min_flight_gateway) OVER (PARTITION BY bk.atcom_res_id)
    END AS primary_gateway
    -- ,cur.name AS currency
    ,'Insert' AS record_type
    ,COALESCE(bk.effective_from, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS effective_from
    ,COALESCE(
      bk.lead_effective_from
      ,bk.effective_to
      ,CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)
    ) AS effective_to
    ,COALESCE(bk.dwh_created_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS sm_created_datetime
    ,COALESCE(bk.dwh_modified_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS sm_updated_datetime
    ,CAST(CONVERT_TIMEZONE('Europe/London',CURRENT_TIMESTAMP()) AS TIMESTAMP_NTZ) AS dm_created_datetime

  FROM OPA_DEV.DBT_TEST.with_fl_acr_booking bk
  LEFT OUTER JOIN booking_service bs ON bk.sk_booking_id = bs.sk_booking_id AND bk.booking_version = bs.booking_version

  -- Group Season
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_dates gs ON CAST(COALESCE(SUBSTRING(bk.season_date, 1, 4) || SUBSTRING(bk.season_date, 6, 2) || SUBSTRING(bk.season_date, 9, 2), 20991231) AS INTEGER) = gs.bk_date

  -- Market source
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_agent ag ON bk.atcom_agent_id = ag.agt_id

  -- V1.06 Version of source market joins
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_market m ON bk.atcom_market_id = m.mkt_id
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_officename ofn ON m.off_id = ofn.off_name_id

  -- Channel
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_usercodes uc ON ag.agt_tp_id = uc.user_cd_id

  -- Currency
  -- LEFT OUTER JOIN ar_currency cur ON bk.atcom_sell_currency_id = cur.cur_id

  WHERE bk_booking IS NOT NULL
)

SELECT
  bf_1.bk_booking,
  bf_1.bk_primary_accom,
  bf_1.bk_primary_room,
  bf_1.bk_first_flight,
  bf_1.bk_last_flight,
  bf_1.bk_source_market,
  bf_1.bk_originating_system,
  bf_1.bk_booking_type,
  bf_1.bk_booking_status,
  bf_1.source_booking_id,
  bf_1.source_booking_version,
  bf_1.booking_created_datetime,
  bf_1.booking_confirmed_datetime,
  bf_1.booking_cancelled_datetime,
  bf_1.group_season,
  bf_1.sm_season,
  bf_1.channel_code,
  bf_1.channel_desc,
  bf_1.booked_board_code,
  bf_1.booked_board_name,
  bf_1.multi_room_booking,
  bf_1.number_of_booked_rooms,
  bf_1.multi_centre_booking,
  bf_1.departure_date,
  bf_1.return_date,
  bf_1.duration,
  bf_1.std_number_of_booking_adult_pax,
  bf_1.std_number_of_booking_child_pax,
  bf_1.std_number_of_booking_infant_pax,
  bf_1.std_number_of_booking_pax,
  bf_1.sm_number_of_booking_adult_pax,
  bf_1.sm_number_of_booking_teenager_pax,
  bf_1.sm_number_of_booking_child_pax,
  bf_1.sm_number_of_booking_infant_pax,
  bf_1.sm_number_of_booking_pax,
  bf_1.primary_gateway,
  COALESCE(bfm.sm_currency, fx.bk_sm_ccy, 'U') AS sm_currency,
  COALESCE(bfm.sm_revenue, 0) AS sm_revenue,
  COALESCE(bfm.sm_cnx_and_amend_revenue, 0) AS sm_cnx_and_amend_revenue,
  COALESCE(bfm.sm_accommodation_costs, 0) AS sm_accommodation_costs,
  COALESCE(bfm.sm_early_booking_discounts, 0) AS sm_early_booking_discounts,
  COALESCE(bfm.sm_late_booking_discounts, 0) AS sm_late_booking_discounts,
  COALESCE(bfm.sm_flying_costs, 0) AS sm_flying_costs,
  COALESCE(bfm.sm_other_costs, 0) AS sm_other_costs,
  COALESCE(bfm.sm_distribution_costs, 0) AS sm_distribution_costs,
  COALESCE(bfm.sm_non_margin_items, 0) AS sm_non_margin_items,
  COALESCE(bfm.sm_margin, 0) AS sm_margin,
  COALESCE(bfm.smg_currency, fx.bk_smg_ccy, 'U') AS smg_currency,
  COALESCE(bfm.smg_revenue, 0) AS smg_revenue,
  COALESCE(bfm.smg_cnx_and_amend_revenue, 0) AS smg_cnx_and_amend_revenue,
  COALESCE(bfm.smg_accommodation_costs, 0) AS smg_accommodation_costs,
  COALESCE(bfm.smg_early_booking_discounts, 0) AS smg_early_booking_discounts,
  COALESCE(bfm.smg_late_booking_discounts, 0) AS smg_late_booking_discounts,
  COALESCE(bfm.smg_flying_costs, 0) AS smg_flying_costs,
  COALESCE(bfm.smg_other_costs, 0) AS smg_other_costs,
  COALESCE(bfm.smg_distribution_costs, 0) AS smg_distribution_costs,
  COALESCE(bfm.smg_non_margin_items, 0) AS smg_non_margin_items,
  COALESCE(bfm.smg_margin, 0) AS smg_margin,
  COALESCE(bfm.rep_currency, fx.bk_rep_ccy, 'U') AS rep_currency,
  COALESCE(bfm.rep_revenue, 0) AS rep_revenue,
  COALESCE(bfm.rep_cnx_and_amend_revenue, 0) AS rep_cnx_and_amend_revenue,
  COALESCE(bfm.rep_accommodation_costs, 0) AS rep_accommodation_costs,
  COALESCE(bfm.rep_early_booking_discounts, 0) AS rep_early_booking_discounts,
  COALESCE(bfm.rep_late_booking_discounts, 0) AS rep_late_booking_discounts,
  COALESCE(bfm.rep_flying_costs, 0) AS rep_flying_costs,
  COALESCE(bfm.rep_other_costs, 0) AS rep_other_costs,
  COALESCE(bfm.rep_distribution_costs, 0) AS rep_distribution_costs,
  COALESCE(bfm.rep_non_margin_items, 0) AS rep_non_margin_items,
  COALESCE(bfm.rep_margin, 0) AS rep_margin,
  COALESCE(bfm.ffd_flag, 'N') AS ffd_flag,
  bf_1.record_type,
  bf_1.effective_from,
  bf_1.effective_to,
  bf_1.sm_created_datetime,
  bf_1.sm_updated_datetime,
  bf_1.dm_created_datetime,
  CASE WHEN bf_1.source_booking_version = MAX(bf_1.source_booking_version) OVER (PARTITION BY LEFT(bf_1.bk_booking, LENGTH(bf_1.bk_booking) - REGEXP_INSTR(bf_1.bk_booking, '|', 2)))
    THEN 'Y'
    ELSE 'N'
  END AS latest_record_indicator
FROM booking_fact_1 bf_1
LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_booking_fact_margin bfm ON bf_1.bk_booking = bfm.bk_booking
LEFT OUTER JOIN opa_fl_all.source_market sm ON bf_1.bk_source_market = sm.bk_source_market
LEFT OUTER JOIN opa_fl_uk.fx_rates_dim_uk fx
  ON bf_1.sm_season = fx.bk_season
  AND sm.source_market_code = fx.source_market_code
ORDER BY
  bk_booking
  ,source_booking_version
  ,record_type DESC
  );
2019-10-01 14:29:21,718 (Thread-1): SQL status: SUCCESS 1 in 2.09 seconds
2019-10-01 14:29:21,720 (Thread-1): On v_booking_fact_uk: COMMIT
2019-10-01 14:29:21,721 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:29:21,721 (Thread-1): On v_booking_fact_uk: COMMIT
2019-10-01 14:29:21,819 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:29:21,828 (Thread-1): 14:29:21 | 21 of 21 OK created view model DBT_TEST.v_booking_fact_uk............ [SUCCESS 1 in 2.56s]
2019-10-01 14:29:21,840 (MainThread): Using snowflake connection "master".
2019-10-01 14:29:21,840 (MainThread): On master: BEGIN
2019-10-01 14:29:21,954 (MainThread): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:29:21,954 (MainThread): On master: COMMIT
2019-10-01 14:29:21,954 (MainThread): Using snowflake connection "master".
2019-10-01 14:29:21,954 (MainThread): On master: COMMIT
2019-10-01 14:29:22,115 (MainThread): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:29:22,116 (MainThread): 14:29:22 | 
2019-10-01 14:29:22,117 (MainThread): 14:29:22 | Finished running 21 view models in 17.31s.
2019-10-01 14:29:22,117 (MainThread): Connection 'master' was left open.
2019-10-01 14:29:22,118 (MainThread): On master: Close
2019-10-01 14:29:22,265 (MainThread): Connection 'v_booking_fact_uk' was left open.
2019-10-01 14:29:22,265 (MainThread): On v_booking_fact_uk: Close
2019-10-01 14:29:22,437 (MainThread): 
2019-10-01 14:29:22,437 (MainThread): Completed successfully
2019-10-01 14:29:22,438 (MainThread): 
Done. PASS=21 WARN=0 ERROR=0 SKIP=0 TOTAL=21
2019-10-01 14:29:22,439 (MainThread): Flushing usage events
2019-10-01 14:46:33,726 (MainThread): Tracking: tracking
2019-10-01 14:46:33,728 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C92A88>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C92448>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C92648>]}
2019-10-01 14:46:34,040 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 14:46:34,041 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: ResourceWarning: unclosed <socket.socket fd=488, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('10.32.130.75', 58066), raddr=('54.174.31.151', 443)>

2019-10-01 14:46:34,042 (MainThread): Error sending message, disabling tracking
2019-10-01 14:46:34,063 (MainThread): Parsing macros\core.sql
2019-10-01 14:46:34,073 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 14:46:34,107 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 14:46:34,117 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 14:46:34,119 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 14:46:34,122 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 14:46:34,125 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 14:46:34,128 (MainThread): Parsing macros\etc\query.sql
2019-10-01 14:46:34,131 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 14:46:34,139 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 14:46:34,147 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 14:46:34,155 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 14:46:34,173 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 14:46:34,194 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 14:46:34,198 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 14:46:34,211 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 14:46:34,218 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 14:46:34,225 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 14:46:34,232 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 14:46:34,234 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 14:46:34,236 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 14:46:34,239 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 14:46:34,242 (MainThread): Parsing macros\adapters.sql
2019-10-01 14:46:34,259 (MainThread): Parsing macros\catalog.sql
2019-10-01 14:46:34,262 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 14:46:34,271 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 14:46:34,274 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 14:46:34,278 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 14:46:34,322 (MainThread): Parsing model.dbt_test.v_booking_fact_uk
2019-10-01 14:46:34,325 (MainThread): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 14:46:34,325 (MainThread): Opening a new connection, currently in state init
2019-10-01 14:46:34,327 (MainThread): c:\python\python37\lib\site-packages\botocore\vendored\requests\models.py:169: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working

2019-10-01 14:46:34,571 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\botocore\\vendored\\requests\\cacert.pem'>

2019-10-01 14:46:34,590 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\certifi\\cacert.pem'>

2019-10-01 14:46:35,179 (MainThread): Parsing model.dbt_test.with_ar_agent
2019-10-01 14:46:35,180 (MainThread): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 14:46:35,181 (MainThread): Re-using an available connection from the pool (formerly v_booking_fact_uk).
2019-10-01 14:46:35,185 (MainThread): Parsing model.dbt_test.with_ar_currency
2019-10-01 14:46:35,186 (MainThread): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 14:46:35,186 (MainThread): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 14:46:35,191 (MainThread): Parsing model.dbt_test.with_ar_market
2019-10-01 14:46:35,192 (MainThread): Acquiring new snowflake connection "with_ar_market".
2019-10-01 14:46:35,192 (MainThread): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 14:46:35,196 (MainThread): Parsing model.dbt_test.with_ar_officename
2019-10-01 14:46:35,197 (MainThread): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 14:46:35,197 (MainThread): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 14:46:35,204 (MainThread): Parsing model.dbt_test.with_ar_point
2019-10-01 14:46:35,206 (MainThread): Acquiring new snowflake connection "with_ar_point".
2019-10-01 14:46:35,206 (MainThread): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 14:46:35,211 (MainThread): Parsing model.dbt_test.with_ar_sellstatic
2019-10-01 14:46:35,212 (MainThread): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 14:46:35,212 (MainThread): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 14:46:35,217 (MainThread): Parsing model.dbt_test.with_ar_sellunit
2019-10-01 14:46:35,219 (MainThread): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 14:46:35,219 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 14:46:35,224 (MainThread): Parsing model.dbt_test.with_ar_staticroom
2019-10-01 14:46:35,225 (MainThread): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 14:46:35,225 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 14:46:35,230 (MainThread): Parsing model.dbt_test.with_ar_staticstock
2019-10-01 14:46:35,231 (MainThread): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 14:46:35,231 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 14:46:35,236 (MainThread): Parsing model.dbt_test.with_ar_transinvroute
2019-10-01 14:46:35,237 (MainThread): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 14:46:35,237 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 14:46:35,242 (MainThread): Parsing model.dbt_test.with_ar_transinvroutesector
2019-10-01 14:46:35,243 (MainThread): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:46:35,243 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 14:46:35,247 (MainThread): Parsing model.dbt_test.with_ar_transinvsector
2019-10-01 14:46:35,248 (MainThread): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 14:46:35,249 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 14:46:35,254 (MainThread): Parsing model.dbt_test.with_ar_transroute
2019-10-01 14:46:35,255 (MainThread): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 14:46:35,255 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 14:46:35,263 (MainThread): Parsing model.dbt_test.with_ar_usercodes
2019-10-01 14:46:35,265 (MainThread): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 14:46:35,265 (MainThread): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 14:46:35,275 (MainThread): Parsing model.dbt_test.with_booking_fact_margin
2019-10-01 14:46:35,277 (MainThread): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 14:46:35,277 (MainThread): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 14:46:35,285 (MainThread): Parsing model.dbt_test.with_dates
2019-10-01 14:46:35,287 (MainThread): Acquiring new snowflake connection "with_dates".
2019-10-01 14:46:35,287 (MainThread): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 14:46:35,296 (MainThread): Parsing model.dbt_test.with_fl_acr_booking
2019-10-01 14:46:35,298 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 14:46:35,299 (MainThread): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 14:46:35,304 (MainThread): Parsing model.dbt_test.with_fl_acr_booking_service
2019-10-01 14:46:35,305 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:46:35,305 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 14:46:35,311 (MainThread): Parsing model.dbt_test.with_fl_acr_service
2019-10-01 14:46:35,312 (MainThread): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 14:46:35,312 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 14:46:35,316 (MainThread): Parsing model.dbt_test.with_fl_acr_service_element
2019-10-01 14:46:35,317 (MainThread): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 14:46:35,317 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 14:46:35,408 (MainThread): Found 21 models, 0 tests, 0 snapshots, 0 analyses, 117 macros, 0 operations, 0 seed files, 0 sources
2019-10-01 14:46:35,412 (MainThread): 
2019-10-01 14:46:35,413 (MainThread): Acquiring new snowflake connection "master".
2019-10-01 14:46:35,413 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 14:46:35,460 (MainThread): Parsing macros\core.sql
2019-10-01 14:46:35,473 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 14:46:35,565 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 14:46:35,580 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 14:46:35,582 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 14:46:35,586 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 14:46:35,593 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 14:46:35,598 (MainThread): Parsing macros\etc\query.sql
2019-10-01 14:46:35,601 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 14:46:35,618 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 14:46:35,634 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 14:46:35,644 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 14:46:35,679 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 14:46:35,721 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 14:46:35,728 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 14:46:35,753 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 14:46:35,761 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 14:46:35,769 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 14:46:35,781 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 14:46:35,786 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 14:46:35,788 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 14:46:35,791 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 14:46:35,796 (MainThread): Parsing macros\adapters.sql
2019-10-01 14:46:35,820 (MainThread): Parsing macros\catalog.sql
2019-10-01 14:46:35,825 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 14:46:35,840 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 14:46:35,844 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 14:46:35,851 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 14:46:35,994 (MainThread): Using snowflake connection "master".
2019-10-01 14:46:35,994 (MainThread): On master: select distinct schema_name
    from OPA_DEV.information_schema.schemata
    where catalog_name ilike 'OPA_DEV'
2019-10-01 14:46:36,606 (MainThread): SQL status: SUCCESS 29 in 0.61 seconds
2019-10-01 14:46:36,672 (MainThread): Using snowflake connection "master".
2019-10-01 14:46:36,672 (MainThread): On master: BEGIN
2019-10-01 14:46:36,792 (MainThread): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:46:36,793 (MainThread): Using snowflake connection "master".
2019-10-01 14:46:36,793 (MainThread): On master: select
      table_catalog as database,
      table_name as name,
      table_schema as schema,
      case when table_type = 'BASE TABLE' then 'table'
           when table_type = 'VIEW' then 'view'
           when table_type = 'MATERIALIZED VIEW' then 'materializedview'
           when table_type = 'EXTERNAL TABLE' then 'externaltable'
           else table_type
      end as table_type
    from OPA_DEV.information_schema.tables
    where table_schema ilike 'dbt_test'
      and table_catalog ilike 'opa_dev'
2019-10-01 14:46:37,858 (MainThread): SQL status: SUCCESS 21 in 1.07 seconds
2019-10-01 14:46:37,872 (MainThread): On master: ROLLBACK
2019-10-01 14:46:38,016 (MainThread): Using snowflake connection "master".
2019-10-01 14:46:38,016 (MainThread): On master: BEGIN
2019-10-01 14:46:38,132 (MainThread): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:46:38,132 (MainThread): On master: COMMIT
2019-10-01 14:46:38,132 (MainThread): Using snowflake connection "master".
2019-10-01 14:46:38,132 (MainThread): On master: COMMIT
2019-10-01 14:46:38,279 (MainThread): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 14:46:38,279 (MainThread): 14:46:38 | Concurrency: 1 threads (target='dev')
2019-10-01 14:46:38,280 (MainThread): 14:46:38 | 
2019-10-01 14:46:38,283 (Thread-1): 14:46:38 | 1 of 21 START view model DBT_TEST.with_ar_agent...................... [RUN]
2019-10-01 14:46:38,284 (Thread-1): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 14:46:38,284 (Thread-1): Opening a new connection, currently in state init
2019-10-01 14:46:38,802 (Thread-1): Compiling model.dbt_test.with_ar_agent
2019-10-01 14:46:38,815 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 14:46:38,856 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 14:46:38,861 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:46:38,861 (Thread-1): On with_ar_agent: BEGIN
2019-10-01 14:46:38,982 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:46:38,983 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:46:38,983 (Thread-1): On with_ar_agent: create or replace view OPA_DEV.DBT_TEST.with_ar_agent as (
    

SELECT DISTINCT
  ag_1.agt_id
  ,ag_1.def_mkt_id
  ,ag_1.agt_tp_id
FROM opa_stg_uk.ar_agent ag_1
WHERE ag_1.file_dt = (SELECT MAX(ag_2.file_dt) FROM opa_stg_uk.ar_agent ag_2 WHERE ag_1.agt_id = ag_2.agt_id)
  );
2019-10-01 14:46:39,234 (Thread-1): SQL status: SUCCESS 1 in 0.25 seconds
2019-10-01 14:46:39,236 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 14:46:39,236 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:46:39,237 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 14:46:39,335 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:46:39,344 (Thread-1): 14:46:39 | 1 of 21 OK created view model DBT_TEST.with_ar_agent................. [SUCCESS 1 in 1.06s]
2019-10-01 14:46:39,345 (Thread-1): 14:46:39 | 2 of 21 START view model DBT_TEST.with_ar_market..................... [RUN]
2019-10-01 14:46:39,352 (Thread-1): Acquiring new snowflake connection "with_ar_market".
2019-10-01 14:46:39,352 (Thread-1): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 14:46:39,353 (Thread-1): Compiling model.dbt_test.with_ar_market
2019-10-01 14:46:39,364 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_market"
2019-10-01 14:46:39,381 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_market"
2019-10-01 14:46:39,387 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:46:39,387 (Thread-1): On with_ar_market: BEGIN
2019-10-01 14:46:39,578 (Thread-1): SQL status: SUCCESS 1 in 0.19 seconds
2019-10-01 14:46:39,578 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:46:39,579 (Thread-1): On with_ar_market: create or replace view OPA_DEV.DBT_TEST.with_ar_market as (
    

SELECT DISTINCT
  mk_1.mkt_id
  ,mk_1.off_id
FROM opa_stg_uk.ar_market mk_1
WHERE mk_1.file_dt = (SELECT MAX(mk_2.file_dt) FROM opa_stg_uk.ar_market mk_2 WHERE mk_1.mkt_id = mk_2.mkt_id)
  );
2019-10-01 14:46:39,819 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:46:39,820 (Thread-1): On with_ar_market: COMMIT
2019-10-01 14:46:39,821 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:46:39,821 (Thread-1): On with_ar_market: COMMIT
2019-10-01 14:46:39,912 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:46:39,923 (Thread-1): 14:46:39 | 2 of 21 OK created view model DBT_TEST.with_ar_market................ [SUCCESS 1 in 0.57s]
2019-10-01 14:46:39,924 (Thread-1): 14:46:39 | 3 of 21 START view model DBT_TEST.with_ar_officename................. [RUN]
2019-10-01 14:46:39,925 (Thread-1): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 14:46:39,926 (Thread-1): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 14:46:39,927 (Thread-1): Compiling model.dbt_test.with_ar_officename
2019-10-01 14:46:39,943 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 14:46:39,958 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 14:46:39,964 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:46:39,964 (Thread-1): On with_ar_officename: BEGIN
2019-10-01 14:46:40,081 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:46:40,082 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:46:40,082 (Thread-1): On with_ar_officename: create or replace view OPA_DEV.DBT_TEST.with_ar_officename as (
    

SELECT DISTINCT
  ofn_1.off_name_id
  ,ofn_1.cd
  ,ofn_1.name
  -- ,sm.source_market_code
FROM opa_stg_uk.ar_officename ofn_1
-- LEFT OUTER JOIN opa_stg_all.source_market sm ON 'UKATCOM|' || ofn_1.cd = bk_source_market
WHERE ofn_1.file_dt = (SELECT MAX(ofn_2.file_dt) FROM opa_stg_uk.ar_officename ofn_2 WHERE ofn_1.off_name_id = ofn_2.off_name_id)
  );
2019-10-01 14:46:40,326 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:46:40,328 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 14:46:40,328 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:46:40,328 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 14:46:40,424 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:46:40,428 (Thread-1): 14:46:40 | 3 of 21 OK created view model DBT_TEST.with_ar_officename............ [SUCCESS 1 in 0.50s]
2019-10-01 14:46:40,428 (Thread-1): 14:46:40 | 4 of 21 START view model DBT_TEST.with_ar_point...................... [RUN]
2019-10-01 14:46:40,431 (Thread-1): Acquiring new snowflake connection "with_ar_point".
2019-10-01 14:46:40,431 (Thread-1): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 14:46:40,431 (Thread-1): Compiling model.dbt_test.with_ar_point
2019-10-01 14:46:40,436 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_point"
2019-10-01 14:46:40,445 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_point"
2019-10-01 14:46:40,449 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:46:40,449 (Thread-1): On with_ar_point: BEGIN
2019-10-01 14:46:40,567 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:46:40,567 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:46:40,567 (Thread-1): On with_ar_point: create or replace view OPA_DEV.DBT_TEST.with_ar_point as (
    

SELECT
  p.pt_id
  ,p.pt_cd
FROM opa_stg_uk.ar_point p
WHERE p.file_dt = (SELECT MAX(p_2.file_dt) FROM opa_stg_uk.ar_point p_2 WHERE p.pt_id = p_2.pt_id)
  );
2019-10-01 14:46:40,833 (Thread-1): SQL status: SUCCESS 1 in 0.27 seconds
2019-10-01 14:46:40,834 (Thread-1): On with_ar_point: COMMIT
2019-10-01 14:46:40,834 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:46:40,834 (Thread-1): On with_ar_point: COMMIT
2019-10-01 14:46:40,927 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:46:40,931 (Thread-1): 14:46:40 | 4 of 21 OK created view model DBT_TEST.with_ar_point................. [SUCCESS 1 in 0.50s]
2019-10-01 14:46:40,932 (Thread-1): 14:46:40 | 5 of 21 START view model DBT_TEST.with_ar_sellstatic................. [RUN]
2019-10-01 14:46:40,933 (Thread-1): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 14:46:40,933 (Thread-1): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 14:46:40,934 (Thread-1): Compiling model.dbt_test.with_ar_sellstatic
2019-10-01 14:46:40,939 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 14:46:40,954 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 14:46:40,961 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:46:40,961 (Thread-1): On with_ar_sellstatic: BEGIN
2019-10-01 14:46:41,101 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:46:41,102 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:46:41,102 (Thread-1): On with_ar_sellstatic: create or replace view OPA_DEV.DBT_TEST.with_ar_sellstatic as (
    

SELECT
  sls_1.sell_stc_id
  ,sls_1.stc_stk_id
FROM opa_stg_uk.ar_sellstatic sls_1
WHERE sls_1.file_dt = (SELECT MAX(sls_2.file_dt) FROM opa_stg_uk.ar_sellstatic sls_2 WHERE sls_1.sell_stc_id = sls_2.sell_stc_id)
  );
2019-10-01 14:46:41,360 (Thread-1): SQL status: SUCCESS 1 in 0.26 seconds
2019-10-01 14:46:41,362 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 14:46:41,362 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:46:41,363 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 14:46:41,511 (Thread-1): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 14:46:41,516 (Thread-1): 14:46:41 | 5 of 21 OK created view model DBT_TEST.with_ar_sellstatic............ [SUCCESS 1 in 0.58s]
2019-10-01 14:46:41,517 (Thread-1): 14:46:41 | 6 of 21 START view model DBT_TEST.with_ar_sellunit................... [RUN]
2019-10-01 14:46:41,520 (Thread-1): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 14:46:41,520 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 14:46:41,521 (Thread-1): Compiling model.dbt_test.with_ar_sellunit
2019-10-01 14:46:41,526 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 14:46:41,542 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 14:46:41,548 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:46:41,548 (Thread-1): On with_ar_sellunit: BEGIN
2019-10-01 14:46:41,676 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:46:41,677 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:46:41,677 (Thread-1): On with_ar_sellunit: create or replace view OPA_DEV.DBT_TEST.with_ar_sellunit as (
    

SELECT
  su.sell_unit_id
  ,su.rm_id
  ,su.bb_cd_id
FROM opa_stg_uk.ar_sellunit su
WHERE su.file_dt = (SELECT MAX(su_2.file_dt) FROM opa_stg_uk.ar_sellunit su_2 WHERE su.sell_unit_id = su_2.sell_unit_id)
  );
2019-10-01 14:46:41,933 (Thread-1): SQL status: SUCCESS 1 in 0.26 seconds
2019-10-01 14:46:41,935 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 14:46:41,936 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:46:41,936 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 14:46:42,041 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:46:42,044 (Thread-1): 14:46:42 | 6 of 21 OK created view model DBT_TEST.with_ar_sellunit.............. [SUCCESS 1 in 0.52s]
2019-10-01 14:46:42,045 (Thread-1): 14:46:42 | 7 of 21 START view model DBT_TEST.with_ar_staticroom................. [RUN]
2019-10-01 14:46:42,047 (Thread-1): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 14:46:42,047 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 14:46:42,048 (Thread-1): Compiling model.dbt_test.with_ar_staticroom
2019-10-01 14:46:42,057 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 14:46:42,066 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 14:46:42,070 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:46:42,071 (Thread-1): On with_ar_staticroom: BEGIN
2019-10-01 14:46:42,211 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:46:42,212 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:46:42,212 (Thread-1): On with_ar_staticroom: create or replace view OPA_DEV.DBT_TEST.with_ar_staticroom as (
    

SELECT
  sr.stc_rm_id
  ,sr.stc_stk_id
  ,sr.rm_id
FROM opa_stg_uk.ar_staticroom sr
WHERE sr.file_dt = (SELECT MAX(sr_2.file_dt) FROM opa_stg_uk.ar_staticroom sr_2 WHERE sr.stc_rm_id = sr_2.stc_rm_id)
  );
2019-10-01 14:46:42,436 (Thread-1): SQL status: SUCCESS 1 in 0.22 seconds
2019-10-01 14:46:42,438 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 14:46:42,438 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:46:42,438 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 14:46:42,576 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:46:42,580 (Thread-1): 14:46:42 | 7 of 21 OK created view model DBT_TEST.with_ar_staticroom............ [SUCCESS 1 in 0.53s]
2019-10-01 14:46:42,581 (Thread-1): 14:46:42 | 8 of 21 START view model DBT_TEST.with_ar_staticstock................ [RUN]
2019-10-01 14:46:42,584 (Thread-1): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 14:46:42,584 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 14:46:42,585 (Thread-1): Compiling model.dbt_test.with_ar_staticstock
2019-10-01 14:46:42,589 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 14:46:42,599 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 14:46:42,603 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:46:42,603 (Thread-1): On with_ar_staticstock: BEGIN
2019-10-01 14:46:42,721 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:46:42,722 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:46:42,723 (Thread-1): On with_ar_staticstock: create or replace view OPA_DEV.DBT_TEST.with_ar_staticstock as (
    

SELECT
  ss.stc_stk_id
  ,ss.cd
FROM opa_stg_uk.ar_staticstock ss
WHERE ss.file_dt = (SELECT MAX(ss_2.file_dt) FROM opa_stg_uk.ar_staticstock ss_2 WHERE ss.stc_stk_id = ss_2.stc_stk_id)
  );
2019-10-01 14:46:42,945 (Thread-1): SQL status: SUCCESS 1 in 0.22 seconds
2019-10-01 14:46:42,946 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 14:46:42,946 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:46:42,946 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 14:46:43,047 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:46:43,051 (Thread-1): 14:46:43 | 8 of 21 OK created view model DBT_TEST.with_ar_staticstock........... [SUCCESS 1 in 0.46s]
2019-10-01 14:46:43,053 (Thread-1): 14:46:43 | 9 of 21 START view model DBT_TEST.with_ar_transinvroute.............. [RUN]
2019-10-01 14:46:43,057 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 14:46:43,057 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 14:46:43,057 (Thread-1): Compiling model.dbt_test.with_ar_transinvroute
2019-10-01 14:46:43,066 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 14:46:43,081 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 14:46:43,085 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:46:43,085 (Thread-1): On with_ar_transinvroute: BEGIN
2019-10-01 14:46:43,203 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:46:43,204 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:46:43,204 (Thread-1): On with_ar_transinvroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroute as (
    

SELECT
  tir.trans_inv_route_id
  ,tir.trans_route_id
FROM opa_stg_uk.ar_transinvroute tir
WHERE tir.file_dt = (SELECT MAX(tir_2.file_dt) FROM opa_stg_uk.ar_transinvroute tir_2 WHERE tir.trans_inv_route_id = tir_2.trans_inv_route_id)
  );
2019-10-01 14:46:43,432 (Thread-1): SQL status: SUCCESS 1 in 0.23 seconds
2019-10-01 14:46:43,433 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 14:46:43,434 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:46:43,434 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 14:46:43,530 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:46:43,534 (Thread-1): 14:46:43 | 9 of 21 OK created view model DBT_TEST.with_ar_transinvroute......... [SUCCESS 1 in 0.48s]
2019-10-01 14:46:43,535 (Thread-1): 14:46:43 | 10 of 21 START view model DBT_TEST.with_ar_transinvroutesector....... [RUN]
2019-10-01 14:46:43,537 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:46:43,537 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 14:46:43,537 (Thread-1): Compiling model.dbt_test.with_ar_transinvroutesector
2019-10-01 14:46:43,542 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 14:46:43,551 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 14:46:43,555 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:46:43,555 (Thread-1): On with_ar_transinvroutesector: BEGIN
2019-10-01 14:46:43,750 (Thread-1): SQL status: SUCCESS 1 in 0.19 seconds
2019-10-01 14:46:43,751 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:46:43,751 (Thread-1): On with_ar_transinvroutesector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroutesector as (
    

SELECT
  tirs.trans_inv_route_id
  ,tirs.trans_inv_sec_id
  ,tirs.trans_inv_route_sec_id
FROM opa_stg_uk.ar_transinvroutesector tirs
WHERE tirs.file_dt = (SELECT MAX(tirs_2.file_dt) FROM opa_stg_uk.ar_transinvroutesector tirs_2 WHERE tirs.trans_inv_route_sec_id = tirs_2.trans_inv_route_sec_id)
  );
2019-10-01 14:46:44,030 (Thread-1): SQL status: SUCCESS 1 in 0.28 seconds
2019-10-01 14:46:44,033 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 14:46:44,033 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:46:44,033 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 14:46:44,123 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:46:44,131 (Thread-1): 14:46:44 | 10 of 21 OK created view model DBT_TEST.with_ar_transinvroutesector.. [SUCCESS 1 in 0.59s]
2019-10-01 14:46:44,133 (Thread-1): 14:46:44 | 11 of 21 START view model DBT_TEST.with_ar_transinvsector............ [RUN]
2019-10-01 14:46:44,136 (Thread-1): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 14:46:44,137 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 14:46:44,138 (Thread-1): Compiling model.dbt_test.with_ar_transinvsector
2019-10-01 14:46:44,150 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 14:46:44,162 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 14:46:44,167 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:46:44,167 (Thread-1): On with_ar_transinvsector: BEGIN
2019-10-01 14:46:44,276 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:46:44,277 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:46:44,277 (Thread-1): On with_ar_transinvsector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvsector as (
    

SELECT
  tis.trans_inv_sec_id
  ,tis.dep_dt_tm
FROM opa_stg_uk.ar_transinvsector tis
WHERE tis.file_dt = (SELECT MAX(tis_2.file_dt) FROM opa_stg_uk.ar_transinvsector tis_2 WHERE tis.trans_inv_sec_id = tis_2.trans_inv_sec_id)
  );
2019-10-01 14:46:44,520 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:46:44,521 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 14:46:44,521 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:46:44,521 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 14:46:44,632 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:46:44,636 (Thread-1): 14:46:44 | 11 of 21 OK created view model DBT_TEST.with_ar_transinvsector....... [SUCCESS 1 in 0.50s]
2019-10-01 14:46:44,637 (Thread-1): 14:46:44 | 12 of 21 START view model DBT_TEST.with_ar_transroute................ [RUN]
2019-10-01 14:46:44,640 (Thread-1): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 14:46:44,640 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 14:46:44,641 (Thread-1): Compiling model.dbt_test.with_ar_transroute
2019-10-01 14:46:44,648 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 14:46:44,657 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 14:46:44,662 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:46:44,662 (Thread-1): On with_ar_transroute: BEGIN
2019-10-01 14:46:44,775 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:46:44,776 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:46:44,776 (Thread-1): On with_ar_transroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transroute as (
    

SELECT
	tr.trans_route_id
	,tr.route_cd
FROM opa_stg_uk.ar_transroute tr
WHERE tr.file_dt = (SELECT MAX(tr_2.file_dt) FROM opa_stg_uk.ar_transroute tr_2 WHERE tr.trans_route_id = tr_2.trans_route_id)
  );
2019-10-01 14:46:45,025 (Thread-1): SQL status: SUCCESS 1 in 0.25 seconds
2019-10-01 14:46:45,027 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 14:46:45,027 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:46:45,027 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 14:46:45,144 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:46:45,154 (Thread-1): 14:46:45 | 12 of 21 OK created view model DBT_TEST.with_ar_transroute........... [SUCCESS 1 in 0.51s]
2019-10-01 14:46:45,155 (Thread-1): 14:46:45 | 13 of 21 START view model DBT_TEST.with_ar_usercodes................. [RUN]
2019-10-01 14:46:45,158 (Thread-1): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 14:46:45,158 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 14:46:45,159 (Thread-1): Compiling model.dbt_test.with_ar_usercodes
2019-10-01 14:46:45,170 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 14:46:45,185 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 14:46:45,190 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:46:45,190 (Thread-1): On with_ar_usercodes: BEGIN
2019-10-01 14:46:45,294 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:46:45,295 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:46:45,295 (Thread-1): On with_ar_usercodes: create or replace view OPA_DEV.DBT_TEST.with_ar_usercodes as (
    

SELECT DISTINCT
  uc_1.user_cd_id
  ,uc_1.cd
  ,uc_1.name
FROM opa_stg_uk.ar_usercodes uc_1
WHERE uc_1.file_dt = (SELECT MAX(uc_2.file_dt) FROM opa_stg_uk.ar_usercodes uc_2 WHERE uc_1.user_cd_id = uc_2.user_cd_id)
  );
2019-10-01 14:46:45,600 (Thread-1): SQL status: SUCCESS 1 in 0.30 seconds
2019-10-01 14:46:45,602 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 14:46:45,602 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:46:45,603 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 14:46:45,697 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:46:45,701 (Thread-1): 14:46:45 | 13 of 21 OK created view model DBT_TEST.with_ar_usercodes............ [SUCCESS 1 in 0.54s]
2019-10-01 14:46:45,702 (Thread-1): 14:46:45 | 14 of 21 START view model DBT_TEST.with_booking_fact_margin.......... [RUN]
2019-10-01 14:46:45,704 (Thread-1): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 14:46:45,704 (Thread-1): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 14:46:45,705 (Thread-1): Compiling model.dbt_test.with_booking_fact_margin
2019-10-01 14:46:45,713 (Thread-1): Writing injected SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 14:46:45,727 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 14:46:45,732 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:46:45,732 (Thread-1): On with_booking_fact_margin: BEGIN
2019-10-01 14:46:45,865 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:46:45,866 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:46:45,866 (Thread-1): On with_booking_fact_margin: create or replace view OPA_DEV.DBT_TEST.with_booking_fact_margin as (
    

SELECT
  bff_1.bk_booking
  ,bff_1.ffd_flag
  ,bff_1.sm_currency
  ,bff_1.sm_revenue
  ,bff_1.sm_cnx_and_amend_revenue
  ,bff_1.sm_accommodation_costs
  ,bff_1.sm_early_booking_discounts
  ,bff_1.sm_late_booking_discounts
  ,bff_1.sm_flying_costs
  ,bff_1.sm_other_costs
  ,bff_1.sm_distribution_costs
  ,bff_1.sm_non_margin_items
  ,bff_1.sm_margin
  ,bff_1.smg_currency
  ,bff_1.smg_revenue
  ,bff_1.smg_cnx_and_amend_revenue
  ,bff_1.smg_accommodation_costs
  ,bff_1.smg_early_booking_discounts
  ,bff_1.smg_late_booking_discounts
  ,bff_1.smg_flying_costs
  ,bff_1.smg_other_costs
  ,bff_1.smg_distribution_costs
  ,bff_1.smg_non_margin_items
  ,bff_1.smg_margin
  ,bff_1.rep_currency
  ,bff_1.rep_revenue
  ,bff_1.rep_cnx_and_amend_revenue
  ,bff_1.rep_accommodation_costs
  ,bff_1.rep_early_booking_discounts
  ,bff_1.rep_late_booking_discounts
  ,bff_1.rep_flying_costs
  ,bff_1.rep_other_costs
  ,bff_1.rep_distribution_costs
  ,bff_1.rep_non_margin_items
  ,bff_1.rep_margin
FROM opa_fl_uk.v_booking_fact_margin_uk bff_1
  );
2019-10-01 14:46:46,196 (Thread-1): SQL status: SUCCESS 1 in 0.33 seconds
2019-10-01 14:46:46,198 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 14:46:46,198 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:46:46,199 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 14:46:46,294 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:46:46,297 (Thread-1): 14:46:46 | 14 of 21 OK created view model DBT_TEST.with_booking_fact_margin..... [SUCCESS 1 in 0.59s]
2019-10-01 14:46:46,299 (Thread-1): 14:46:46 | 15 of 21 START view model DBT_TEST.with_dates........................ [RUN]
2019-10-01 14:46:46,300 (Thread-1): Acquiring new snowflake connection "with_dates".
2019-10-01 14:46:46,300 (Thread-1): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 14:46:46,301 (Thread-1): Compiling model.dbt_test.with_dates
2019-10-01 14:46:46,306 (Thread-1): Writing injected SQL for node "model.dbt_test.with_dates"
2019-10-01 14:46:46,314 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_dates"
2019-10-01 14:46:46,320 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:46:46,320 (Thread-1): On with_dates: BEGIN
2019-10-01 14:46:46,464 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:46:46,465 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:46:46,465 (Thread-1): On with_dates: create or replace view OPA_DEV.DBT_TEST.with_dates as (
    


SELECT
	dd.bk_date
	,dd.group_season_code
FROM opa_stg_all.date_dim dd
  );
2019-10-01 14:46:46,689 (Thread-1): SQL status: SUCCESS 1 in 0.22 seconds
2019-10-01 14:46:46,691 (Thread-1): On with_dates: COMMIT
2019-10-01 14:46:46,692 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:46:46,692 (Thread-1): On with_dates: COMMIT
2019-10-01 14:46:46,790 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:46:46,799 (Thread-1): 14:46:46 | 15 of 21 OK created view model DBT_TEST.with_dates................... [SUCCESS 1 in 0.50s]
2019-10-01 14:46:46,800 (Thread-1): 14:46:46 | 16 of 21 START view model DBT_TEST.with_fl_acr_booking............... [RUN]
2019-10-01 14:46:46,801 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 14:46:46,802 (Thread-1): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 14:46:46,802 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking
2019-10-01 14:46:46,811 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 14:46:46,826 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 14:46:46,835 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:46:46,835 (Thread-1): On with_fl_acr_booking: BEGIN
2019-10-01 14:46:46,973 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:46:46,974 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:46:46,974 (Thread-1): On with_fl_acr_booking: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking as (
    

SELECT
  bk_1.sk_booking_id
  ,bk_1.booking_version
  ,bk_1.atcom_res_id
  ,bk_1.atcom_res_version
  ,bk_1.atcom_market_id -- CG ADDED in V1.06 for new Source Market Derivation
  ,bk_1.number_of_adults
  ,bk_1.number_of_children
  ,bk_1.number_of_infants
  ,bk_1.number_of_passengers
  ,bk_1.sk_season_id
  ,bk_1.booking_status
  ,bk_1.atcom_agent_id
  ,bk_1.atcom_sell_currency_id
  ,bk_1.season_date
  ,bk_1.confirmed_on
  ,bk_1.cancelled_on
  ,bk_1.source_created_on
  ,bk_1.modified_on
  ,bk_1.effective_from
  ,DATEADD('second', -1, LEAD(bk_1.effective_from) OVER (PARTITION BY bk_1.sk_booking_id ORDER BY bk_1.booking_version)) AS lead_effective_from
  ,bk_1.effective_to
  ,bk_1.dwh_created_on
  ,bk_1.dwh_modified_on

FROM opa_stg_uk.fl_acr_booking bk_1
WHERE bk_1.file_dt = (SELECT MAX(bk_2.file_dt) FROM opa_stg_uk.fl_acr_booking bk_2 WHERE bk_1.sk_booking_id = bk_2.sk_booking_id AND bk_1.booking_version = bk_2.booking_version)
AND bk_1.booking_version = (SELECT MAX(bk_3.booking_version) FROM opa_stg_uk.fl_acr_booking bk_3 WHERE bk_1.sk_booking_id = bk_3.sk_booking_id)
AND (bk_1.sk_season_id > 201701 OR bk_1.sk_booking_id IS NULL)

-- To be removed when running against all bookings
AND bk_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 14:46:47,212 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:46:47,215 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 14:46:47,215 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:46:47,215 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 14:46:47,316 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:46:47,324 (Thread-1): 14:46:47 | 16 of 21 OK created view model DBT_TEST.with_fl_acr_booking.......... [SUCCESS 1 in 0.52s]
2019-10-01 14:46:47,326 (Thread-1): 14:46:47 | 17 of 21 START view model DBT_TEST.with_fl_acr_booking_service....... [RUN]
2019-10-01 14:46:47,326 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:46:47,326 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 14:46:47,327 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking_service
2019-10-01 14:46:47,340 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 14:46:47,359 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 14:46:47,366 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:46:47,366 (Thread-1): On with_fl_acr_booking_service: BEGIN
2019-10-01 14:46:47,486 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:46:47,487 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:46:47,487 (Thread-1): On with_fl_acr_booking_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking_service as (
    

SELECT
  bk_ser_1.sk_booking_service_id
  ,bk_ser_1.sk_booking_id
  ,bk_ser_1.sk_service_id
  ,bk_ser_1.service_version
  ,bk_ser_1.booking_version
FROM opa_stg_uk.fl_acr_booking_service bk_ser_1
WHERE bk_ser_1.file_dt = (SELECT MAX(bk_ser_2.file_dt) FROM opa_stg_uk.fl_acr_booking_service bk_ser_2 WHERE bk_ser_1.sk_booking_service_id = bk_ser_2.sk_booking_service_id)
AND bk_ser_1.booking_version = (SELECT MAX(bk_ser_3.booking_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_3 WHERE bk_ser_1.sk_booking_id = bk_ser_3.sk_booking_id)
AND bk_ser_1.service_version = (SELECT MAX(bk_ser_4.service_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_4 WHERE bk_ser_1.sk_service_id = bk_ser_4.sk_service_id)

-- To be removed when running against all bookings
AND bk_ser_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 14:46:47,713 (Thread-1): SQL status: SUCCESS 1 in 0.23 seconds
2019-10-01 14:46:47,715 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 14:46:47,715 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:46:47,716 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 14:46:47,817 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:46:47,826 (Thread-1): 14:46:47 | 17 of 21 OK created view model DBT_TEST.with_fl_acr_booking_service.. [SUCCESS 1 in 0.50s]
2019-10-01 14:46:47,827 (Thread-1): 14:46:47 | 18 of 21 START view model DBT_TEST.with_fl_acr_service............... [RUN]
2019-10-01 14:46:47,830 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 14:46:47,830 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 14:46:47,831 (Thread-1): Compiling model.dbt_test.with_fl_acr_service
2019-10-01 14:46:47,839 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 14:46:47,855 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 14:46:47,861 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:46:47,861 (Thread-1): On with_fl_acr_service: BEGIN
2019-10-01 14:46:47,976 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:46:47,977 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:46:47,977 (Thread-1): On with_fl_acr_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service as (
    

SELECT
  ser_1.sk_service_id
  ,ser_1.atcom_ser_id
  ,ser_1.atcom_dep_point_id
  ,ser_1.service_version
  ,ser_1.service_status
  ,ser_1.direction
  ,ser_1.sell_type
  ,ser_1.service_type
  ,ser_1.flight_type_code
  ,ser_1.service_start_date1
  ,ser_1.service_end_date1
  ,ser_1.departure_flight_number
  ,ser_1.atcom_arr_point_id
  ,ser_1.source_stock_type_code
FROM opa_stg_uk.fl_acr_service ser_1
WHERE ser_1.file_dt = (SELECT MAX(ser_2.file_dt) FROM opa_stg_uk.fl_acr_service ser_2 WHERE ser_1.sk_service_id = ser_2.sk_service_id AND ser_1.service_version = ser_2.service_version)
  );
2019-10-01 14:46:48,216 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:46:48,218 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 14:46:48,218 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:46:48,218 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 14:46:48,313 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:46:48,317 (Thread-1): 14:46:48 | 18 of 21 OK created view model DBT_TEST.with_fl_acr_service.......... [SUCCESS 1 in 0.49s]
2019-10-01 14:46:48,318 (Thread-1): 14:46:48 | 19 of 21 START view model DBT_TEST.with_fl_acr_service_element....... [RUN]
2019-10-01 14:46:48,318 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 14:46:48,318 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 14:46:48,318 (Thread-1): Compiling model.dbt_test.with_fl_acr_service_element
2019-10-01 14:46:48,323 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 14:46:48,332 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 14:46:48,338 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:46:48,338 (Thread-1): On with_fl_acr_service_element: BEGIN
2019-10-01 14:46:48,455 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:46:48,456 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:46:48,456 (Thread-1): On with_fl_acr_service_element: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service_element as (
    

SELECT
  ser_e_1.sk_service_id
  ,ser_e_1.service_version
  ,ser_e_1.atcom_sub_ser_id
FROM opa_stg_uk.fl_acr_service_element ser_e_1
WHERE ser_e_1.file_dt = (SELECT MAX(ser_e_2.file_dt) FROM opa_stg_uk.fl_acr_service_element ser_e_2 WHERE ser_e_1.sk_service_element_id = ser_e_2.sk_service_element_id)
  );
2019-10-01 14:46:48,684 (Thread-1): SQL status: SUCCESS 1 in 0.23 seconds
2019-10-01 14:46:48,685 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 14:46:48,685 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:46:48,685 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 14:46:48,898 (Thread-1): SQL status: SUCCESS 1 in 0.21 seconds
2019-10-01 14:46:48,901 (Thread-1): 14:46:48 | 19 of 21 OK created view model DBT_TEST.with_fl_acr_service_element.. [SUCCESS 1 in 0.58s]
2019-10-01 14:46:48,902 (Thread-1): 14:46:48 | 20 of 21 START view model DBT_TEST.with_ar_currency.................. [RUN]
2019-10-01 14:46:48,905 (Thread-1): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 14:46:48,905 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 14:46:48,906 (Thread-1): Compiling model.dbt_test.with_ar_currency
2019-10-01 14:46:48,913 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 14:46:48,926 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 14:46:48,930 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:46:48,930 (Thread-1): On with_ar_currency: BEGIN
2019-10-01 14:46:49,062 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:46:49,063 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:46:49,063 (Thread-1): On with_ar_currency: create or replace view OPA_DEV.DBT_TEST.with_ar_currency as (
    

SELECT DISTINCT
  cur_1.cur_id
  ,cur_1.cd
  ,cur_1.name
FROM opa_stg_uk.ar_currency cur_1
WHERE cur_1.file_dt = (SELECT MAX(cur_2.file_dt) FROM opa_stg_uk.ar_currency cur_2 WHERE cur_1.cur_id = cur_2.cur_id)
  );
2019-10-01 14:46:49,303 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:46:49,304 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 14:46:49,304 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:46:49,304 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 14:46:49,447 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:46:49,455 (Thread-1): 14:46:49 | 20 of 21 OK created view model DBT_TEST.with_ar_currency............. [SUCCESS 1 in 0.55s]
2019-10-01 14:46:49,457 (Thread-1): 14:46:49 | 21 of 21 START table model DBT_TEST.v_booking_fact_uk................ [RUN]
2019-10-01 14:46:49,460 (Thread-1): Acquiring new snowflake connection "v_booking_fact_uk".
2019-10-01 14:46:49,460 (Thread-1): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 14:46:49,461 (Thread-1): Compiling model.dbt_test.v_booking_fact_uk
2019-10-01 14:46:49,510 (Thread-1): Writing injected SQL for node "model.dbt_test.v_booking_fact_uk"
2019-10-01 14:46:49,540 (Thread-1): Dropping relation "OPA_DEV"."DBT_TEST"."V_BOOKING_FACT_UK" because it is of type view
2019-10-01 14:46:49,549 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:46:49,550 (Thread-1): On v_booking_fact_uk: drop view if exists "OPA_DEV"."DBT_TEST"."V_BOOKING_FACT_UK" cascade
2019-10-01 14:46:49,753 (Thread-1): SQL status: SUCCESS 1 in 0.20 seconds
2019-10-01 14:46:49,783 (Thread-1): Writing runtime SQL for node "model.dbt_test.v_booking_fact_uk"
2019-10-01 14:46:49,951 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:46:49,952 (Thread-1): On v_booking_fact_uk: BEGIN
2019-10-01 14:46:50,084 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:46:50,085 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:46:50,085 (Thread-1): On v_booking_fact_uk: create or replace transient table OPA_DEV.DBT_TEST.v_booking_fact_uk
      as (

WITH booking_service AS (
	SELECT
		bk_ser.sk_booking_id
		,bk_ser.booking_version
		,bk_ser.sk_service_id
		,bk_ser.service_version
		,bk_ser.sk_booking_service_id
		,ser.service_type
		,ser.source_stock_type_code
		,ser.sell_type
		,ser.service_status
		,ser.flight_type_code
		,ser.service_start_date1
		,ser.service_end_date1
		,tis.dep_dt_tm
		,ser.departure_flight_number
		,ser.direction
		,tr.route_cd
		,dpt.pt_cd
		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN apt.pt_cd
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				AND ser.service_status = 'CON'
				THEN apt.pt_cd
				ELSE NULL
			END
		END AS min_flight_gateway

		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
					AND ser.service_status = 'CON'
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		END	AS min_flight_id

		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MAX(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MAX(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
					AND ser.service_status = 'CON'
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		END AS max_flight_id


		-- MULTICENTRE
		,CASE WHEN
			-- All multicentre services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END	AS min_multi_center_date

		,CASE WHEN
			-- All multicentre services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS max_multi_center_date


		-- ACCOM
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU'))
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_accom_date
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU'))
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS max_accom_date


		-- CRUISE
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_cruise_date
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END max_cruise_date


		-- FLIGHT
		,CASE WHEN
			-- All flight services cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_flight_date
		,CASE WHEN
			-- All flight services cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END	AS max_flight_date

		,sts.cd AS accom
		,su.bb_cd_id AS board_cd
		,uc_3.name AS board_name
		,str.stc_rm_id AS room

		-- Booking type derivation part 1
		,CASE WHEN
				-- No outbound flight services on the booking are third party
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
		THEN 0
		ELSE
			CASE WHEN
				-- All outbound flight services are 3PF
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
					+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				=
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

			OR
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
			THEN 1
			ELSE 0
			END
		END AS tpf_out_count
		,CASE WHEN
				-- No outbound flight services on the booking are third party
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
		THEN 0
		ELSE
			CASE WHEN
				-- All outbound flight services are 3PF
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
					+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				=
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

			OR
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
			THEN 1
			ELSE 0
			END
		END AS tpf_in_count
		,CASE WHEN
				CASE WHEN
						-- No outbound flight services on the booking are third party
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
				THEN 0
				ELSE
					CASE WHEN
						-- All outbound flight services are 3PF
						SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
							+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
						=
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

					OR
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
					THEN 1
					ELSE 0
					END
				END
			+
				CASE WHEN
						-- No outbound flight services on the booking are third party
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
				THEN 0
				ELSE
					CASE WHEN
						-- All outbound flight services are 3PF
						SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
							+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
						=
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

					OR
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
					THEN 1
					ELSE 0
					END
				END
		> 0
			THEN 'Y'
			ELSE 'N'
		END AS tpf_indicator
		,CASE WHEN
				-- All accom cancelled
				SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS accom_count
		,CASE WHEN
				-- All cruise cancelled
				SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS cruise_count
		,CASE WHEN
				-- All flight out cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS flight_out_count
		,CASE WHEN
				-- All flight in cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS flight_ret_count
		,CASE WHEN
				-- All ahoc services cancelled
				SUM(CASE WHEN ser.service_type = 'AHOC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'AHOC' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'AHOC' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS thirdparty_count

		,CASE WHEN
				-- All flight out first date cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN ser.service_start_date1 ELSE NULL END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN ser.service_start_date1 ELSE NULL END
		END AS flight_out_first_date
		,CASE WHEN
				-- All flight in first date cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN ser.service_start_date1 ELSE NULL END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN ser.service_start_date1 ELSE NULL END
		END AS flight_ret_first_date

	-- Service and subservice
	FROM OPA_DEV.DBT_TEST.with_fl_acr_booking_service bk_ser
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_fl_acr_service ser ON bk_ser.sk_service_id = ser.sk_service_id AND bk_ser.service_version = ser.service_version
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_fl_acr_service_element ser_e ON ser.sk_service_id = ser_e.sk_service_id AND ser.service_version = ser_e.service_version

	-- Accom
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_sellstatic sls ON ser.atcom_ser_id = sls.sell_stc_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_staticstock sts ON sls.stc_stk_id = sts.stc_stk_id

	-- Room
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_sellunit su ON ser_e.atcom_sub_ser_id = su.sell_unit_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_staticroom str ON sts.stc_stk_id = str.stc_stk_id AND su.rm_id = str.rm_id

	-- Board
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_usercodes uc_3 ON su.bb_cd_id = uc_3.user_cd_id

	-- Flight
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvroute tir ON ser.atcom_ser_id = tir.trans_inv_route_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transroute tr ON tir.trans_route_id = tr.trans_route_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvroutesector tirs ON tir.trans_inv_route_id = tirs.trans_inv_route_id
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvsector tis ON tirs.trans_inv_sec_id = tis.trans_inv_sec_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_point dpt ON ser.atcom_dep_point_id = dpt.pt_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_point apt ON ser.atcom_arr_point_id = apt.pt_id

	ORDER BY
		bk_ser.sk_booking_id
		,bk_ser.booking_version
		,ser.source_stock_type_code

)
,booking_fact_1 AS (
  SELECT DISTINCT
    CASE WHEN bk.atcom_res_id IS NULL THEN NULL ELSE 'UKATCOM|' || bk.atcom_res_id || '|' || bk.booking_version END AS bk_booking
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS bk_primary_accom
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS bk_primary_room
    ,COALESCE(
      CASE WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
        AND COUNT(DISTINCT bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) > 1
          THEN 'MULTI'
      WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
        AND COUNT(DISTINCT bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = 1
          THEN 'UKATCOM|' || MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      WHEN SUM(bs.flight_out_count) OVER (PARTITION BY bk.atcom_res_id) > 1
        THEN 'MULTI'
        ELSE 'UKATCOM|' || MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      END
    , 'U') AS bk_first_flight
    ,COALESCE(
      CASE WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
          THEN NULL
      WHEN SUM(bs.flight_ret_count) OVER (PARTITION BY bk.atcom_res_id) > 1
        THEN 'MULTI'
        ELSE 'UKATCOM|' || MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      END
    , 'U') AS bk_last_flight
    ,CASE WHEN ofn.cd IS NULL
      THEN 'UKATCOM|U'
      ELSE 'UKATCOM|' || ofn.cd
    END AS bk_source_market
    ,'UKATCOM' AS bk_originating_system
    ,CASE WHEN
        -- Third party flight
        SUM(CASE WHEN bs.tpf_indicator = 'Y' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|3PF'

      WHEN
        -- Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGAF'

      WHEN
        -- Cruise and Flight Package
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) > 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGCF'

      WHEN
        -- Cruise and Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGCAF'

      WHEN
        -- Multi Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMAF'

      WHEN
        -- Multi Cruise and Flight Package
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMCF'

      WHEN
        -- Multi Accommodation and One Cruise and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMACF'

      WHEN
        -- Multi Cruise and One Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMCAF'

      WHEN
        -- Multi Accommodation and Multi Cruise and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMAMCF'

      WHEN
        -- Single Accommodation Only
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCA'

      WHEN
        -- Multi Accommodation Only
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCMA'

      WHEN
        -- Accommodation and Flight Other
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 1
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCOTH'

      WHEN
        -- Flight Only Return Outbound First
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id) < MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTROF'

      WHEN
        -- Flight Only Return Inbound First
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id) < MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTRIF'

      WHEN
        -- Flight only same day return
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id) = MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTSDR'

      WHEN
        -- Flight Only One Way Outbound
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTOBO'

      WHEN
        -- Flight Only One Way Inbound
        SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTIBO'

      WHEN
        -- Single Cruise Only
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|CRU' -- Granular code = 'CRUSGL'

      WHEN
        -- Multi Cruise Only
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|CRU' -- Granular code = 'CRUMLT'

      WHEN
        -- Third party
        SUM(bs.thirdparty_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|TPB' -- Granular code = 'TPB'

      ELSE 'UKATCOM|OTH'
    END AS bk_booking_type
    ,CASE WHEN bk.booking_status IS NULL
      THEN 'U'
      ELSE 'UKATCOM|' || bk.booking_status
    END AS bk_booking_status
    ,bk.atcom_res_id AS source_booking_id
    --,bk.atcom_res_version AS source_booking_version
    ,bk.booking_version AS source_booking_version -- swapped to FL version not Atcom version PiT
    ,COALESCE(CAST(bk.source_created_on AS TIMESTAMP), CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_created_datetime
    ,COALESCE(bk.confirmed_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_confirmed_datetime
    ,COALESCE(bk.cancelled_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_cancelled_datetime
    ,gs.group_season_code AS group_season
    ,CASE WHEN bk.sk_season_id IS NULL OR bk.sk_season_id = -1 OR bk.sk_season_id = -2
      THEN NULL
      ELSE
        CASE WHEN SUBSTRING(bk.sk_season_id, 5, 2) = 01
          THEN 'S' || SUBSTRING(bk.sk_season_id, 3, 2)
          ELSE 'W' || SUBSTRING(bk.sk_season_id, 3, 2)
        END
    END AS sm_season
    ,CASE WHEN uc.cd IS NULL
      THEN NULL
      ELSE 'UKATCOM|' || uc.cd
    END AS channel_code
    ,CASE WHEN uc.name IS NULL
      THEN NULL
      ELSE 'UKATCOM|' || uc.name
    END AS channel_desc
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS booked_board_code
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS booked_board_name
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
      ELSE
        CASE WHEN SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
    END AS multi_room_booking
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      ELSE
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
    END AS number_of_booked_rooms
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
      ELSE
        CASE WHEN COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
    END AS multi_centre_booking
    ,COALESCE(bk.season_date,CAST('2999-12-31 23:59:59.0' AS DATE)) AS departure_date
    ,COALESCE(
      bs.max_multi_center_date,
      bs.max_accom_date,
      bs.max_cruise_date,
      bs.max_flight_date,
      CAST('2999-12-31 23:59:59.0' AS DATE)
    ) AS return_date
    ,CASE WHEN
      COALESCE(bk.season_date, CAST('2999-12-31 23:59:59.0' AS DATE)) = CAST('2999-12-31 23:59:59.0' AS DATE)
    OR
      COALESCE(
        bs.max_multi_center_date,
        bs.max_accom_date,
        bs.max_cruise_date,
        bs.max_flight_date,
        CAST('2999-12-31 23:59:59.0' AS DATE)
      ) = CAST('2999-12-31 23:59:59.0' AS DATE)
    THEN 0
    ELSE
      DATEDIFF('DAY',
        bk.season_date
      ,
        COALESCE(
          bs.max_multi_center_date,
          bs.max_accom_date,
          bs.max_cruise_date,
          bs.max_flight_date)
      )
    END	AS DURATION
    ,COALESCE(bk.number_of_adults, 0) AS std_number_of_booking_adult_pax
    ,COALESCE(bk.number_of_children, 0) AS std_number_of_booking_child_pax
    ,COALESCE(bk.number_of_infants, 0) AS std_number_of_booking_infant_pax
    ,COALESCE(bk.number_of_passengers, 0) AS std_number_of_booking_pax
    ,COALESCE(bk.number_of_adults, 0) AS sm_number_of_booking_adult_pax
    ,0 AS sm_number_of_booking_teenager_pax
    ,COALESCE(bk.number_of_children, 0) AS sm_number_of_booking_child_pax
    ,COALESCE(bk.number_of_infants, 0) AS sm_number_of_booking_infant_pax
    ,COALESCE(bk.number_of_passengers, 0) AS sm_number_of_booking_pax
    ,CASE WHEN COUNT(DISTINCT bs.min_flight_gateway) OVER (PARTITION BY bk.atcom_res_id) > 1
      THEN 'MULTI'
      ELSE MIN(bs.min_flight_gateway) OVER (PARTITION BY bk.atcom_res_id)
    END AS primary_gateway
    -- ,cur.name AS currency
    ,'Insert' AS record_type
    ,COALESCE(bk.effective_from, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS effective_from
    ,COALESCE(
      bk.lead_effective_from
      ,bk.effective_to
      ,CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)
    ) AS effective_to
    ,COALESCE(bk.dwh_created_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS sm_created_datetime
    ,COALESCE(bk.dwh_modified_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS sm_updated_datetime
    ,CAST(CONVERT_TIMEZONE('Europe/London',CURRENT_TIMESTAMP()) AS TIMESTAMP_NTZ) AS dm_created_datetime

  FROM OPA_DEV.DBT_TEST.with_fl_acr_booking bk
  LEFT OUTER JOIN booking_service bs ON bk.sk_booking_id = bs.sk_booking_id AND bk.booking_version = bs.booking_version

  -- Group Season
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_dates gs ON CAST(COALESCE(SUBSTRING(bk.season_date, 1, 4) || SUBSTRING(bk.season_date, 6, 2) || SUBSTRING(bk.season_date, 9, 2), 20991231) AS INTEGER) = gs.bk_date

  -- Market source
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_agent ag ON bk.atcom_agent_id = ag.agt_id

  -- V1.06 Version of source market joins
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_market m ON bk.atcom_market_id = m.mkt_id
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_officename ofn ON m.off_id = ofn.off_name_id

  -- Channel
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_usercodes uc ON ag.agt_tp_id = uc.user_cd_id

  -- Currency
  -- LEFT OUTER JOIN ar_currency cur ON bk.atcom_sell_currency_id = cur.cur_id

  WHERE bk_booking IS NOT NULL
)

SELECT
  bf_1.bk_booking,
  bf_1.bk_primary_accom,
  bf_1.bk_primary_room,
  bf_1.bk_first_flight,
  bf_1.bk_last_flight,
  bf_1.bk_source_market,
  bf_1.bk_originating_system,
  bf_1.bk_booking_type,
  bf_1.bk_booking_status,
  bf_1.source_booking_id,
  bf_1.source_booking_version,
  bf_1.booking_created_datetime,
  bf_1.booking_confirmed_datetime,
  bf_1.booking_cancelled_datetime,
  bf_1.group_season,
  bf_1.sm_season,
  bf_1.channel_code,
  bf_1.channel_desc,
  bf_1.booked_board_code,
  bf_1.booked_board_name,
  bf_1.multi_room_booking,
  bf_1.number_of_booked_rooms,
  bf_1.multi_centre_booking,
  bf_1.departure_date,
  bf_1.return_date,
  bf_1.duration,
  bf_1.std_number_of_booking_adult_pax,
  bf_1.std_number_of_booking_child_pax,
  bf_1.std_number_of_booking_infant_pax,
  bf_1.std_number_of_booking_pax,
  bf_1.sm_number_of_booking_adult_pax,
  bf_1.sm_number_of_booking_teenager_pax,
  bf_1.sm_number_of_booking_child_pax,
  bf_1.sm_number_of_booking_infant_pax,
  bf_1.sm_number_of_booking_pax,
  bf_1.primary_gateway,
  COALESCE(bfm.sm_currency, fx.bk_sm_ccy, 'U') AS sm_currency,
  COALESCE(bfm.sm_revenue, 0) AS sm_revenue,
  COALESCE(bfm.sm_cnx_and_amend_revenue, 0) AS sm_cnx_and_amend_revenue,
  COALESCE(bfm.sm_accommodation_costs, 0) AS sm_accommodation_costs,
  COALESCE(bfm.sm_early_booking_discounts, 0) AS sm_early_booking_discounts,
  COALESCE(bfm.sm_late_booking_discounts, 0) AS sm_late_booking_discounts,
  COALESCE(bfm.sm_flying_costs, 0) AS sm_flying_costs,
  COALESCE(bfm.sm_other_costs, 0) AS sm_other_costs,
  COALESCE(bfm.sm_distribution_costs, 0) AS sm_distribution_costs,
  COALESCE(bfm.sm_non_margin_items, 0) AS sm_non_margin_items,
  COALESCE(bfm.sm_margin, 0) AS sm_margin,
  COALESCE(bfm.smg_currency, fx.bk_smg_ccy, 'U') AS smg_currency,
  COALESCE(bfm.smg_revenue, 0) AS smg_revenue,
  COALESCE(bfm.smg_cnx_and_amend_revenue, 0) AS smg_cnx_and_amend_revenue,
  COALESCE(bfm.smg_accommodation_costs, 0) AS smg_accommodation_costs,
  COALESCE(bfm.smg_early_booking_discounts, 0) AS smg_early_booking_discounts,
  COALESCE(bfm.smg_late_booking_discounts, 0) AS smg_late_booking_discounts,
  COALESCE(bfm.smg_flying_costs, 0) AS smg_flying_costs,
  COALESCE(bfm.smg_other_costs, 0) AS smg_other_costs,
  COALESCE(bfm.smg_distribution_costs, 0) AS smg_distribution_costs,
  COALESCE(bfm.smg_non_margin_items, 0) AS smg_non_margin_items,
  COALESCE(bfm.smg_margin, 0) AS smg_margin,
  COALESCE(bfm.rep_currency, fx.bk_rep_ccy, 'U') AS rep_currency,
  COALESCE(bfm.rep_revenue, 0) AS rep_revenue,
  COALESCE(bfm.rep_cnx_and_amend_revenue, 0) AS rep_cnx_and_amend_revenue,
  COALESCE(bfm.rep_accommodation_costs, 0) AS rep_accommodation_costs,
  COALESCE(bfm.rep_early_booking_discounts, 0) AS rep_early_booking_discounts,
  COALESCE(bfm.rep_late_booking_discounts, 0) AS rep_late_booking_discounts,
  COALESCE(bfm.rep_flying_costs, 0) AS rep_flying_costs,
  COALESCE(bfm.rep_other_costs, 0) AS rep_other_costs,
  COALESCE(bfm.rep_distribution_costs, 0) AS rep_distribution_costs,
  COALESCE(bfm.rep_non_margin_items, 0) AS rep_non_margin_items,
  COALESCE(bfm.rep_margin, 0) AS rep_margin,
  COALESCE(bfm.ffd_flag, 'N') AS ffd_flag,
  bf_1.record_type,
  bf_1.effective_from,
  bf_1.effective_to,
  bf_1.sm_created_datetime,
  bf_1.sm_updated_datetime,
  bf_1.dm_created_datetime,
  CASE WHEN bf_1.source_booking_version = MAX(bf_1.source_booking_version) OVER (PARTITION BY LEFT(bf_1.bk_booking, LENGTH(bf_1.bk_booking) - REGEXP_INSTR(bf_1.bk_booking, '|', 2)))
    THEN 'Y'
    ELSE 'N'
  END AS latest_record_indicator
FROM booking_fact_1 bf_1
LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_booking_fact_margin bfm ON bf_1.bk_booking = bfm.bk_booking
LEFT OUTER JOIN opa_fl_all.source_market sm ON bf_1.bk_source_market = sm.bk_source_market
LEFT OUTER JOIN opa_fl_uk.fx_rates_dim_uk fx
  ON bf_1.sm_season = fx.bk_season
  AND sm.source_market_code = fx.source_market_code
ORDER BY
  bk_booking
  ,source_booking_version
  ,record_type DESC
      );
2019-10-01 14:48:02,740 (Thread-1): SQL status: SUCCESS 1 in 72.65 seconds
2019-10-01 14:48:02,742 (Thread-1): On v_booking_fact_uk: COMMIT
2019-10-01 14:48:02,742 (Thread-1): Using snowflake connection "v_booking_fact_uk".
2019-10-01 14:48:02,743 (Thread-1): On v_booking_fact_uk: COMMIT
2019-10-01 14:48:02,842 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:48:02,853 (Thread-1): 14:48:02 | 21 of 21 OK created table model DBT_TEST.v_booking_fact_uk........... [SUCCESS 1 in 73.39s]
2019-10-01 14:51:53,354 (MainThread): Using snowflake connection "master".
2019-10-01 14:51:53,354 (MainThread): On master: BEGIN
2019-10-01 14:51:53,692 (MainThread): SQL status: SUCCESS 1 in 0.34 seconds
2019-10-01 14:51:53,693 (MainThread): On master: COMMIT
2019-10-01 14:51:53,693 (MainThread): Using snowflake connection "master".
2019-10-01 14:51:53,694 (MainThread): On master: COMMIT
2019-10-01 14:51:53,846 (MainThread): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 14:51:53,847 (MainThread): 14:51:53 | 
2019-10-01 14:51:53,848 (MainThread): 14:51:53 | Finished running 20 view models, 1 table model in 318.43s.
2019-10-01 14:51:53,848 (MainThread): Connection 'master' was left open.
2019-10-01 14:51:53,849 (MainThread): On master: Close
2019-10-01 14:51:54,074 (MainThread): Connection 'v_booking_fact_uk' was left open.
2019-10-01 14:51:54,075 (MainThread): On v_booking_fact_uk: Close
2019-10-01 14:51:54,505 (MainThread): 
2019-10-01 14:51:54,506 (MainThread): Completed successfully
2019-10-01 14:51:54,507 (MainThread): 
Done. PASS=21 WARN=0 ERROR=0 SKIP=0 TOTAL=21
2019-10-01 14:51:54,507 (MainThread): Flushing usage events
2019-10-01 14:52:47,695 (MainThread): Tracking: tracking
2019-10-01 14:52:47,698 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C93B08>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C93508>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000000005C8F6C8>]}
2019-10-01 14:52:47,972 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead

2019-10-01 14:52:47,973 (MainThread): c:\python\python37\lib\site-packages\snowplow_tracker\emitters.py:225: ResourceWarning: unclosed <socket.socket fd=488, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('10.32.130.75', 58279), raddr=('54.164.98.48', 443)>

2019-10-01 14:52:47,974 (MainThread): Error sending message, disabling tracking
2019-10-01 14:52:47,998 (MainThread): Parsing macros\core.sql
2019-10-01 14:52:48,007 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 14:52:48,045 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 14:52:48,055 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 14:52:48,057 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 14:52:48,060 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 14:52:48,064 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 14:52:48,067 (MainThread): Parsing macros\etc\query.sql
2019-10-01 14:52:48,070 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 14:52:48,078 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 14:52:48,086 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 14:52:48,096 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 14:52:48,113 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 14:52:48,134 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 14:52:48,137 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 14:52:48,151 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 14:52:48,157 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 14:52:48,164 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 14:52:48,172 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 14:52:48,175 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 14:52:48,177 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 14:52:48,180 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 14:52:48,185 (MainThread): Parsing macros\adapters.sql
2019-10-01 14:52:48,204 (MainThread): Parsing macros\catalog.sql
2019-10-01 14:52:48,208 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 14:52:48,217 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 14:52:48,220 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 14:52:48,224 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 14:52:48,269 (MainThread): Parsing model.dbt_test.booking_fact_uk
2019-10-01 14:52:48,271 (MainThread): Acquiring new snowflake connection "booking_fact_uk".
2019-10-01 14:52:48,271 (MainThread): Opening a new connection, currently in state init
2019-10-01 14:52:48,272 (MainThread): c:\python\python37\lib\site-packages\botocore\vendored\requests\models.py:169: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working

2019-10-01 14:52:48,612 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\botocore\\vendored\\requests\\cacert.pem'>

2019-10-01 14:52:48,642 (MainThread): c:\python\python37\lib\site-packages\snowflake\connector\ocsp_asn1crypto.py:84: ResourceWarning: unclosed file <_io.BufferedReader name='c:\\python\\python37\\lib\\site-packages\\certifi\\cacert.pem'>

2019-10-01 14:52:49,669 (MainThread): Parsing model.dbt_test.with_ar_agent
2019-10-01 14:52:49,670 (MainThread): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 14:52:49,670 (MainThread): Re-using an available connection from the pool (formerly booking_fact_uk).
2019-10-01 14:52:49,674 (MainThread): Parsing model.dbt_test.with_ar_currency
2019-10-01 14:52:49,675 (MainThread): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 14:52:49,676 (MainThread): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 14:52:49,680 (MainThread): Parsing model.dbt_test.with_ar_market
2019-10-01 14:52:49,681 (MainThread): Acquiring new snowflake connection "with_ar_market".
2019-10-01 14:52:49,681 (MainThread): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 14:52:49,686 (MainThread): Parsing model.dbt_test.with_ar_officename
2019-10-01 14:52:49,687 (MainThread): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 14:52:49,687 (MainThread): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 14:52:49,693 (MainThread): Parsing model.dbt_test.with_ar_point
2019-10-01 14:52:49,694 (MainThread): Acquiring new snowflake connection "with_ar_point".
2019-10-01 14:52:49,694 (MainThread): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 14:52:49,699 (MainThread): Parsing model.dbt_test.with_ar_sellstatic
2019-10-01 14:52:49,700 (MainThread): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 14:52:49,700 (MainThread): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 14:52:49,705 (MainThread): Parsing model.dbt_test.with_ar_sellunit
2019-10-01 14:52:49,706 (MainThread): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 14:52:49,706 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 14:52:49,711 (MainThread): Parsing model.dbt_test.with_ar_staticroom
2019-10-01 14:52:49,712 (MainThread): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 14:52:49,712 (MainThread): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 14:52:49,718 (MainThread): Parsing model.dbt_test.with_ar_staticstock
2019-10-01 14:52:49,719 (MainThread): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 14:52:49,720 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 14:52:49,724 (MainThread): Parsing model.dbt_test.with_ar_transinvroute
2019-10-01 14:52:49,725 (MainThread): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 14:52:49,725 (MainThread): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 14:52:49,730 (MainThread): Parsing model.dbt_test.with_ar_transinvroutesector
2019-10-01 14:52:49,731 (MainThread): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:52:49,731 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 14:52:49,737 (MainThread): Parsing model.dbt_test.with_ar_transinvsector
2019-10-01 14:52:49,739 (MainThread): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 14:52:49,739 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 14:52:49,744 (MainThread): Parsing model.dbt_test.with_ar_transroute
2019-10-01 14:52:49,745 (MainThread): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 14:52:49,745 (MainThread): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 14:52:49,751 (MainThread): Parsing model.dbt_test.with_ar_usercodes
2019-10-01 14:52:49,752 (MainThread): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 14:52:49,752 (MainThread): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 14:52:49,758 (MainThread): Parsing model.dbt_test.with_booking_fact_margin
2019-10-01 14:52:49,759 (MainThread): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 14:52:49,759 (MainThread): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 14:52:49,764 (MainThread): Parsing model.dbt_test.with_dates
2019-10-01 14:52:49,765 (MainThread): Acquiring new snowflake connection "with_dates".
2019-10-01 14:52:49,765 (MainThread): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 14:52:49,769 (MainThread): Parsing model.dbt_test.with_fl_acr_booking
2019-10-01 14:52:49,770 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 14:52:49,770 (MainThread): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 14:52:49,775 (MainThread): Parsing model.dbt_test.with_fl_acr_booking_service
2019-10-01 14:52:49,776 (MainThread): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:52:49,776 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 14:52:49,781 (MainThread): Parsing model.dbt_test.with_fl_acr_service
2019-10-01 14:52:49,784 (MainThread): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 14:52:49,784 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 14:52:49,793 (MainThread): Parsing model.dbt_test.with_fl_acr_service_element
2019-10-01 14:52:49,794 (MainThread): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 14:52:49,794 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 14:52:49,858 (MainThread): Found 21 models, 0 tests, 0 snapshots, 0 analyses, 117 macros, 0 operations, 0 seed files, 0 sources
2019-10-01 14:52:49,863 (MainThread): 
2019-10-01 14:52:49,865 (MainThread): Acquiring new snowflake connection "master".
2019-10-01 14:52:49,866 (MainThread): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 14:52:49,912 (MainThread): Parsing macros\core.sql
2019-10-01 14:52:49,923 (MainThread): Parsing macros\adapters\common.sql
2019-10-01 14:52:50,009 (MainThread): Parsing macros\etc\datetime.sql
2019-10-01 14:52:50,029 (MainThread): Parsing macros\etc\get_custom_alias.sql
2019-10-01 14:52:50,032 (MainThread): Parsing macros\etc\get_custom_schema.sql
2019-10-01 14:52:50,041 (MainThread): Parsing macros\etc\get_relation_comment.sql
2019-10-01 14:52:50,047 (MainThread): Parsing macros\etc\is_incremental.sql
2019-10-01 14:52:50,052 (MainThread): Parsing macros\etc\query.sql
2019-10-01 14:52:50,056 (MainThread): Parsing macros\materializations\helpers.sql
2019-10-01 14:52:50,071 (MainThread): Parsing macros\materializations\common\merge.sql
2019-10-01 14:52:50,080 (MainThread): Parsing macros\materializations\incremental\incremental.sql
2019-10-01 14:52:50,088 (MainThread): Parsing macros\materializations\seed\seed.sql
2019-10-01 14:52:50,123 (MainThread): Parsing macros\materializations\snapshot\snapshot.sql
2019-10-01 14:52:50,150 (MainThread): Parsing macros\materializations\snapshot\snapshot_merge.sql
2019-10-01 14:52:50,155 (MainThread): Parsing macros\materializations\snapshot\strategies.sql
2019-10-01 14:52:50,183 (MainThread): Parsing macros\materializations\table\table.sql
2019-10-01 14:52:50,192 (MainThread): Parsing macros\materializations\view\create_or_replace_view.sql
2019-10-01 14:52:50,208 (MainThread): Parsing macros\materializations\view\view.sql
2019-10-01 14:52:50,224 (MainThread): Parsing macros\schema_tests\accepted_values.sql
2019-10-01 14:52:50,230 (MainThread): Parsing macros\schema_tests\not_null.sql
2019-10-01 14:52:50,235 (MainThread): Parsing macros\schema_tests\relationships.sql
2019-10-01 14:52:50,240 (MainThread): Parsing macros\schema_tests\unique.sql
2019-10-01 14:52:50,246 (MainThread): Parsing macros\adapters.sql
2019-10-01 14:52:50,270 (MainThread): Parsing macros\catalog.sql
2019-10-01 14:52:50,276 (MainThread): Parsing macros\materializations\incremental.sql
2019-10-01 14:52:50,290 (MainThread): Parsing macros\materializations\merge.sql
2019-10-01 14:52:50,295 (MainThread): Parsing macros\materializations\table.sql
2019-10-01 14:52:50,303 (MainThread): Parsing macros\materializations\view.sql
2019-10-01 14:52:50,552 (MainThread): Using snowflake connection "master".
2019-10-01 14:52:50,552 (MainThread): On master: select distinct schema_name
    from OPA_DEV.information_schema.schemata
    where catalog_name ilike 'OPA_DEV'
2019-10-01 14:52:51,080 (MainThread): SQL status: SUCCESS 29 in 0.53 seconds
2019-10-01 14:52:51,130 (MainThread): Using snowflake connection "master".
2019-10-01 14:52:51,130 (MainThread): On master: BEGIN
2019-10-01 14:52:51,282 (MainThread): SQL status: SUCCESS 1 in 0.15 seconds
2019-10-01 14:52:51,282 (MainThread): Using snowflake connection "master".
2019-10-01 14:52:51,282 (MainThread): On master: select
      table_catalog as database,
      table_name as name,
      table_schema as schema,
      case when table_type = 'BASE TABLE' then 'table'
           when table_type = 'VIEW' then 'view'
           when table_type = 'MATERIALIZED VIEW' then 'materializedview'
           when table_type = 'EXTERNAL TABLE' then 'externaltable'
           else table_type
      end as table_type
    from OPA_DEV.information_schema.tables
    where table_schema ilike 'dbt_test'
      and table_catalog ilike 'opa_dev'
2019-10-01 14:52:52,500 (MainThread): SQL status: SUCCESS 20 in 1.22 seconds
2019-10-01 14:52:52,522 (MainThread): On master: ROLLBACK
2019-10-01 14:52:52,680 (MainThread): Using snowflake connection "master".
2019-10-01 14:52:52,680 (MainThread): On master: BEGIN
2019-10-01 14:52:52,789 (MainThread): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:52:52,789 (MainThread): On master: COMMIT
2019-10-01 14:52:52,789 (MainThread): Using snowflake connection "master".
2019-10-01 14:52:52,789 (MainThread): On master: COMMIT
2019-10-01 14:52:52,956 (MainThread): SQL status: SUCCESS 1 in 0.17 seconds
2019-10-01 14:52:52,957 (MainThread): 14:52:52 | Concurrency: 1 threads (target='dev')
2019-10-01 14:52:52,957 (MainThread): 14:52:52 | 
2019-10-01 14:52:52,963 (Thread-1): 14:52:52 | 1 of 21 START view model DBT_TEST.with_ar_agent...................... [RUN]
2019-10-01 14:52:52,964 (Thread-1): Acquiring new snowflake connection "with_ar_agent".
2019-10-01 14:52:52,964 (Thread-1): Opening a new connection, currently in state init
2019-10-01 14:52:53,467 (Thread-1): Compiling model.dbt_test.with_ar_agent
2019-10-01 14:52:53,477 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 14:52:53,533 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_agent"
2019-10-01 14:52:53,538 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:52:53,538 (Thread-1): On with_ar_agent: BEGIN
2019-10-01 14:52:53,657 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:52:53,658 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:52:53,658 (Thread-1): On with_ar_agent: create or replace view OPA_DEV.DBT_TEST.with_ar_agent as (
    

SELECT DISTINCT
  ag_1.agt_id
  ,ag_1.def_mkt_id
  ,ag_1.agt_tp_id
FROM opa_stg_uk.ar_agent ag_1
WHERE ag_1.file_dt = (SELECT MAX(ag_2.file_dt) FROM opa_stg_uk.ar_agent ag_2 WHERE ag_1.agt_id = ag_2.agt_id)
  );
2019-10-01 14:52:53,946 (Thread-1): SQL status: SUCCESS 1 in 0.29 seconds
2019-10-01 14:52:53,948 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 14:52:53,948 (Thread-1): Using snowflake connection "with_ar_agent".
2019-10-01 14:52:53,948 (Thread-1): On with_ar_agent: COMMIT
2019-10-01 14:52:54,047 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:52:54,056 (Thread-1): 14:52:54 | 1 of 21 OK created view model DBT_TEST.with_ar_agent................. [SUCCESS 1 in 1.09s]
2019-10-01 14:52:54,057 (Thread-1): 14:52:54 | 2 of 21 START view model DBT_TEST.with_ar_market..................... [RUN]
2019-10-01 14:52:54,060 (Thread-1): Acquiring new snowflake connection "with_ar_market".
2019-10-01 14:52:54,060 (Thread-1): Re-using an available connection from the pool (formerly with_ar_agent).
2019-10-01 14:52:54,061 (Thread-1): Compiling model.dbt_test.with_ar_market
2019-10-01 14:52:54,073 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_market"
2019-10-01 14:52:54,088 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_market"
2019-10-01 14:52:54,093 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:52:54,094 (Thread-1): On with_ar_market: BEGIN
2019-10-01 14:52:54,222 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:52:54,223 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:52:54,223 (Thread-1): On with_ar_market: create or replace view OPA_DEV.DBT_TEST.with_ar_market as (
    

SELECT DISTINCT
  mk_1.mkt_id
  ,mk_1.off_id
FROM opa_stg_uk.ar_market mk_1
WHERE mk_1.file_dt = (SELECT MAX(mk_2.file_dt) FROM opa_stg_uk.ar_market mk_2 WHERE mk_1.mkt_id = mk_2.mkt_id)
  );
2019-10-01 14:52:54,476 (Thread-1): SQL status: SUCCESS 1 in 0.25 seconds
2019-10-01 14:52:54,478 (Thread-1): On with_ar_market: COMMIT
2019-10-01 14:52:54,478 (Thread-1): Using snowflake connection "with_ar_market".
2019-10-01 14:52:54,479 (Thread-1): On with_ar_market: COMMIT
2019-10-01 14:52:54,579 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:52:54,585 (Thread-1): 14:52:54 | 2 of 21 OK created view model DBT_TEST.with_ar_market................ [SUCCESS 1 in 0.52s]
2019-10-01 14:52:54,586 (Thread-1): 14:52:54 | 3 of 21 START view model DBT_TEST.with_ar_officename................. [RUN]
2019-10-01 14:52:54,588 (Thread-1): Acquiring new snowflake connection "with_ar_officename".
2019-10-01 14:52:54,588 (Thread-1): Re-using an available connection from the pool (formerly with_ar_market).
2019-10-01 14:52:54,589 (Thread-1): Compiling model.dbt_test.with_ar_officename
2019-10-01 14:52:54,599 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 14:52:54,612 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_officename"
2019-10-01 14:52:54,618 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:52:54,618 (Thread-1): On with_ar_officename: BEGIN
2019-10-01 14:52:54,738 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:52:54,739 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:52:54,739 (Thread-1): On with_ar_officename: create or replace view OPA_DEV.DBT_TEST.with_ar_officename as (
    

SELECT DISTINCT
  ofn_1.off_name_id
  ,ofn_1.cd
  ,ofn_1.name
  -- ,sm.source_market_code
FROM opa_stg_uk.ar_officename ofn_1
-- LEFT OUTER JOIN opa_stg_all.source_market sm ON 'UKATCOM|' || ofn_1.cd = bk_source_market
WHERE ofn_1.file_dt = (SELECT MAX(ofn_2.file_dt) FROM opa_stg_uk.ar_officename ofn_2 WHERE ofn_1.off_name_id = ofn_2.off_name_id)
  );
2019-10-01 14:52:54,991 (Thread-1): SQL status: SUCCESS 1 in 0.25 seconds
2019-10-01 14:52:54,993 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 14:52:54,994 (Thread-1): Using snowflake connection "with_ar_officename".
2019-10-01 14:52:54,994 (Thread-1): On with_ar_officename: COMMIT
2019-10-01 14:52:55,090 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:52:55,103 (Thread-1): 14:52:55 | 3 of 21 OK created view model DBT_TEST.with_ar_officename............ [SUCCESS 1 in 0.51s]
2019-10-01 14:52:55,104 (Thread-1): 14:52:55 | 4 of 21 START view model DBT_TEST.with_ar_point...................... [RUN]
2019-10-01 14:52:55,107 (Thread-1): Acquiring new snowflake connection "with_ar_point".
2019-10-01 14:52:55,108 (Thread-1): Re-using an available connection from the pool (formerly with_ar_officename).
2019-10-01 14:52:55,109 (Thread-1): Compiling model.dbt_test.with_ar_point
2019-10-01 14:52:55,123 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_point"
2019-10-01 14:52:55,139 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_point"
2019-10-01 14:52:55,145 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:52:55,146 (Thread-1): On with_ar_point: BEGIN
2019-10-01 14:52:55,276 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:52:55,276 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:52:55,277 (Thread-1): On with_ar_point: create or replace view OPA_DEV.DBT_TEST.with_ar_point as (
    

SELECT
  p.pt_id
  ,p.pt_cd
FROM opa_stg_uk.ar_point p
WHERE p.file_dt = (SELECT MAX(p_2.file_dt) FROM opa_stg_uk.ar_point p_2 WHERE p.pt_id = p_2.pt_id)
  );
2019-10-01 14:52:55,518 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:52:55,519 (Thread-1): On with_ar_point: COMMIT
2019-10-01 14:52:55,520 (Thread-1): Using snowflake connection "with_ar_point".
2019-10-01 14:52:55,520 (Thread-1): On with_ar_point: COMMIT
2019-10-01 14:52:55,636 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:52:55,645 (Thread-1): 14:52:55 | 4 of 21 OK created view model DBT_TEST.with_ar_point................. [SUCCESS 1 in 0.53s]
2019-10-01 14:52:55,646 (Thread-1): 14:52:55 | 5 of 21 START view model DBT_TEST.with_ar_sellstatic................. [RUN]
2019-10-01 14:52:55,649 (Thread-1): Acquiring new snowflake connection "with_ar_sellstatic".
2019-10-01 14:52:55,650 (Thread-1): Re-using an available connection from the pool (formerly with_ar_point).
2019-10-01 14:52:55,651 (Thread-1): Compiling model.dbt_test.with_ar_sellstatic
2019-10-01 14:52:55,662 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 14:52:55,682 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellstatic"
2019-10-01 14:52:55,693 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:52:55,693 (Thread-1): On with_ar_sellstatic: BEGIN
2019-10-01 14:52:55,829 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:52:55,830 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:52:55,830 (Thread-1): On with_ar_sellstatic: create or replace view OPA_DEV.DBT_TEST.with_ar_sellstatic as (
    

SELECT
  sls_1.sell_stc_id
  ,sls_1.stc_stk_id
FROM opa_stg_uk.ar_sellstatic sls_1
WHERE sls_1.file_dt = (SELECT MAX(sls_2.file_dt) FROM opa_stg_uk.ar_sellstatic sls_2 WHERE sls_1.sell_stc_id = sls_2.sell_stc_id)
  );
2019-10-01 14:52:56,056 (Thread-1): SQL status: SUCCESS 1 in 0.23 seconds
2019-10-01 14:52:56,058 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 14:52:56,059 (Thread-1): Using snowflake connection "with_ar_sellstatic".
2019-10-01 14:52:56,059 (Thread-1): On with_ar_sellstatic: COMMIT
2019-10-01 14:52:56,216 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:52:56,224 (Thread-1): 14:52:56 | 5 of 21 OK created view model DBT_TEST.with_ar_sellstatic............ [SUCCESS 1 in 0.57s]
2019-10-01 14:52:56,226 (Thread-1): 14:52:56 | 6 of 21 START view model DBT_TEST.with_ar_sellunit................... [RUN]
2019-10-01 14:52:56,230 (Thread-1): Acquiring new snowflake connection "with_ar_sellunit".
2019-10-01 14:52:56,230 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellstatic).
2019-10-01 14:52:56,231 (Thread-1): Compiling model.dbt_test.with_ar_sellunit
2019-10-01 14:52:56,256 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 14:52:56,288 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_sellunit"
2019-10-01 14:52:56,296 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:52:56,297 (Thread-1): On with_ar_sellunit: BEGIN
2019-10-01 14:52:56,418 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:52:56,419 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:52:56,419 (Thread-1): On with_ar_sellunit: create or replace view OPA_DEV.DBT_TEST.with_ar_sellunit as (
    

SELECT
  su.sell_unit_id
  ,su.rm_id
  ,su.bb_cd_id
FROM opa_stg_uk.ar_sellunit su
WHERE su.file_dt = (SELECT MAX(su_2.file_dt) FROM opa_stg_uk.ar_sellunit su_2 WHERE su.sell_unit_id = su_2.sell_unit_id)
  );
2019-10-01 14:52:56,741 (Thread-1): SQL status: SUCCESS 1 in 0.32 seconds
2019-10-01 14:52:56,744 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 14:52:56,744 (Thread-1): Using snowflake connection "with_ar_sellunit".
2019-10-01 14:52:56,744 (Thread-1): On with_ar_sellunit: COMMIT
2019-10-01 14:52:56,949 (Thread-1): SQL status: SUCCESS 1 in 0.20 seconds
2019-10-01 14:52:56,959 (Thread-1): 14:52:56 | 6 of 21 OK created view model DBT_TEST.with_ar_sellunit.............. [SUCCESS 1 in 0.73s]
2019-10-01 14:52:56,961 (Thread-1): 14:52:56 | 7 of 21 START view model DBT_TEST.with_ar_staticroom................. [RUN]
2019-10-01 14:52:56,964 (Thread-1): Acquiring new snowflake connection "with_ar_staticroom".
2019-10-01 14:52:56,964 (Thread-1): Re-using an available connection from the pool (formerly with_ar_sellunit).
2019-10-01 14:52:56,965 (Thread-1): Compiling model.dbt_test.with_ar_staticroom
2019-10-01 14:52:56,977 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 14:52:56,994 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticroom"
2019-10-01 14:52:56,999 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:52:56,999 (Thread-1): On with_ar_staticroom: BEGIN
2019-10-01 14:52:57,120 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:52:57,121 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:52:57,122 (Thread-1): On with_ar_staticroom: create or replace view OPA_DEV.DBT_TEST.with_ar_staticroom as (
    

SELECT
  sr.stc_rm_id
  ,sr.stc_stk_id
  ,sr.rm_id
FROM opa_stg_uk.ar_staticroom sr
WHERE sr.file_dt = (SELECT MAX(sr_2.file_dt) FROM opa_stg_uk.ar_staticroom sr_2 WHERE sr.stc_rm_id = sr_2.stc_rm_id)
  );
2019-10-01 14:52:57,344 (Thread-1): SQL status: SUCCESS 1 in 0.22 seconds
2019-10-01 14:52:57,346 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 14:52:57,347 (Thread-1): Using snowflake connection "with_ar_staticroom".
2019-10-01 14:52:57,347 (Thread-1): On with_ar_staticroom: COMMIT
2019-10-01 14:52:57,441 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:52:57,450 (Thread-1): 14:52:57 | 7 of 21 OK created view model DBT_TEST.with_ar_staticroom............ [SUCCESS 1 in 0.48s]
2019-10-01 14:52:57,451 (Thread-1): 14:52:57 | 8 of 21 START view model DBT_TEST.with_ar_staticstock................ [RUN]
2019-10-01 14:52:57,456 (Thread-1): Acquiring new snowflake connection "with_ar_staticstock".
2019-10-01 14:52:57,456 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticroom).
2019-10-01 14:52:57,457 (Thread-1): Compiling model.dbt_test.with_ar_staticstock
2019-10-01 14:52:57,467 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 14:52:57,486 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_staticstock"
2019-10-01 14:52:57,492 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:52:57,493 (Thread-1): On with_ar_staticstock: BEGIN
2019-10-01 14:52:57,606 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:52:57,607 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:52:57,608 (Thread-1): On with_ar_staticstock: create or replace view OPA_DEV.DBT_TEST.with_ar_staticstock as (
    

SELECT
  ss.stc_stk_id
  ,ss.cd
FROM opa_stg_uk.ar_staticstock ss
WHERE ss.file_dt = (SELECT MAX(ss_2.file_dt) FROM opa_stg_uk.ar_staticstock ss_2 WHERE ss.stc_stk_id = ss_2.stc_stk_id)
  );
2019-10-01 14:52:57,826 (Thread-1): SQL status: SUCCESS 1 in 0.22 seconds
2019-10-01 14:52:57,828 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 14:52:57,828 (Thread-1): Using snowflake connection "with_ar_staticstock".
2019-10-01 14:52:57,829 (Thread-1): On with_ar_staticstock: COMMIT
2019-10-01 14:52:57,925 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:52:57,935 (Thread-1): 14:52:57 | 8 of 21 OK created view model DBT_TEST.with_ar_staticstock........... [SUCCESS 1 in 0.48s]
2019-10-01 14:52:57,936 (Thread-1): 14:52:57 | 9 of 21 START view model DBT_TEST.with_ar_transinvroute.............. [RUN]
2019-10-01 14:52:57,942 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroute".
2019-10-01 14:52:57,942 (Thread-1): Re-using an available connection from the pool (formerly with_ar_staticstock).
2019-10-01 14:52:57,945 (Thread-1): Compiling model.dbt_test.with_ar_transinvroute
2019-10-01 14:52:57,957 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 14:52:57,980 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroute"
2019-10-01 14:52:57,987 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:52:57,988 (Thread-1): On with_ar_transinvroute: BEGIN
2019-10-01 14:52:58,115 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:52:58,116 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:52:58,116 (Thread-1): On with_ar_transinvroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroute as (
    

SELECT
  tir.trans_inv_route_id
  ,tir.trans_route_id
FROM opa_stg_uk.ar_transinvroute tir
WHERE tir.file_dt = (SELECT MAX(tir_2.file_dt) FROM opa_stg_uk.ar_transinvroute tir_2 WHERE tir.trans_inv_route_id = tir_2.trans_inv_route_id)
  );
2019-10-01 14:52:58,361 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:52:58,363 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 14:52:58,363 (Thread-1): Using snowflake connection "with_ar_transinvroute".
2019-10-01 14:52:58,364 (Thread-1): On with_ar_transinvroute: COMMIT
2019-10-01 14:52:58,497 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:52:58,503 (Thread-1): 14:52:58 | 9 of 21 OK created view model DBT_TEST.with_ar_transinvroute......... [SUCCESS 1 in 0.56s]
2019-10-01 14:52:58,505 (Thread-1): 14:52:58 | 10 of 21 START view model DBT_TEST.with_ar_transinvroutesector....... [RUN]
2019-10-01 14:52:58,510 (Thread-1): Acquiring new snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:52:58,510 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroute).
2019-10-01 14:52:58,511 (Thread-1): Compiling model.dbt_test.with_ar_transinvroutesector
2019-10-01 14:52:58,518 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 14:52:58,533 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvroutesector"
2019-10-01 14:52:58,537 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:52:58,538 (Thread-1): On with_ar_transinvroutesector: BEGIN
2019-10-01 14:52:58,664 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:52:58,664 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:52:58,665 (Thread-1): On with_ar_transinvroutesector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvroutesector as (
    

SELECT
  tirs.trans_inv_route_id
  ,tirs.trans_inv_sec_id
  ,tirs.trans_inv_route_sec_id
FROM opa_stg_uk.ar_transinvroutesector tirs
WHERE tirs.file_dt = (SELECT MAX(tirs_2.file_dt) FROM opa_stg_uk.ar_transinvroutesector tirs_2 WHERE tirs.trans_inv_route_sec_id = tirs_2.trans_inv_route_sec_id)
  );
2019-10-01 14:52:58,909 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:52:58,912 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 14:52:58,912 (Thread-1): Using snowflake connection "with_ar_transinvroutesector".
2019-10-01 14:52:58,913 (Thread-1): On with_ar_transinvroutesector: COMMIT
2019-10-01 14:52:59,015 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:52:59,023 (Thread-1): 14:52:59 | 10 of 21 OK created view model DBT_TEST.with_ar_transinvroutesector.. [SUCCESS 1 in 0.51s]
2019-10-01 14:52:59,024 (Thread-1): 14:52:59 | 11 of 21 START view model DBT_TEST.with_ar_transinvsector............ [RUN]
2019-10-01 14:52:59,027 (Thread-1): Acquiring new snowflake connection "with_ar_transinvsector".
2019-10-01 14:52:59,028 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvroutesector).
2019-10-01 14:52:59,028 (Thread-1): Compiling model.dbt_test.with_ar_transinvsector
2019-10-01 14:52:59,040 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 14:52:59,057 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transinvsector"
2019-10-01 14:52:59,064 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:52:59,065 (Thread-1): On with_ar_transinvsector: BEGIN
2019-10-01 14:52:59,227 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:52:59,228 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:52:59,228 (Thread-1): On with_ar_transinvsector: create or replace view OPA_DEV.DBT_TEST.with_ar_transinvsector as (
    

SELECT
  tis.trans_inv_sec_id
  ,tis.dep_dt_tm
FROM opa_stg_uk.ar_transinvsector tis
WHERE tis.file_dt = (SELECT MAX(tis_2.file_dt) FROM opa_stg_uk.ar_transinvsector tis_2 WHERE tis.trans_inv_sec_id = tis_2.trans_inv_sec_id)
  );
2019-10-01 14:52:59,451 (Thread-1): SQL status: SUCCESS 1 in 0.22 seconds
2019-10-01 14:52:59,453 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 14:52:59,453 (Thread-1): Using snowflake connection "with_ar_transinvsector".
2019-10-01 14:52:59,454 (Thread-1): On with_ar_transinvsector: COMMIT
2019-10-01 14:52:59,579 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:52:59,588 (Thread-1): 14:52:59 | 11 of 21 OK created view model DBT_TEST.with_ar_transinvsector....... [SUCCESS 1 in 0.56s]
2019-10-01 14:52:59,590 (Thread-1): 14:52:59 | 12 of 21 START view model DBT_TEST.with_ar_transroute................ [RUN]
2019-10-01 14:52:59,608 (Thread-1): Acquiring new snowflake connection "with_ar_transroute".
2019-10-01 14:52:59,608 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transinvsector).
2019-10-01 14:52:59,609 (Thread-1): Compiling model.dbt_test.with_ar_transroute
2019-10-01 14:52:59,620 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 14:52:59,643 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_transroute"
2019-10-01 14:52:59,647 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:52:59,648 (Thread-1): On with_ar_transroute: BEGIN
2019-10-01 14:52:59,785 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:52:59,786 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:52:59,786 (Thread-1): On with_ar_transroute: create or replace view OPA_DEV.DBT_TEST.with_ar_transroute as (
    

SELECT
	tr.trans_route_id
	,tr.route_cd
FROM opa_stg_uk.ar_transroute tr
WHERE tr.file_dt = (SELECT MAX(tr_2.file_dt) FROM opa_stg_uk.ar_transroute tr_2 WHERE tr.trans_route_id = tr_2.trans_route_id)
  );
2019-10-01 14:53:00,015 (Thread-1): SQL status: SUCCESS 1 in 0.23 seconds
2019-10-01 14:53:00,016 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 14:53:00,016 (Thread-1): Using snowflake connection "with_ar_transroute".
2019-10-01 14:53:00,017 (Thread-1): On with_ar_transroute: COMMIT
2019-10-01 14:53:00,109 (Thread-1): SQL status: SUCCESS 1 in 0.09 seconds
2019-10-01 14:53:00,113 (Thread-1): 14:53:00 | 12 of 21 OK created view model DBT_TEST.with_ar_transroute........... [SUCCESS 1 in 0.51s]
2019-10-01 14:53:00,114 (Thread-1): 14:53:00 | 13 of 21 START view model DBT_TEST.with_ar_usercodes................. [RUN]
2019-10-01 14:53:00,115 (Thread-1): Acquiring new snowflake connection "with_ar_usercodes".
2019-10-01 14:53:00,116 (Thread-1): Re-using an available connection from the pool (formerly with_ar_transroute).
2019-10-01 14:53:00,116 (Thread-1): Compiling model.dbt_test.with_ar_usercodes
2019-10-01 14:53:00,121 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 14:53:00,131 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_usercodes"
2019-10-01 14:53:00,135 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:53:00,135 (Thread-1): On with_ar_usercodes: BEGIN
2019-10-01 14:53:00,309 (Thread-1): SQL status: SUCCESS 1 in 0.17 seconds
2019-10-01 14:53:00,310 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:53:00,310 (Thread-1): On with_ar_usercodes: create or replace view OPA_DEV.DBT_TEST.with_ar_usercodes as (
    

SELECT DISTINCT
  uc_1.user_cd_id
  ,uc_1.cd
  ,uc_1.name
FROM opa_stg_uk.ar_usercodes uc_1
WHERE uc_1.file_dt = (SELECT MAX(uc_2.file_dt) FROM opa_stg_uk.ar_usercodes uc_2 WHERE uc_1.user_cd_id = uc_2.user_cd_id)
  );
2019-10-01 14:53:00,541 (Thread-1): SQL status: SUCCESS 1 in 0.23 seconds
2019-10-01 14:53:00,542 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 14:53:00,542 (Thread-1): Using snowflake connection "with_ar_usercodes".
2019-10-01 14:53:00,542 (Thread-1): On with_ar_usercodes: COMMIT
2019-10-01 14:53:00,709 (Thread-1): SQL status: SUCCESS 1 in 0.17 seconds
2019-10-01 14:53:00,716 (Thread-1): 14:53:00 | 13 of 21 OK created view model DBT_TEST.with_ar_usercodes............ [SUCCESS 1 in 0.60s]
2019-10-01 14:53:00,717 (Thread-1): 14:53:00 | 14 of 21 START view model DBT_TEST.with_booking_fact_margin.......... [RUN]
2019-10-01 14:53:00,720 (Thread-1): Acquiring new snowflake connection "with_booking_fact_margin".
2019-10-01 14:53:00,720 (Thread-1): Re-using an available connection from the pool (formerly with_ar_usercodes).
2019-10-01 14:53:00,720 (Thread-1): Compiling model.dbt_test.with_booking_fact_margin
2019-10-01 14:53:00,728 (Thread-1): Writing injected SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 14:53:00,740 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_booking_fact_margin"
2019-10-01 14:53:00,748 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:53:00,748 (Thread-1): On with_booking_fact_margin: BEGIN
2019-10-01 14:53:00,883 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:53:00,883 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:53:00,884 (Thread-1): On with_booking_fact_margin: create or replace view OPA_DEV.DBT_TEST.with_booking_fact_margin as (
    

SELECT
  bff_1.bk_booking
  ,bff_1.ffd_flag
  ,bff_1.sm_currency
  ,bff_1.sm_revenue
  ,bff_1.sm_cnx_and_amend_revenue
  ,bff_1.sm_accommodation_costs
  ,bff_1.sm_early_booking_discounts
  ,bff_1.sm_late_booking_discounts
  ,bff_1.sm_flying_costs
  ,bff_1.sm_other_costs
  ,bff_1.sm_distribution_costs
  ,bff_1.sm_non_margin_items
  ,bff_1.sm_margin
  ,bff_1.smg_currency
  ,bff_1.smg_revenue
  ,bff_1.smg_cnx_and_amend_revenue
  ,bff_1.smg_accommodation_costs
  ,bff_1.smg_early_booking_discounts
  ,bff_1.smg_late_booking_discounts
  ,bff_1.smg_flying_costs
  ,bff_1.smg_other_costs
  ,bff_1.smg_distribution_costs
  ,bff_1.smg_non_margin_items
  ,bff_1.smg_margin
  ,bff_1.rep_currency
  ,bff_1.rep_revenue
  ,bff_1.rep_cnx_and_amend_revenue
  ,bff_1.rep_accommodation_costs
  ,bff_1.rep_early_booking_discounts
  ,bff_1.rep_late_booking_discounts
  ,bff_1.rep_flying_costs
  ,bff_1.rep_other_costs
  ,bff_1.rep_distribution_costs
  ,bff_1.rep_non_margin_items
  ,bff_1.rep_margin
FROM opa_fl_uk.v_booking_fact_margin_uk bff_1
  );
2019-10-01 14:53:01,603 (Thread-1): SQL status: SUCCESS 1 in 0.72 seconds
2019-10-01 14:53:01,605 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 14:53:01,605 (Thread-1): Using snowflake connection "with_booking_fact_margin".
2019-10-01 14:53:01,605 (Thread-1): On with_booking_fact_margin: COMMIT
2019-10-01 14:53:01,701 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:53:01,710 (Thread-1): 14:53:01 | 14 of 21 OK created view model DBT_TEST.with_booking_fact_margin..... [SUCCESS 1 in 0.99s]
2019-10-01 14:53:01,711 (Thread-1): 14:53:01 | 15 of 21 START view model DBT_TEST.with_dates........................ [RUN]
2019-10-01 14:53:01,714 (Thread-1): Acquiring new snowflake connection "with_dates".
2019-10-01 14:53:01,714 (Thread-1): Re-using an available connection from the pool (formerly with_booking_fact_margin).
2019-10-01 14:53:01,715 (Thread-1): Compiling model.dbt_test.with_dates
2019-10-01 14:53:01,720 (Thread-1): Writing injected SQL for node "model.dbt_test.with_dates"
2019-10-01 14:53:01,732 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_dates"
2019-10-01 14:53:01,736 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:53:01,737 (Thread-1): On with_dates: BEGIN
2019-10-01 14:53:01,863 (Thread-1): SQL status: SUCCESS 1 in 0.13 seconds
2019-10-01 14:53:01,864 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:53:01,864 (Thread-1): On with_dates: create or replace view OPA_DEV.DBT_TEST.with_dates as (
    


SELECT
	dd.bk_date
	,dd.group_season_code
FROM opa_stg_all.date_dim dd
  );
2019-10-01 14:53:02,096 (Thread-1): SQL status: SUCCESS 1 in 0.23 seconds
2019-10-01 14:53:02,098 (Thread-1): On with_dates: COMMIT
2019-10-01 14:53:02,099 (Thread-1): Using snowflake connection "with_dates".
2019-10-01 14:53:02,099 (Thread-1): On with_dates: COMMIT
2019-10-01 14:53:02,205 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:53:02,215 (Thread-1): 14:53:02 | 15 of 21 OK created view model DBT_TEST.with_dates................... [SUCCESS 1 in 0.50s]
2019-10-01 14:53:02,216 (Thread-1): 14:53:02 | 16 of 21 START view model DBT_TEST.with_fl_acr_booking............... [RUN]
2019-10-01 14:53:02,222 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking".
2019-10-01 14:53:02,222 (Thread-1): Re-using an available connection from the pool (formerly with_dates).
2019-10-01 14:53:02,224 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking
2019-10-01 14:53:02,236 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 14:53:02,255 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking"
2019-10-01 14:53:02,263 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:53:02,263 (Thread-1): On with_fl_acr_booking: BEGIN
2019-10-01 14:53:02,374 (Thread-1): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:53:02,374 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:53:02,374 (Thread-1): On with_fl_acr_booking: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking as (
    

SELECT
  bk_1.sk_booking_id
  ,bk_1.booking_version
  ,bk_1.atcom_res_id
  ,bk_1.atcom_res_version
  ,bk_1.atcom_market_id -- CG ADDED in V1.06 for new Source Market Derivation
  ,bk_1.number_of_adults
  ,bk_1.number_of_children
  ,bk_1.number_of_infants
  ,bk_1.number_of_passengers
  ,bk_1.sk_season_id
  ,bk_1.booking_status
  ,bk_1.atcom_agent_id
  ,bk_1.atcom_sell_currency_id
  ,bk_1.season_date
  ,bk_1.confirmed_on
  ,bk_1.cancelled_on
  ,bk_1.source_created_on
  ,bk_1.modified_on
  ,bk_1.effective_from
  ,DATEADD('second', -1, LEAD(bk_1.effective_from) OVER (PARTITION BY bk_1.sk_booking_id ORDER BY bk_1.booking_version)) AS lead_effective_from
  ,bk_1.effective_to
  ,bk_1.dwh_created_on
  ,bk_1.dwh_modified_on

FROM opa_stg_uk.fl_acr_booking bk_1
WHERE bk_1.file_dt = (SELECT MAX(bk_2.file_dt) FROM opa_stg_uk.fl_acr_booking bk_2 WHERE bk_1.sk_booking_id = bk_2.sk_booking_id AND bk_1.booking_version = bk_2.booking_version)
AND bk_1.booking_version = (SELECT MAX(bk_3.booking_version) FROM opa_stg_uk.fl_acr_booking bk_3 WHERE bk_1.sk_booking_id = bk_3.sk_booking_id)
AND (bk_1.sk_season_id > 201701 OR bk_1.sk_booking_id IS NULL)

-- To be removed when running against all bookings
AND bk_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 14:53:02,666 (Thread-1): SQL status: SUCCESS 1 in 0.29 seconds
2019-10-01 14:53:02,668 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 14:53:02,668 (Thread-1): Using snowflake connection "with_fl_acr_booking".
2019-10-01 14:53:02,668 (Thread-1): On with_fl_acr_booking: COMMIT
2019-10-01 14:53:02,810 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:53:02,818 (Thread-1): 14:53:02 | 16 of 21 OK created view model DBT_TEST.with_fl_acr_booking.......... [SUCCESS 1 in 0.59s]
2019-10-01 14:53:02,820 (Thread-1): 14:53:02 | 17 of 21 START view model DBT_TEST.with_fl_acr_booking_service....... [RUN]
2019-10-01 14:53:02,826 (Thread-1): Acquiring new snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:53:02,827 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking).
2019-10-01 14:53:02,828 (Thread-1): Compiling model.dbt_test.with_fl_acr_booking_service
2019-10-01 14:53:02,839 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 14:53:02,872 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_booking_service"
2019-10-01 14:53:02,889 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:53:02,889 (Thread-1): On with_fl_acr_booking_service: BEGIN
2019-10-01 14:53:03,029 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:53:03,030 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:53:03,030 (Thread-1): On with_fl_acr_booking_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_booking_service as (
    

SELECT
  bk_ser_1.sk_booking_service_id
  ,bk_ser_1.sk_booking_id
  ,bk_ser_1.sk_service_id
  ,bk_ser_1.service_version
  ,bk_ser_1.booking_version
FROM opa_stg_uk.fl_acr_booking_service bk_ser_1
WHERE bk_ser_1.file_dt = (SELECT MAX(bk_ser_2.file_dt) FROM opa_stg_uk.fl_acr_booking_service bk_ser_2 WHERE bk_ser_1.sk_booking_service_id = bk_ser_2.sk_booking_service_id)
AND bk_ser_1.booking_version = (SELECT MAX(bk_ser_3.booking_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_3 WHERE bk_ser_1.sk_booking_id = bk_ser_3.sk_booking_id)
AND bk_ser_1.service_version = (SELECT MAX(bk_ser_4.service_version) FROM opa_stg_uk.fl_acr_booking_service bk_ser_4 WHERE bk_ser_1.sk_service_id = bk_ser_4.sk_service_id)

-- To be removed when running against all bookings
AND bk_ser_1.sk_booking_id IN ('380402','975528','10016009','10063844','15994298','22568921','25059884','27813713','28536240','30846203','33404409','20348866','31280892','35353771')
  );
2019-10-01 14:53:03,268 (Thread-1): SQL status: SUCCESS 1 in 0.24 seconds
2019-10-01 14:53:03,270 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 14:53:03,270 (Thread-1): Using snowflake connection "with_fl_acr_booking_service".
2019-10-01 14:53:03,271 (Thread-1): On with_fl_acr_booking_service: COMMIT
2019-10-01 14:53:03,368 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:53:03,376 (Thread-1): 14:53:03 | 17 of 21 OK created view model DBT_TEST.with_fl_acr_booking_service.. [SUCCESS 1 in 0.55s]
2019-10-01 14:53:03,377 (Thread-1): 14:53:03 | 18 of 21 START view model DBT_TEST.with_fl_acr_service............... [RUN]
2019-10-01 14:53:03,382 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service".
2019-10-01 14:53:03,382 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_booking_service).
2019-10-01 14:53:03,384 (Thread-1): Compiling model.dbt_test.with_fl_acr_service
2019-10-01 14:53:03,402 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 14:53:03,431 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service"
2019-10-01 14:53:03,440 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:53:03,440 (Thread-1): On with_fl_acr_service: BEGIN
2019-10-01 14:53:03,564 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:53:03,565 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:53:03,565 (Thread-1): On with_fl_acr_service: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service as (
    

SELECT
  ser_1.sk_service_id
  ,ser_1.atcom_ser_id
  ,ser_1.atcom_dep_point_id
  ,ser_1.service_version
  ,ser_1.service_status
  ,ser_1.direction
  ,ser_1.sell_type
  ,ser_1.service_type
  ,ser_1.flight_type_code
  ,ser_1.service_start_date1
  ,ser_1.service_end_date1
  ,ser_1.departure_flight_number
  ,ser_1.atcom_arr_point_id
  ,ser_1.source_stock_type_code
FROM opa_stg_uk.fl_acr_service ser_1
WHERE ser_1.file_dt = (SELECT MAX(ser_2.file_dt) FROM opa_stg_uk.fl_acr_service ser_2 WHERE ser_1.sk_service_id = ser_2.sk_service_id AND ser_1.service_version = ser_2.service_version)
  );
2019-10-01 14:53:03,821 (Thread-1): SQL status: SUCCESS 1 in 0.26 seconds
2019-10-01 14:53:03,823 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 14:53:03,824 (Thread-1): Using snowflake connection "with_fl_acr_service".
2019-10-01 14:53:03,824 (Thread-1): On with_fl_acr_service: COMMIT
2019-10-01 14:53:03,949 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:53:03,957 (Thread-1): 14:53:03 | 18 of 21 OK created view model DBT_TEST.with_fl_acr_service.......... [SUCCESS 1 in 0.57s]
2019-10-01 14:53:03,958 (Thread-1): 14:53:03 | 19 of 21 START view model DBT_TEST.with_fl_acr_service_element....... [RUN]
2019-10-01 14:53:03,968 (Thread-1): Acquiring new snowflake connection "with_fl_acr_service_element".
2019-10-01 14:53:03,969 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service).
2019-10-01 14:53:03,971 (Thread-1): Compiling model.dbt_test.with_fl_acr_service_element
2019-10-01 14:53:04,006 (Thread-1): Writing injected SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 14:53:04,040 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_fl_acr_service_element"
2019-10-01 14:53:04,050 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:53:04,054 (Thread-1): On with_fl_acr_service_element: BEGIN
2019-10-01 14:53:04,182 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:53:04,185 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:53:04,186 (Thread-1): On with_fl_acr_service_element: create or replace view OPA_DEV.DBT_TEST.with_fl_acr_service_element as (
    

SELECT
  ser_e_1.sk_service_id
  ,ser_e_1.service_version
  ,ser_e_1.atcom_sub_ser_id
FROM opa_stg_uk.fl_acr_service_element ser_e_1
WHERE ser_e_1.file_dt = (SELECT MAX(ser_e_2.file_dt) FROM opa_stg_uk.fl_acr_service_element ser_e_2 WHERE ser_e_1.sk_service_element_id = ser_e_2.sk_service_element_id)
  );
2019-10-01 14:53:04,507 (Thread-1): SQL status: SUCCESS 1 in 0.32 seconds
2019-10-01 14:53:04,511 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 14:53:04,512 (Thread-1): Using snowflake connection "with_fl_acr_service_element".
2019-10-01 14:53:04,513 (Thread-1): On with_fl_acr_service_element: COMMIT
2019-10-01 14:53:04,654 (Thread-1): SQL status: SUCCESS 1 in 0.14 seconds
2019-10-01 14:53:04,667 (Thread-1): 14:53:04 | 19 of 21 OK created view model DBT_TEST.with_fl_acr_service_element.. [SUCCESS 1 in 0.69s]
2019-10-01 14:53:04,669 (Thread-1): 14:53:04 | 20 of 21 START view model DBT_TEST.with_ar_currency.................. [RUN]
2019-10-01 14:53:04,676 (Thread-1): Acquiring new snowflake connection "with_ar_currency".
2019-10-01 14:53:04,678 (Thread-1): Re-using an available connection from the pool (formerly with_fl_acr_service_element).
2019-10-01 14:53:04,683 (Thread-1): Compiling model.dbt_test.with_ar_currency
2019-10-01 14:53:04,693 (Thread-1): Writing injected SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 14:53:04,715 (Thread-1): Writing runtime SQL for node "model.dbt_test.with_ar_currency"
2019-10-01 14:53:04,729 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:53:04,739 (Thread-1): On with_ar_currency: BEGIN
2019-10-01 14:53:04,914 (Thread-1): SQL status: SUCCESS 1 in 0.17 seconds
2019-10-01 14:53:04,914 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:53:04,915 (Thread-1): On with_ar_currency: create or replace view OPA_DEV.DBT_TEST.with_ar_currency as (
    

SELECT DISTINCT
  cur_1.cur_id
  ,cur_1.cd
  ,cur_1.name
FROM opa_stg_uk.ar_currency cur_1
WHERE cur_1.file_dt = (SELECT MAX(cur_2.file_dt) FROM opa_stg_uk.ar_currency cur_2 WHERE cur_1.cur_id = cur_2.cur_id)
  );
2019-10-01 14:53:05,183 (Thread-1): SQL status: SUCCESS 1 in 0.27 seconds
2019-10-01 14:53:05,192 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 14:53:05,192 (Thread-1): Using snowflake connection "with_ar_currency".
2019-10-01 14:53:05,192 (Thread-1): On with_ar_currency: COMMIT
2019-10-01 14:53:05,310 (Thread-1): SQL status: SUCCESS 1 in 0.12 seconds
2019-10-01 14:53:05,324 (Thread-1): 14:53:05 | 20 of 21 OK created view model DBT_TEST.with_ar_currency............. [SUCCESS 1 in 0.64s]
2019-10-01 14:53:05,327 (Thread-1): 14:53:05 | 21 of 21 START table model DBT_TEST.booking_fact_uk.................. [RUN]
2019-10-01 14:53:05,329 (Thread-1): Acquiring new snowflake connection "booking_fact_uk".
2019-10-01 14:53:05,329 (Thread-1): Re-using an available connection from the pool (formerly with_ar_currency).
2019-10-01 14:53:05,341 (Thread-1): Compiling model.dbt_test.booking_fact_uk
2019-10-01 14:53:05,490 (Thread-1): Writing injected SQL for node "model.dbt_test.booking_fact_uk"
2019-10-01 14:53:05,652 (Thread-1): Writing runtime SQL for node "model.dbt_test.booking_fact_uk"
2019-10-01 14:53:05,900 (Thread-1): Using snowflake connection "booking_fact_uk".
2019-10-01 14:53:05,900 (Thread-1): On booking_fact_uk: BEGIN
2019-10-01 14:53:06,058 (Thread-1): SQL status: SUCCESS 1 in 0.16 seconds
2019-10-01 14:53:06,059 (Thread-1): Using snowflake connection "booking_fact_uk".
2019-10-01 14:53:06,059 (Thread-1): On booking_fact_uk: create or replace transient table OPA_DEV.DBT_TEST.booking_fact_uk
      as (

WITH booking_service AS (
	SELECT
		bk_ser.sk_booking_id
		,bk_ser.booking_version
		,bk_ser.sk_service_id
		,bk_ser.service_version
		,bk_ser.sk_booking_service_id
		,ser.service_type
		,ser.source_stock_type_code
		,ser.sell_type
		,ser.service_status
		,ser.flight_type_code
		,ser.service_start_date1
		,ser.service_end_date1
		,tis.dep_dt_tm
		,ser.departure_flight_number
		,ser.direction
		,tr.route_cd
		,dpt.pt_cd
		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN apt.pt_cd
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				AND ser.service_status = 'CON'
				THEN apt.pt_cd
				ELSE NULL
			END
		END AS min_flight_gateway

		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MIN(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
					AND ser.service_status = 'CON'
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		END	AS min_flight_id

		,CASE WHEN
			-- All flight cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			CASE WHEN
				ser.service_start_date1 =
					MAX(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		ELSE
			CASE WHEN
				ser.service_start_date1 =
					MAX(CASE WHEN
							(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
							OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
						THEN ser.service_start_date1
						ELSE NULL
						END
					) OVER (PARTITION BY bk_ser.sk_booking_id)
					AND ser.service_status = 'CON'
				THEN
					CASE WHEN tr.route_cd IS NULL
						THEN
							ser.departure_flight_number|| '|' || dpt.pt_cd || '|' || apt.pt_cd|| '|' || CAST(SUBSTR(ser.service_start_date1,1,4)||SUBSTR(ser.service_start_date1,6,2)||SUBSTR(ser.service_start_date1,9,2) AS VARCHAR)
						ELSE
							tr.route_cd || '|' || SUBSTRING(tis.dep_dt_tm, 1, 4) || SUBSTRING(tis.dep_dt_tm, 6, 2) || SUBSTRING(tis.dep_dt_tm, 9, 2)
						END
				ELSE NULL
			END
		END AS max_flight_id


		-- MULTICENTRE
		,CASE WHEN
			-- All multicentre services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END	AS min_multi_center_date

		,CASE WHEN
			-- All multicentre services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'MC' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS max_multi_center_date


		-- ACCOM
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU'))
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_accom_date
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU'))
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'ACCM' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS max_accom_date


		-- CRUISE
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CON')
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_cruise_date
		,CASE WHEN
			-- All accom services cancelled
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'CRU' AND ser.service_status = 'CON')
				THEN ser.service_end_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END max_cruise_date


		-- FLIGHT
		,CASE WHEN
			-- All flight services cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MIN(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MIN(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END AS min_flight_date
		,CASE WHEN
			-- All flight services cancelled
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			=
			SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
		THEN
			MAX(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		ELSE
			MAX(CASE WHEN
					(ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
					OR (ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.service_status = 'CON')
				--THEN tis.dep_dt_tm END)
				THEN ser.service_start_date1 END)
			OVER (PARTITION BY bk_ser.sk_booking_id)
		END	AS max_flight_date

		,sts.cd AS accom
		,su.bb_cd_id AS board_cd
		,uc_3.name AS board_name
		,str.stc_rm_id AS room

		-- Booking type derivation part 1
		,CASE WHEN
				-- No outbound flight services on the booking are third party
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
		THEN 0
		ELSE
			CASE WHEN
				-- All outbound flight services are 3PF
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
					+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				=
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

			OR
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
			THEN 1
			ELSE 0
			END
		END AS tpf_out_count
		,CASE WHEN
				-- No outbound flight services on the booking are third party
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
		THEN 0
		ELSE
			CASE WHEN
				-- All outbound flight services are 3PF
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
					+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				=
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

			OR
				SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
			THEN 1
			ELSE 0
			END
		END AS tpf_in_count
		,CASE WHEN
				CASE WHEN
						-- No outbound flight services on the booking are third party
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
				THEN 0
				ELSE
					CASE WHEN
						-- All outbound flight services are 3PF
						SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
							+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
						=
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

					OR
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
					THEN 1
					ELSE 0
					END
				END
			+
				CASE WHEN
						-- No outbound flight services on the booking are third party
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) = 0
				THEN 0
				ELSE
					CASE WHEN
						-- All outbound flight services are 3PF
						SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
							+ SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
						=
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)

					OR
						SUM(CASE WHEN ser.flight_type_code = 'T' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id) > 1
					THEN 1
					ELSE 0
					END
				END
		> 0
			THEN 'Y'
			ELSE 'N'
		END AS tpf_indicator
		,CASE WHEN
				-- All accom cancelled
				SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code NOT IN ('MC', 'CRU') AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS accom_count
		,CASE WHEN
				-- All cruise cancelled
				SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'ACC' AND ser.source_stock_type_code = 'CRU' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS cruise_count
		,CASE WHEN
				-- All flight out cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS flight_out_count
		,CASE WHEN
				-- All flight in cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS flight_ret_count
		,CASE WHEN
				-- All ahoc services cancelled
				SUM(CASE WHEN ser.service_type = 'AHOC' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'AHOC' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'AHOC' THEN 1 ELSE 0 END
			ELSE CASE WHEN ser.service_type = 'AHOC' AND ser.service_status = 'CON' THEN 1 ELSE 0 END
		END AS thirdparty_count

		,CASE WHEN
				-- All flight out first date cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' THEN ser.service_start_date1 ELSE NULL END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'OUT' AND ser.service_status = 'CON' THEN ser.service_start_date1 ELSE NULL END
		END AS flight_out_first_date
		,CASE WHEN
				-- All flight in first date cancelled
				SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
				= SUM(CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bk_ser.sk_booking_id)
			THEN CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' THEN ser.service_start_date1 ELSE NULL END
			ELSE CASE WHEN ser.service_type = 'TRS' AND ser.sell_type = 'FLT' AND ser.direction = 'IN' AND ser.service_status = 'CON' THEN ser.service_start_date1 ELSE NULL END
		END AS flight_ret_first_date

	-- Service and subservice
	FROM OPA_DEV.DBT_TEST.with_fl_acr_booking_service bk_ser
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_fl_acr_service ser ON bk_ser.sk_service_id = ser.sk_service_id AND bk_ser.service_version = ser.service_version
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_fl_acr_service_element ser_e ON ser.sk_service_id = ser_e.sk_service_id AND ser.service_version = ser_e.service_version

	-- Accom
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_sellstatic sls ON ser.atcom_ser_id = sls.sell_stc_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_staticstock sts ON sls.stc_stk_id = sts.stc_stk_id

	-- Room
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_sellunit su ON ser_e.atcom_sub_ser_id = su.sell_unit_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_staticroom str ON sts.stc_stk_id = str.stc_stk_id AND su.rm_id = str.rm_id

	-- Board
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_usercodes uc_3 ON su.bb_cd_id = uc_3.user_cd_id

	-- Flight
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvroute tir ON ser.atcom_ser_id = tir.trans_inv_route_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transroute tr ON tir.trans_route_id = tr.trans_route_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvroutesector tirs ON tir.trans_inv_route_id = tirs.trans_inv_route_id
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_transinvsector tis ON tirs.trans_inv_sec_id = tis.trans_inv_sec_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_point dpt ON ser.atcom_dep_point_id = dpt.pt_id
	LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_point apt ON ser.atcom_arr_point_id = apt.pt_id

	ORDER BY
		bk_ser.sk_booking_id
		,bk_ser.booking_version
		,ser.source_stock_type_code

)
,booking_fact_1 AS (
  SELECT DISTINCT
    CASE WHEN bk.atcom_res_id IS NULL THEN NULL ELSE 'UKATCOM|' || bk.atcom_res_id || '|' || bk.booking_version END AS bk_booking
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS bk_primary_accom
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN 'U'
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.room ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS bk_primary_room
    ,COALESCE(
      CASE WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
        AND COUNT(DISTINCT bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) > 1
          THEN 'MULTI'
      WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
        AND COUNT(DISTINCT bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = 1
          THEN 'UKATCOM|' || MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      WHEN SUM(bs.flight_out_count) OVER (PARTITION BY bk.atcom_res_id) > 1
        THEN 'MULTI'
        ELSE 'UKATCOM|' || MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      END
    , 'U') AS bk_first_flight
    ,COALESCE(
      CASE WHEN
        MIN(bs.min_flight_id) OVER (PARTITION BY bk.atcom_res_id) = MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
          THEN NULL
      WHEN SUM(bs.flight_ret_count) OVER (PARTITION BY bk.atcom_res_id) > 1
        THEN 'MULTI'
        ELSE 'UKATCOM|' || MIN(bs.max_flight_id) OVER (PARTITION BY bk.atcom_res_id)
      END
    , 'U') AS bk_last_flight
    ,CASE WHEN ofn.cd IS NULL
      THEN 'UKATCOM|U'
      ELSE 'UKATCOM|' || ofn.cd
    END AS bk_source_market
    ,'UKATCOM' AS bk_originating_system
    ,CASE WHEN
        -- Third party flight
        SUM(CASE WHEN bs.tpf_indicator = 'Y' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|3PF'

      WHEN
        -- Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGAF'

      WHEN
        -- Cruise and Flight Package
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) > 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGCF'

      WHEN
        -- Cruise and Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGCAF'

      WHEN
        -- Multi Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMAF'

      WHEN
        -- Multi Cruise and Flight Package
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMCF'

      WHEN
        -- Multi Accommodation and One Cruise and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMACF'

      WHEN
        -- Multi Cruise and One Accommodation and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMCAF'

      WHEN
        -- Multi Accommodation and Multi Cruise and Flight Package
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
          THEN 'UKATCOM|PKG' -- Granular code = 'PKGMAMCF'

      WHEN
        -- Single Accommodation Only
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCA'

      WHEN
        -- Multi Accommodation Only
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCMA'

      WHEN
        -- Accommodation and Flight Other
        SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 1
          THEN 'UKATCOM|ACC' -- Granular code = 'ACCOTH'

      WHEN
        -- Flight Only Return Outbound First
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id) < MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTROF'

      WHEN
        -- Flight Only Return Inbound First
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id) < MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTRIF'

      WHEN
        -- Flight only same day return
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND MIN(bs.flight_ret_first_date) OVER (PARTITION BY bs.sk_booking_id) = MIN(bs.flight_out_first_date) OVER (PARTITION BY bs.sk_booking_id)
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTSDR'

      WHEN
        -- Flight Only One Way Outbound
        SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTOBO'

      WHEN
        -- Flight Only One Way Inbound
        SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|FLT' -- Granular code = 'FLTIBO'

      WHEN
        -- Single Cruise Only
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) = 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) = 0
          THEN 'UKATCOM|CRU' -- Granular code = 'CRUSGL'

      WHEN
        -- Multi Cruise Only
        SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id) > 1
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|CRU' -- Granular code = 'CRUMLT'

      WHEN
        -- Third party
        SUM(bs.thirdparty_count) OVER (PARTITION BY bs.sk_booking_id) > 0
        AND (SUM(bs.flight_out_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.flight_ret_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
        AND (SUM(bs.accom_count) OVER (PARTITION BY bs.sk_booking_id) + SUM(bs.cruise_count) OVER (PARTITION BY bs.sk_booking_id)) = 0
          THEN 'UKATCOM|TPB' -- Granular code = 'TPB'

      ELSE 'UKATCOM|OTH'
    END AS bk_booking_type
    ,CASE WHEN bk.booking_status IS NULL
      THEN 'U'
      ELSE 'UKATCOM|' || bk.booking_status
    END AS bk_booking_status
    ,bk.atcom_res_id AS source_booking_id
    --,bk.atcom_res_version AS source_booking_version
    ,bk.booking_version AS source_booking_version -- swapped to FL version not Atcom version PiT
    ,COALESCE(CAST(bk.source_created_on AS TIMESTAMP), CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_created_datetime
    ,COALESCE(bk.confirmed_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_confirmed_datetime
    ,COALESCE(bk.cancelled_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS booking_cancelled_datetime
    ,gs.group_season_code AS group_season
    ,CASE WHEN bk.sk_season_id IS NULL OR bk.sk_season_id = -1 OR bk.sk_season_id = -2
      THEN NULL
      ELSE
        CASE WHEN SUBSTRING(bk.sk_season_id, 5, 2) = 01
          THEN 'S' || SUBSTRING(bk.sk_season_id, 3, 2)
          ELSE 'W' || SUBSTRING(bk.sk_season_id, 3, 2)
        END
    END AS sm_season
    ,CASE WHEN uc.cd IS NULL
      THEN NULL
      ELSE 'UKATCOM|' || uc.cd
    END AS channel_code
    ,CASE WHEN uc.name IS NULL
      THEN NULL
      ELSE 'UKATCOM|' || uc.name
    END AS channel_desc
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS booked_board_code
    ,CASE WHEN
        -- All accom services cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        =
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
          + SUM(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
      ELSE
        CASE WHEN
            COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
            = 0
          THEN NULL
          ELSE
            CASE WHEN
              COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              + COUNT(DISTINCT CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_cd ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              > 1
            THEN 'MULTI'

            ELSE 'UKATCOM|' || COALESCE(
                MIN(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
                ,MIN(CASE WHEN bs.service_type = 'AHOC' AND bs.sell_type = 'ACCM' AND bs.service_status = 'CON' THEN bs.board_name ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id)
              )
            END
        END
    END AS booked_board_name
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
      ELSE
        CASE WHEN SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
    END AS multi_room_booking
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      ELSE
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
    END AS number_of_booked_rooms
    ,CASE WHEN
        -- All accom services are cancelled
        SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
        = SUM(CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CNX' THEN 1 ELSE 0 END) OVER (PARTITION BY bs.sk_booking_id)
      THEN
        CASE WHEN COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
      ELSE
        CASE WHEN COUNT(DISTINCT CASE WHEN bs.service_type = 'ACC' AND bs.source_stock_type_code NOT IN ('MC') AND bs.service_status = 'CON' THEN bs.accom ELSE NULL END) OVER (PARTITION BY bs.sk_booking_id) > 1
          THEN 'Y'
          ELSE 'N'
        END
    END AS multi_centre_booking
    ,COALESCE(bk.season_date,CAST('2999-12-31 23:59:59.0' AS DATE)) AS departure_date
    ,COALESCE(
      bs.max_multi_center_date,
      bs.max_accom_date,
      bs.max_cruise_date,
      bs.max_flight_date,
      CAST('2999-12-31 23:59:59.0' AS DATE)
    ) AS return_date
    ,CASE WHEN
      COALESCE(bk.season_date, CAST('2999-12-31 23:59:59.0' AS DATE)) = CAST('2999-12-31 23:59:59.0' AS DATE)
    OR
      COALESCE(
        bs.max_multi_center_date,
        bs.max_accom_date,
        bs.max_cruise_date,
        bs.max_flight_date,
        CAST('2999-12-31 23:59:59.0' AS DATE)
      ) = CAST('2999-12-31 23:59:59.0' AS DATE)
    THEN 0
    ELSE
      DATEDIFF('DAY',
        bk.season_date
      ,
        COALESCE(
          bs.max_multi_center_date,
          bs.max_accom_date,
          bs.max_cruise_date,
          bs.max_flight_date)
      )
    END	AS DURATION
    ,COALESCE(bk.number_of_adults, 0) AS std_number_of_booking_adult_pax
    ,COALESCE(bk.number_of_children, 0) AS std_number_of_booking_child_pax
    ,COALESCE(bk.number_of_infants, 0) AS std_number_of_booking_infant_pax
    ,COALESCE(bk.number_of_passengers, 0) AS std_number_of_booking_pax
    ,COALESCE(bk.number_of_adults, 0) AS sm_number_of_booking_adult_pax
    ,0 AS sm_number_of_booking_teenager_pax
    ,COALESCE(bk.number_of_children, 0) AS sm_number_of_booking_child_pax
    ,COALESCE(bk.number_of_infants, 0) AS sm_number_of_booking_infant_pax
    ,COALESCE(bk.number_of_passengers, 0) AS sm_number_of_booking_pax
    ,CASE WHEN COUNT(DISTINCT bs.min_flight_gateway) OVER (PARTITION BY bk.atcom_res_id) > 1
      THEN 'MULTI'
      ELSE MIN(bs.min_flight_gateway) OVER (PARTITION BY bk.atcom_res_id)
    END AS primary_gateway
    -- ,cur.name AS currency
    ,'Insert' AS record_type
    ,COALESCE(bk.effective_from, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS effective_from
    ,COALESCE(
      bk.lead_effective_from
      ,bk.effective_to
      ,CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)
    ) AS effective_to
    ,COALESCE(bk.dwh_created_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS sm_created_datetime
    ,COALESCE(bk.dwh_modified_on, CAST('2999-12-31 23:59:59.0' AS TIMESTAMP)) AS sm_updated_datetime
    ,CAST(CONVERT_TIMEZONE('Europe/London',CURRENT_TIMESTAMP()) AS TIMESTAMP_NTZ) AS dm_created_datetime

  FROM OPA_DEV.DBT_TEST.with_fl_acr_booking bk
  LEFT OUTER JOIN booking_service bs ON bk.sk_booking_id = bs.sk_booking_id AND bk.booking_version = bs.booking_version

  -- Group Season
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_dates gs ON CAST(COALESCE(SUBSTRING(bk.season_date, 1, 4) || SUBSTRING(bk.season_date, 6, 2) || SUBSTRING(bk.season_date, 9, 2), 20991231) AS INTEGER) = gs.bk_date

  -- Market source
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_agent ag ON bk.atcom_agent_id = ag.agt_id

  -- V1.06 Version of source market joins
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_market m ON bk.atcom_market_id = m.mkt_id
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_officename ofn ON m.off_id = ofn.off_name_id

  -- Channel
  LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_ar_usercodes uc ON ag.agt_tp_id = uc.user_cd_id

  -- Currency
  -- LEFT OUTER JOIN ar_currency cur ON bk.atcom_sell_currency_id = cur.cur_id

  WHERE bk_booking IS NOT NULL
)

SELECT
  bf_1.bk_booking,
  bf_1.bk_primary_accom,
  bf_1.bk_primary_room,
  bf_1.bk_first_flight,
  bf_1.bk_last_flight,
  bf_1.bk_source_market,
  bf_1.bk_originating_system,
  bf_1.bk_booking_type,
  bf_1.bk_booking_status,
  bf_1.source_booking_id,
  bf_1.source_booking_version,
  bf_1.booking_created_datetime,
  bf_1.booking_confirmed_datetime,
  bf_1.booking_cancelled_datetime,
  bf_1.group_season,
  bf_1.sm_season,
  bf_1.channel_code,
  bf_1.channel_desc,
  bf_1.booked_board_code,
  bf_1.booked_board_name,
  bf_1.multi_room_booking,
  bf_1.number_of_booked_rooms,
  bf_1.multi_centre_booking,
  bf_1.departure_date,
  bf_1.return_date,
  bf_1.duration,
  bf_1.std_number_of_booking_adult_pax,
  bf_1.std_number_of_booking_child_pax,
  bf_1.std_number_of_booking_infant_pax,
  bf_1.std_number_of_booking_pax,
  bf_1.sm_number_of_booking_adult_pax,
  bf_1.sm_number_of_booking_teenager_pax,
  bf_1.sm_number_of_booking_child_pax,
  bf_1.sm_number_of_booking_infant_pax,
  bf_1.sm_number_of_booking_pax,
  bf_1.primary_gateway,
  COALESCE(bfm.sm_currency, fx.bk_sm_ccy, 'U') AS sm_currency,
  COALESCE(bfm.sm_revenue, 0) AS sm_revenue,
  COALESCE(bfm.sm_cnx_and_amend_revenue, 0) AS sm_cnx_and_amend_revenue,
  COALESCE(bfm.sm_accommodation_costs, 0) AS sm_accommodation_costs,
  COALESCE(bfm.sm_early_booking_discounts, 0) AS sm_early_booking_discounts,
  COALESCE(bfm.sm_late_booking_discounts, 0) AS sm_late_booking_discounts,
  COALESCE(bfm.sm_flying_costs, 0) AS sm_flying_costs,
  COALESCE(bfm.sm_other_costs, 0) AS sm_other_costs,
  COALESCE(bfm.sm_distribution_costs, 0) AS sm_distribution_costs,
  COALESCE(bfm.sm_non_margin_items, 0) AS sm_non_margin_items,
  COALESCE(bfm.sm_margin, 0) AS sm_margin,
  COALESCE(bfm.smg_currency, fx.bk_smg_ccy, 'U') AS smg_currency,
  COALESCE(bfm.smg_revenue, 0) AS smg_revenue,
  COALESCE(bfm.smg_cnx_and_amend_revenue, 0) AS smg_cnx_and_amend_revenue,
  COALESCE(bfm.smg_accommodation_costs, 0) AS smg_accommodation_costs,
  COALESCE(bfm.smg_early_booking_discounts, 0) AS smg_early_booking_discounts,
  COALESCE(bfm.smg_late_booking_discounts, 0) AS smg_late_booking_discounts,
  COALESCE(bfm.smg_flying_costs, 0) AS smg_flying_costs,
  COALESCE(bfm.smg_other_costs, 0) AS smg_other_costs,
  COALESCE(bfm.smg_distribution_costs, 0) AS smg_distribution_costs,
  COALESCE(bfm.smg_non_margin_items, 0) AS smg_non_margin_items,
  COALESCE(bfm.smg_margin, 0) AS smg_margin,
  COALESCE(bfm.rep_currency, fx.bk_rep_ccy, 'U') AS rep_currency,
  COALESCE(bfm.rep_revenue, 0) AS rep_revenue,
  COALESCE(bfm.rep_cnx_and_amend_revenue, 0) AS rep_cnx_and_amend_revenue,
  COALESCE(bfm.rep_accommodation_costs, 0) AS rep_accommodation_costs,
  COALESCE(bfm.rep_early_booking_discounts, 0) AS rep_early_booking_discounts,
  COALESCE(bfm.rep_late_booking_discounts, 0) AS rep_late_booking_discounts,
  COALESCE(bfm.rep_flying_costs, 0) AS rep_flying_costs,
  COALESCE(bfm.rep_other_costs, 0) AS rep_other_costs,
  COALESCE(bfm.rep_distribution_costs, 0) AS rep_distribution_costs,
  COALESCE(bfm.rep_non_margin_items, 0) AS rep_non_margin_items,
  COALESCE(bfm.rep_margin, 0) AS rep_margin,
  COALESCE(bfm.ffd_flag, 'N') AS ffd_flag,
  bf_1.record_type,
  bf_1.effective_from,
  bf_1.effective_to,
  bf_1.sm_created_datetime,
  bf_1.sm_updated_datetime,
  bf_1.dm_created_datetime,
  CASE WHEN bf_1.source_booking_version = MAX(bf_1.source_booking_version) OVER (PARTITION BY LEFT(bf_1.bk_booking, LENGTH(bf_1.bk_booking) - REGEXP_INSTR(bf_1.bk_booking, '|', 2)))
    THEN 'Y'
    ELSE 'N'
  END AS latest_record_indicator
FROM booking_fact_1 bf_1
LEFT OUTER JOIN OPA_DEV.DBT_TEST.with_booking_fact_margin bfm ON bf_1.bk_booking = bfm.bk_booking
LEFT OUTER JOIN opa_fl_all.source_market sm ON bf_1.bk_source_market = sm.bk_source_market
LEFT OUTER JOIN opa_fl_uk.fx_rates_dim_uk fx
  ON bf_1.sm_season = fx.bk_season
  AND sm.source_market_code = fx.source_market_code
ORDER BY
  bk_booking
  ,source_booking_version
  ,record_type DESC
      );
2019-10-01 14:54:14,006 (Thread-1): SQL status: SUCCESS 1 in 67.95 seconds
2019-10-01 14:54:14,007 (Thread-1): On booking_fact_uk: COMMIT
2019-10-01 14:54:14,007 (Thread-1): Using snowflake connection "booking_fact_uk".
2019-10-01 14:54:14,007 (Thread-1): On booking_fact_uk: COMMIT
2019-10-01 14:54:14,107 (Thread-1): SQL status: SUCCESS 1 in 0.10 seconds
2019-10-01 14:54:14,113 (Thread-1): 14:54:14 | 21 of 21 OK created table model DBT_TEST.booking_fact_uk............. [SUCCESS 1 in 68.78s]
2019-10-01 14:54:14,164 (MainThread): Using snowflake connection "master".
2019-10-01 14:54:14,164 (MainThread): On master: BEGIN
2019-10-01 14:54:14,277 (MainThread): SQL status: SUCCESS 1 in 0.11 seconds
2019-10-01 14:54:14,277 (MainThread): On master: COMMIT
2019-10-01 14:54:14,277 (MainThread): Using snowflake connection "master".
2019-10-01 14:54:14,277 (MainThread): On master: COMMIT
2019-10-01 14:54:14,452 (MainThread): SQL status: SUCCESS 1 in 0.17 seconds
2019-10-01 14:54:14,452 (MainThread): 14:54:14 | 
2019-10-01 14:54:14,453 (MainThread): 14:54:14 | Finished running 20 view models, 1 table model in 84.59s.
2019-10-01 14:54:14,453 (MainThread): Connection 'master' was left open.
2019-10-01 14:54:14,453 (MainThread): On master: Close
2019-10-01 14:54:14,628 (MainThread): Connection 'booking_fact_uk' was left open.
2019-10-01 14:54:14,629 (MainThread): On booking_fact_uk: Close
2019-10-01 14:54:14,893 (MainThread): 
2019-10-01 14:54:14,893 (MainThread): Completed successfully
2019-10-01 14:54:14,894 (MainThread): 
Done. PASS=21 WARN=0 ERROR=0 SKIP=0 TOTAL=21
2019-10-01 14:54:14,895 (MainThread): Flushing usage events
